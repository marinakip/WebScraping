"{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ayushsingh5941', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['3', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['DiabetesPrediction\nUses machine learning to predict diabetes for a patient.\nSet Up\nRequirements\n\nPython3\nPandas\nMatplotlib used for plotting\n\nInstall using:\npip install pandas \npip install matplotlib\n\n'], 'url_profile': 'https://github.com/seccret', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'Pakistan', 'stats_list': [['9', '          followers'], ['8', '          following'], ['1']], 'contributions': '567 contributions\n        in the last year', 'description': ['Diabetes_Identification\nDiabetes_Identification\n'], 'url_profile': 'https://github.com/MuhammadUsama100', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '33 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes,\nbased on certain diagnostic measurements included in the dataset. Several constraints were placed\non the selection of these instances from a larger database. In particular, all patients here are females\nat least 21 years old of Pima Indian heritage.\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome.\nPredictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age,\nand so on.\n'], 'url_profile': 'https://github.com/AkshayBhople', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/subash15', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '128 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/popeye98', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['18', '          following'], ['6']], 'contributions': '199 contributions\n        in the last year', 'description': ['pima_diabetes\npima_diabetes classification codes\n'], 'url_profile': 'https://github.com/Shakthi-Dhar', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'Bangalore', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['utkarshg13.github.com\nHealthcare – Diabetes Risk Stratification\n'], 'url_profile': 'https://github.com/utkarshg13', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['18']], 'contributions': '141 contributions\n        in the last year', 'description': ['Pima Indians Diabetes Dataset Classification\nAbstract - The diabetes dataset is a binary classification problem where it needs to be analysed whether a patient is suffering from the disease or not on the basis of many available features in the dataset. Different methods and procedures of cleaning the data, feature extraction, feature engineering and algorithms to predict the onset of diabetes are used based for diagnostic measure on Pima Indians Diabetes Dataset.\nDatabase - Pima Indians Diabetes Dataset Pima Indian Diabetes dataset has 9 attributes in total. All the person in records are females and the number of pregnancies they have had has been recorded as the first attribute of the dataset. Second is the value of Plasma glucose concentration a 2 hours in an oral glucose tolerance test and then is the Diastolic blood pressure (mm Hg), fourth in line is the Triceps skin fold thickness (mm), then is the 2-Hour serum insulin (mu U/ml), sixth is Body mass index (weight in kg/ (height in m) ^2) and then seventh is the Diabetes pedigree function and the second last value is the that of the Age (years). The ninth column is that of the Class variable (0 or 1), 0 for no diabetes and 1 for the presence. To start with we first take a description of the dataset. We infer not much from this except the facts like we have a data datset of 768 lines and the maximum values of the Age and Pregnancies. Nothing more is of much use for the prediction. We also calculated the number of datsets that were positive to the test of diabetes and those who were negetive and the value came out to be 268 and 500 respectively. We decided to take the mean value of BMI and found that the average value of a person suffering from the disease has mean BMI value as 35.14 which means that they are not healthy and obese. It is also interesting to note that the mean BMI value for the people who are not suffering from the disease is 30 which is the threshold value of people becoming obese. The mean value of the second parameter Glucose (Plasma glucose concentration) was done we found that those who suffered from the disease had mean value as 141.25 which indicates pre-diabetic state of hyperglycaemia that is associated with insulin resistance and increased risk of cardiovascular pathology\nMethod - A DNN Classifier is used for this binary classification. Batch size was set to 18 and number of epochs is set to 5000. This model produced an accuracy of 80.1% .\n'], 'url_profile': 'https://github.com/Mohith-TK', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '30 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/naman1799', 'info_list': ['Python', 'Updated Mar 14, 2020', 'Updated Mar 12, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', 'Java', 'Updated Mar 10, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 10, 2020', 'Python', 'Updated Mar 25, 2020', 'Updated Mar 12, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['diabetesprediction\n'], 'url_profile': 'https://github.com/iamnkv99', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/sagarchaudhary1994', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '14 contributions\n        in the last year', 'description': ['diabetes_dataset\n'], 'url_profile': 'https://github.com/dollcg24', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['14', '          following'], ['119']], 'contributions': '48 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/0zz1cl13', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'India', 'stats_list': [['71', '          followers'], ['65', '          following'], ['129']], 'contributions': '886 contributions\n        in the last year', 'description': ["" \n\nDiabetes Challenge\n\nMachine Learning in Health\nDiabetes is a condition that impairs the body's ability to process blood glucose, otherwise known as blood sugar. In the United States, the estimated number of people over 18 years of age with diagnosed and undiagnosed diabetes is 30.2 million. The figure represents between 27.9 and 32.7 percent of the population.\nWithout ongoing, careful management, diabetes can lead to a buildup of sugars in the blood, which can increase the risk of dangerous complications, including stroke and heart disease.\nDifferent kinds of diabetes can occur, and managing the condition depends on the type. Not all forms of diabetes stem from a person being overweight or leading an inactive lifestyle. In fact, some are present from childhood.\nCloning\n$ git clone https://github.com/KushalBhanot/Diabetes-Classification.git\n""], 'url_profile': 'https://github.com/KushalBhanot', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'Hyderabad', 'stats_list': [['1', '          follower'], ['10', '          following'], ['4']], 'contributions': '44 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sachin10397', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '27 contributions\n        in the last year', 'description': ['DIABETES ANALYSIS PROJECT\nEXECUTIVE SUMMARY\nPROBLEM STATEMENT\nAccording to the CDC’s (Centers for Disease Control) National Diabetes Statistics Report for 2020 cases of diabetes have risen to an estimated 34.2 million. In other words 10.5% of the U.S. population, have diabetes. An estimated 26.8 million people - or 10.2% of the population - had diagnosed diabetes. Approximately 7.3 million people have diabetes but have not yet been diagnosed (2018).\nAccording to Ostling et al, patients with diabetes have almost double the chance of being hospitalized than the general population (The relationship between diabetes mellitus and 30-day readmission rates, Clinical Diabetes and Endocrinology volume 3, Article number: 3 (2017) Ostling et al).\nMy project will focus on predicting hospital readmission for patients with diabetes. I will use predictive modeling(different types of machine learning methods) from data science to help identify these readmission.\nOUR OBJECTIVES\n\nSearch up the clinical data related to diabetes.\nStudy the datasets and identify the readmission cases\n\nDeploy Natural Language Processing and Bag of Word methods to convert words to words vectors\nExplore data analysis on data\n\n\nConstruct several classification models and evaluate for accuracy of predictions\nAnalyze the feature importance and find useful imformation\n\nEXECUTIVE SUMMARY\nStep 1: Collect the data related to diabetes\nThe database was clinical data which contain different types of valuable data from over 130 US hospitals. There are two types of data are used in my project. One is discharge summaries(NLP) that the doctor gave when the patient was discharged. Another kind is the clinical records(numerical_categorical) including patient demographics(age, sex and race) and in-hospital precedures and medications.\nStep 2: Identify the readmission cases\nThe data was extracted from the original database that satisfied the following criteria:\n(1) The primary diagnose is diabete(any type).\n(2) The length of stay was at least 1 day and at most 14 days.\n(3) Laboratory tests were performed during the encounter.\n(4) Medications were administered during the encouter.\n(5) The cases of deseased are not included\n(6) For readmitted for several times for each identity patient, only the first and second admission were considered.\nStep 3: Data Split and Working of Models\nOnce the dataset was created and cleaned, first thing is to explore the dataset that I got. One essential fact about these two datasets is that they are both pretty unbalanced which is typical in healthcare field. The readmitted within 30 days is labeled as 1 and not readmitted or readmitted over 30 days were labeled as 0. The positvie ratio is less than 10% in both datasets.\nSeveral classification machine learining models were used to predict the readmission. Logistic Regression, Random Forest, XG Boost and Feed Forward Neural Network were performed badly on the unbalanced dataset. So I decided to balance the splitted training set and testing set seperately. Better performances were obtained.\nThe Logistic Regression couldn\'t converge after I tried to tuning the parameters. Other models shows different prediction abilities. I will choose the highest performing model and apply to prediction. The feature importance is explained based on this model.\nIn addition, the Covolutional Neural Network will be tried to work on NLP.\nRESULTS AND DISCUSSION\n1. DATASET BALANCE\nIn comparison, both datasets without balancing couldn\'t get a good performance for all models that I used. After training the datasets, the models couldn\'t correctly predict any positive. This is due to limit number of cases in the positive class. The SMOTE method was introduced to randomly sample the positive class and eventrally built a balanced dataset for train and test seperately. The unbalanced dataset in healthcare field is typical. So how to improve the performance of models on extremly unbalanced data is still need more work or update of the new models.\n2. MODEL PERFORMANCE\nBased on the performance of all models, XG Boost shows the outstanding prediction ability. It gave about 96% accuracy on NLP dataset and 94% accuracy on numerical_categorical dataset. The probabilities of predicting variables were plotted. Also the ROC curves of Multinomial NaiveBayes, Random Forest and XG Boost were plotted. The conclusion from the figures are confirmed that metrics result. We conclused that XG Boost has the most efficient predicting ability on both dataset.\n3. RESULTS OF FEATURE IMPORTANCE\nSince XG Boost shows the best results, the features from this model is studied. The feature importance were studied for both datasets. SHAP (SHapley Additive exPlanations) a unified approach to explain the output of machine learning model was used to  explain the feature importance by calculated SHAP values. Many useful predicting facts were explored.\n*4. MODEL STUDY ON NEURAL NETWORK\nNeural network model was used for both dataset. It shows better performance on NLP data when I used CountVectorizer to preprocess the text file. For numerical and categorical data, neural network didn\'t show any advantages. More work was done with NLP data. With adding a embedding layer and hidden layer in NLP data. The model performance improved a lot. The effect of max length on accuracy was also studied.\nCONCLUSIONS\n1.Due to the less information from the minority class, machine learning models couldn’t predict the minority class efficiently. By using SMOTE to balance the dataset can solve this problem in my study.\n2.XG Boost showed much better results than other models.\n3.The features in UCI data and MIMIC data were studied with SHAP values. Many useful informations were obtained from analyzing the value of each features.\n4.Neural Network didn’t show success in UCI dataset. But neural network did show some significant improvement in NLP data(MIMIC dataset) when I induced the embedding matrix.\nCONTENTS\n\nCODE NOTEBOOKS\nDATA FILES\nPRESENTATION\nIMAGES\nREADME\n\nSOURCE DOCUMENTATION\nSource: ""MIMIC-CXR Database""\nhttps://physionet.org/content/mimic-cxr/2.0.0/#files\nSource: ""Diabetes 130 US hospitals for years 1999-2008""\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\n'], 'url_profile': 'https://github.com/github2019ct', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['14', '          following'], ['119']], 'contributions': '48 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/0zz1cl13', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['Predict-diabetes\nPredicted whether patient is dibateic or not using LOgistic regression, classiffiaction tree and random forest algorithm\n'], 'url_profile': 'https://github.com/snehalshetye9016', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}","{'location': 'New York', 'stats_list': [], 'contributions': '1 contribution\n        in the last year', 'description': ['Author:\nAdriana Vesa\n\nLinkedIn Profile\nGitHub Profile\nBased in New York\n\nJupyter Notebook\nProblem statement\nPosts published on the social media impact decisions made by people all over the world in all kind of situations, including health care and health care related topics. Type 1 diabetes is a chronic disease that can start in early childhood and adolescence - and it requires lifelong daily management, including testing, adjusting medication doses, and diet management through various means. When it comes to type 1 diabetes, the options available for diabetics to improve their condition are extremely varied - from medication to testing equipment, to insulin delivering systems, and continuous glucose monitors. A lot of the care is administered by parents - since the disease can commence very early in life - and parents rely on online communities for advice and psychological support (Balkhi, Reid, McNamara, Geffken - ""The diabetes online community: the importance of forum use in parents of children with type 1 diabetes"" - https://onlinelibrary.wiley.com/doi/abs/10.1111/pedi.12110). We believe it is important to understand the sources of stress and the topics that present interest to people affected by type 1 diabetes, as diabetic distress can impact the condition itself and it is studied as such (Polonsky, Fisher, Earles, Dudl, Lees, Mullan, and Jackson, - ""Assessing Psychosocial Distress in Diabetes Development of the Diabetes Distress Scale"") - and we will therefore acquire data from the reddit type 1 diabetes thread for the past 100 days - starting with february 18th - and analyze these posts in order to find out the main topics of interest for type 1 diabetics. We will use unsupervised machine learning to explore these posts. Unsupervised machine learning is a class of techniques used to find pattern in data. Tha data given to an unsupervised algorithm will not be labeled - which means we will have only an input variable X - and no corresponding varriable. We will use K-means in order to explore the clustering of our data - and we will explore the silhouette score in order to obtain the best clustering choices.\nProvided Data\nFFor this project we have acquired data by scrapping from reddit - using Pushshift\'s API from the type 1 diabetes reddit subthread. We have this process in the notebook diabetes_scrapping.ipynb\n\nData Dictionary\nFor diabetes_t1_2.csv:\n\n\n\nFeature\nType\nDescription\n\n\n\n\ntitle\nobject\npost title\n\n\nselftext\nobject\npost text\n\n\nsubreddit\nobject\nsubreddit thread\n\n\ncreated_utc\nint\ntime\n\n\nauthor\nobject\nauthor\n\n\nnum_comments\nint\nnumber of comments\n\n\nscore\nint\nscore\n\n\nis_self\nbool\nis this the original post or a repost\n\n\ntimestamp\nobject\ntime\n\n\n\n\nExecutive Summary\nWe have obtained a set of data that contains posts from the the type 1 Diabetes subreddit thread for 100 days from 2019 - starting back from February 18th 2020. after dropping all the empty rows in our data, we are left with a total of 4283 posts. Our target is to analyze these posts using Natural Language Processing Unsupervised Machine learning and the K-Means clustering and see if any meaningful clustering will emerge, that will help us identify the topics of interest that emerge in the type 1 diabetic online community.\nK-means is a method of vector quantization, that is popular for cluster analysis in data mining which aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean, serving as a prototype of the cluster.\nAfter we import our data, we tokenize it in order to clean the text and get it ready to be vectorized. We ran both CountVectorizer and TFIDF vectorizers on our text, and realized that TFIDF will make a better candidate for preprocessing our data in order to be clustered with the k-means model.\nWe have then decided to use TFIDF with a maximum number of 10000 features (that is tokenized words in our case). Once we have ran TFIDF on our posts, and obtained our sparse matrix, we proceeded to use it in order to calculate the silhouette score for a number of k (clusters) between 5 and 50. We aimed to find the highest silhouette score in order to find the best clustering. However, as soon as we ran our search and plotted our inertia and silhouette scores, we noticed that the silhouette score is very small - starts at 0.004, and at k=50 it starts to hover at 0.01, and that means for us that we wont be able to use it very efficiently in order to choose our cluster number. Still, we use the first observed ""elbow"" in our silhouette graph - at k=6 - and we decide on a clustering on 6 centroids.\nWe then proceed to analyze each cluster, and the words that have the highest TFIDF sum in the specific cluster, and their general frequency in the cluster. That way we will see what topics emerge from our analysis.\nDrawbacks, Conclusions, and Further Steps:\nOne of the drawbacks of this study is the limited number of posts. Possibly with more than 100 days - and more than 4200 posts - we would have had more information about the topics of interest for type 1 diabetics. At the same time, another limitation is the very close clustering - with the small silhouette score. A clustering on about 30 clusters would have made a small difference as the silhouette score would have been 0.01 and not 0.06 - but clustering on 30 clusters with only 4200 posts felt like it will become too granular.\nAnother drawback was the presence of the removed posts - which for further studies will have to be handled on a case by case basis - and removed posts will have to be verified individually before they can be dropped from the dataframe.\nWe conclude that the topics of interest for diabetics fall into several categories:\nThe largest group has to do with broadly with health insurance - and the blood tests that are considered essential for monitoring how well a diabetic\'s condition is managed.\nA very large one - composed actually of three clusters we found, is the technology a type 1 diabetic can use in order to manage their condition - continuous glucose monitors of various kinds, and the pumps that can be used to administer the insulin without daily injections - and all the connected issues.\nAnd the third large group has to do with managing the low blood sugar episodes, the high blood sugar episodes, disruption of sleep and the general diet followed.\nAfter this brief study - we can see that the sources of stress as reflected by topics of discussion on the reddit forum seem to fall  under a couple of categories - health insurance and lack thereof, managing the technology used for monitoring the blood sugar and administering insulin, managing episodes of low or high blood sugar, and how they impact the diabetic\'s nights.\nAt the same time - we can safely draw the conclusion that the existence of online forums where type 1 diabetics exchange opinions offers comfort and help to thousand of people suffering from this condition. This is a daily struggle - and the people that understand it the best are people suffering from the same condition. From advice about technology, to a mere cry for help or compassion, social media can help diabetics feel less isolated, and get emotional support in a direct way from peers.\nFurther steps.\nWe would like to explore this subject further by acquiring more data and obtaining a stronger capacity processor, in order to find out if the clustering would look different on more than 4200 posts. The most important find that we would like to explore further is the fact that night disruption in type 1 diabetics is not explored as much as we would have thought. Exploring this topic would potentially lead to solutions that could improve a diabetic\'s quality of life.\n'], 'url_profile': 'https://github.com/adrianavesa', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 17, 2020', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 19, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': ['diabetes-prediction\n'], 'url_profile': 'https://github.com/gitartha12', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '21 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/minsh30', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['13']], 'contributions': '214 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/bitsofishan', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'Bangladesh', 'stats_list': [['2', '          followers'], ['57', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes\nData Science project(Pima Indians Diabetes)\n'], 'url_profile': 'https://github.com/biplob', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'Bangalore', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '12 contributions\n        in the last year', 'description': ['Pima-Diabetes-Ipshita\nComparison of different Machine Learning Algorithms\nThe dataset used here has been originally obtained from the National Institute of Diabetes and Kidney Diseases. The objective of the dataset is to diagnostically predict whether a patient is diabetic based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. All patients here are females at least 21 years old of Pima Indian Heritage.\nThe dataset consists of several medical predictor variables and one Target Variable ‘Outcome’, i.e., whether the patient has diabetes or not. Predictor Variables include the Number of Pregnancies the patient has had, their BMI, Insulin levels, Age, Glucose levels, Blood Pressure, Skin Thickness and Diabetes Pedigree Function.\nThis project aims at comparing different Machine Learning Classification algorithms, namely Naive Bayes, Random Forest and Logistic Regression based on their accuracy in classifying diffrent data points.\nIt was found that Random Forest was the best classifier among the three.\n'], 'url_profile': 'https://github.com/Ipshita09', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'Melbourne, Australia', 'stats_list': [], 'contributions': '206 contributions\n        in the last year', 'description': ['Diabetes-prevention-app-development\nThis project is a development of an application to assist people that are concerned about their own health, specifically\ndiabetic related disease. Functions in this app include: diabetes risk assessment tool, food nutrition information and\nrecommendation, and exercise tracking. This project adopted agile software development method with three iterations.\nTasks in this project includes:\n\nProposal and iteration report writing;\nPACT analysts;\nStakeholder analysis;\nPersonas, epics and users’ stories development;\nRisk analysis and mitigation strategy development;\nAcceptance form;\nData use and detail;\nTesting plan;\nProduct video;\nExhibition showcasing application;\n\n\n\nAs the project coordinator and the data scientist of the project, my works include:\n\nMaintain and monitor project plan and schedules.\nOrganise and host stakeholder meetings\nDocumenting and follow up on important actions and decisions from meetings.\nEnsure deadlines are met.\nCommunicate with project members and provide administrative support to team.\nCreate project management calendar\nResearch and manage data source.\n\n\n'], 'url_profile': 'https://github.com/Ellena-F', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'Pune', 'stats_list': [['0', '          followers'], ['2', '          following'], ['2']], 'contributions': '26 contributions\n        in the last year', 'description': [""Diabetes-Treatment-analysiss\nDiabetes is a medical condition that affects approximately 1 in 10 patients in the United States. According to Ostling et al, patients with diabetes have almost double the chance of being hospitalized than the general population (Ostling et al 2017).   Therefore, we would be creating a model, which will focus on:\n1.The hospitals are evaluating efficiency of Insulin based treatment for patients, recommend if solo insulin treatments work well towards the above stated objective. We would be focusing on the result of insulin on different age groups\n2. For a new patient, given his medical history and characteristics, should we recommend  solo insulin or a conjunction of other drugs/ treatment?\nKnowing the data\nThe data are submitted on behalf of the Center for Clinical and Translational Research, Virginia Commonwealth University, a recipient of NIH CTSA grant UL1 TR00058 and a recipient of the CERNER data. John Clore (jclore '@' vcu.edu), Krzysztof J. Cios (kcios '@' vcu.edu), Jon DeShazo (jpdeshazo '@' vcu.edu), and Beata Strack (strackb '@' vcu.edu). This data is a de-identified abstract of the Health Facts database (Cerner Corporation, Kansas City, MO).\nCitation: Beata Strack, Jonathan P. DeShazo, Chris Gennings, Juan L. Olmo, Sebastian Ventura, Krzysztof J. Cios, and John N. Clore, “Impact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records,” BioMed Research International, vol. 2014, Article ID 781670, 11 pages, 2014.\nThe dataset has over 50 features including patient characteristics, conditions, tests and 23 medications.\nSome key features of the Data Set:\n\n\nNumerical Features:\n1\tTime in Hospital\n2\t# of lab procedure\n3\t# of medications\n4\t# of outpatient visits\n5\t# of emergency visit\n6\t# of admissions\n\n\nCategorical Features:\n1\tMedication change\n2\tHbA1c test\n3\tRace\n4\tGender\n5\tAge\n6\tReadmission\n\n\n""], 'url_profile': 'https://github.com/premdiddi', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sksharath', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'Banglore', 'stats_list': [['1', '          follower'], ['2', '          following'], ['20']], 'contributions': '71 contributions\n        in the last year', 'description': ['PCA-Pima-diabetes-data\nData Set – diabetic  Data Information:- The datasets consist of several medical predictor (independent) variables and one target (dependent) variable, Outcome. Independent variables include the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.  Attribute information :- Pregnancies - Number of times pregnant Glucose - Plasma glucose concentration a 2 hours in an oral glucose tolerance test BloodPressure - Diastolic blood pressure (mm Hg) SkinThickness - Triceps skin fold thickness (mm) Insulin - 2-Hour serum insulin (mu U/ml) BMI - Body mass index (weight in kg/(height in m)^2) DiabetesPedigreeFunction - Diabetes pedigree function Age - Age (years) Outcome - Class variable (0 or 1) 268 of 768 are 1, the others are 0  In class Assignment Expectations/Steps -  Apply Data Cleaning to the Datasets and then apply PCA Find pattern and the choose the number of desired Principal components. Provide the inferences for the above analysis.\n'], 'url_profile': 'https://github.com/chandana124', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '79 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ducnguyen4993', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Oct 14, 2020', '1', 'Python', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Python', 'Updated Mar 14, 2020', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Scala', 'Updated Mar 13, 2020', 'HTML', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '33 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Dhruv0103', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '35 contributions\n        in the last year', 'description': ['Health-Sheet\nA health sheet of gestational diabetes.\n'], 'url_profile': 'https://github.com/farhattameem', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'Malta', 'stats_list': [['5', '          followers'], ['7', '          following'], ['26']], 'contributions': '207 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/DeltSystem32', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nitaycal', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'Chicago, IL', 'stats_list': [['2', '          followers'], ['3', '          following'], ['0']], 'contributions': '13 contributions\n        in the last year', 'description': ['""# Diabetes-Retinopathy-Image-Classification""\n'], 'url_profile': 'https://github.com/aartirao20', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'California ', 'stats_list': [['5', '          followers'], ['23', '          following'], ['4']], 'contributions': '108 contributions\n        in the last year', 'description': ['Classifier whether the patient has diabetes or not.\n3 different classifiers used.\nKnn, Naive Bayes, Logistic regression\nCustom defined models vs Library defined models\nComparing accuracy and error.\n'], 'url_profile': 'https://github.com/saahil-sutaria', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'Delhi', 'stats_list': [], 'contributions': '171 contributions\n        in the last year', 'description': ['Flask-model-deployment\nThe disease of diabetes has become very common today.\nA report was published which tells more than 100 million U.S. adults are now living with diabetes or prediabetes.\n\nSo it becomes a primary need for anyone to make the regular checkups for the diabetes.\nThis classifier classifies a person is diabetic or not based on patient health and this service is hosted directly on web.\nModel takes some values related to the patient are 1)Number of times pregnant, 2)Plasma glucose concentration a 2 hours in an oral glucose tolerance test, 3)Diastolic blood pressure (mm Hg), 4)Triceps skin fold thickness (mm), 5)2-Hour serum insulin (mu U/ml),6)Body mass index (weight in kg/(height in m)^2), 7)Diabetes pedigree function, 8)Age and will tell patient is diabetic or not.\nModel is bulit using Random Forest Classifier for model creation and being hosted on web using flask.\nModel is also built with XGB and with both RFC and XGB some variations are used.\nDownload the files and use by your own.\nDataset\nhttps://www.kaggle.com/uciml/pima-indians-diabetes-database\nAccuracy:\nI used diffrent variation in this like ----\n1.) Balanced and imbalanced dataset,\n2.) Scaled or unscaled data,\n3.) With hyperparameter tuning or not.\nSo accuracy was ranging from 74 to 85 percent.\nThe best with XGB is 84% with balanced and unscaled data with hyperparameter tuning, and\nThe best with Randomforest was 85% with balanced and unscaled data with hyperparameter tuning.\nModel deployment\nCheck out the model deployment over heroku platform:. https://diabetesnew.herokuapp.com/\n\n'], 'url_profile': 'https://github.com/shalom217', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['0', '          following'], ['0']], 'contributions': '34 contributions\n        in the last year', 'description': ['Predicting Hemoglobin A1c Levels in Diabetes Patients Using Frequency of Visits\nProblem Statement\nA non profit clinic wants to know whether or not frequency of patient visits has an impact on their overall A1c level. If a patient\'s A1c level is at or above 8, they are categorized as being uncontrolled. This is an unhealthy state for a diabetic individual to be in, and they are advised to take action to decrease it. If a patient comes in more frequently, is there a higher likelihood that their A1c level is controlled? Although correlation does not imply causation, we\'d like to explore potential patterns in the data.\nOur success can be validated if we are able to answer and/or do the following:\n\nAre patients more likely to have a lower and controlled A1c if they visit more frequently?\nCan we predict based off of frequency of visits or time in between visits, what the patient\'s A1c is?\nMight factors like age also have an impact on A1c levels?\nSince we have access to the summary of the patient visits, I also think it\'s worthwhile to use natural language processing in an attempt to predict control level.\n\nTo get a better understanding of a1c levels, you can find an accurate depiction here: https://www.thediabetescouncil.com/wp-content/uploads/2016/09/IG-2-1-e1474921980344.jpg. This clinic considered any a1c level above 8 as uncontrolled.\nTable of Contents\n\nData Cleaning\nData Cleaning and Spliting Data\nFeature Engineering\nFeature Engineering\nFeature Engineering\nExploratory Data Analysis\nModeling\nNLP and Modeling\n\nThe clinic\'s senior data analyst provided me with anonymized data (HIPPA compliant) that included the following:\nData Dictionary\n\n\n\nFeature\nType\nDataset\nDescription\n\n\n\n\nPatientId\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset patient id\n\n\nAge\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset patient age\n\n\nBirthdate\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset: patient date of birth\n\n\nVisitDate\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset: visit dates of patient\n\n\nSUMMARY\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset: summary of patient visit\n\n\nOBSDATE\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset: date patient got bloodwork done\n\n\nDate of A1c\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset: patient a1c levels\n\n\nInsurance\nobject\nA1c_Data_Requesta1c.csv\nOriginal dataset patient insurance information\n\n\npatient_id\nint\ncleaned_data.csv\nPart of the cleaned version of data :patient\'s id\n\n\nage\nfloat\ncleaned_data.csv\nPart of the cleaned version of data: patient\'s age\n\n\nvisit_date\ndatetime\ncleaned_data.csv\nPart of the cleaned version of data: data of patient\'s visit\n\n\nsummary\nobject\ncleaned_data.csv\nPart of the cleaned version of data: summary of patient\'s visit\n\n\nobs_date\ndatetime\ncleaned_data.csv\nPart of the cleaned version of data: date that a patient got their blood drawn\n\n\na1c\nfloat\ncleaned_data.csv\nPart of the cleaned version of data: a1c of patient on date of observation\n\n\na1c_level\nfloat\ncleaned_data.csv\nPart of the cleaned version of data: a1c level of patient on date of observation\n\n\npatient_id\nfloat\nnew_df.csv\nData used for modelling\n\n\nage\nfloat\nnew_df.csv\nData used for modelling\n\n\nnum_visits\nfloat\nnew_df.csv\nData used for modelling\n\n\navg_time_between_visits\nfloat\nnew_df.csv\nData used for modelling\n\n\navg_a1c\nfloat\nnew_df.csv\nData used for modelling\n\n\navg_control_level\nfloat\nnew_df.csv\nData used for modelling\n\n\nnum_obs\nfloat\nnew_df.csv\nData used for modelling\n\n\n\nData Files: What each file represents\n\nA1c_Data_Requesta1c.csv - original dataset\ncleaned_data.csv - cleaned dataset\ndate_a1c_df.csv- dataset with  observation date and a1c levels\nnew_df_for_modelling.csv - dataset used for modeling, each row represents a different patient\nsorted_sum_data.csv - dataset that includes patient visit information,average time between visits, and average a1c for each patient\nsummary_and_visit_df.csv - dataset that includes patient visit information\nsorted_summary_with_avg_visits.csv - dataset that includes patient visit information and average time between visits for each patient\n\nExecutive Summary\nI analyzed and cleaned the data, then modelled using the following process:\nData Cleaning and Normalization\nWe have 273,485 rows of data and 8 columns. This data represents 1,099 patients. This is the process I took to normalize and clean the data:\nData Clean\n\nChanged column names\nDropped rows where A1c is null, since there were only 32 our of 273,485 rows\nChanged data types to represent datetime columns (observation date and visit date) and objects to floats.\nRemoved or fix outliers: found a minimum too low for A1c. Changed .089 to 8.9 and dropped 1.7 a1c levels.\nCreated an additional column that marks each patients A1c as controlled as our positive class 1 or uncontrolled as our negative class 0\nEach patient has multiple types of insurances listed, and we are unsure which is the most updated one or what many of them mean. For this reason, we eliminated this column for further analysis.\n\nData Split\n\nThis data was not normalized, there are two dataframes grouped together in a way that makes it difficult to analyze. One is responsible for a1c and when bloodwork was done, and the other holds information only on office visits. This also created many duplicates in the original dataset\n- I split the data into two dataframes and dropped the duplicates in each. One containing visit information, and the other containing bloodwork information\n- In doing so, I discovered that people come in a lot more frequently than they get their blood work taken. Originally having 61943 rows in each dataframe, I ended up with 3617 for bloodwork and 14197 for visit information.\n\nFeature Engineering\nSince there were a few things done to manipulate the data, there are 3 notebooks dedicated to feature engineering. This was done so that when I or anyone else come back to the project, certain functions that take some time to run to always have to be rerun. The updated data is saved in a csv for this reason.\n\nI created a function to count how many unique visits and unique observation dates each patient had. That way, we could use the total number per each patient to see if this has an impact on A1c levels\nI built a function that calculated time between visits, and then from this the average time in between visits to be used as a feature for predicting whether or not the patient would be controlled or uncontrolled.\nTo model using NLP, I combined and stemmed all summary text together and added it to each respective patient\'s row.\nI built a function to add average A1c of each patient as an additional column, and from this added a column to represent a patient\'s average control level.\n\nEDA:\n\nBuilt a heatmap to see any strong correlations between a1c and other columns. Although heatmaps shouldn\'t usually be used with data concerning health, I was curious to see if there would be any type of correlation with a1c. The chart doesn\'t show that there is.\nLooked at average control level and average time between visits on a bar plot. There didn\'t seem to be a significant difference between number of visits and control level.\nPlotted average control level(controlled or uncontrolled) and number of visits on a bar plot. Most of our data points are clustered to the bottom left hand side with a few outliers.\nClustering by average time between visits: we see there is a pattern in how much time patients take to come back for a visit, but this doesn\'t show a difference in their a1c levels.\nPlotting histogtams to see if features in our data follow a normal distribution: it doesn\'t.\nLooked at most frequently used words in both controlled and uncontrolled\nLooked at most frequently used words in controlled\nLooked at most frequently used words in uncontrolled\n\nWords like hypertension, diabetes, lab, check and refill appear to be in both controlled and uncontrolled groups. I didn\'t see any major differences in language used for each type of patient.\n\n\n\nModeling\nI decided to try both regression and classification modeling. Regression would be used to predict the patient\'s average A1c score. Classification would be used to predict whether or not the patient on average was controlled or uncontrolled.\nLinear Regression\nLinear regression was used to predict average a1c for each patient. It is also worth noting that with this type of data, it is unlikely that all MLR assumptions are being met.\nHow well does the model predict average a1c if we just use average time between visits and number of visits for our features?\nWe get a score on the training set of 0.006 and 0.0116 on the testing set. If we add in age and number of observations,  we still get a low score on the training set of 0.076 and a score of 0.088 on the testing set. The score doesn\'t change even when we round our a1c levels.\nLogistic Regression\nNext I wanted to see if we could better predict average control level (whether or not on average, a patient is controlled or uncontrolled) using logistic regression. Our baseline score for classification was .60. Logistic regression had a score on the training set of 0.675 and score on the test set of 0.636.\nFrom this model, we can make a few (relatively unhelpful) inferences:\n- As average time between visits increases by 1 day, someone is about 1.002 times as likely to be controlled.\n- As age increases by 1, someone is about 1.002 times as likely to be controlled.\n- As num visits increases by 1, someone is about 1.04 times as likely to be controlled.\n- As person has more observations done, they are less likely to be in the positive class and controlled (.36 times as likely to be negative class)\nDecision Tree Classifier\nThe Decision Tree Classifier gave us a sensitivity of 0.3652 and specificity of 0.7237. Using gridsearch, our best score on the testing set was .57. In a healthcare setting, usually you want to optimize for sensitivity. Here, our specificity score (optimizing for true negatives) is much higher than our sensitivity score (optimizing for true positives). We would rather tell a patient who is controlled that they are not as opposed to telling a patient they are controlled when they are not.\nRandom Forest Classifier\nIn a healthcare setting, usually you want to optimize for sensitivity. Here, our specificity score (optimizing for true negatives) is much higher than our sensitivity score (optimizing for true positives). We would rather tell a patient who is controlled that they are not as opposed to telling a patient they are controlled when they are not. With Random Forest Classifier, we will attempt to optimize for sensitivity using Kevin Arvai\'s post and code on how to optimize for sensitivity: https://towardsdatascience.com/fine-tuning-a-classifier-in-scikit-learn-66e048c21e65. Kevin talks about two ways to optimize for sensitivity, we use the first he mentions in the post: GridSearchCV to tune your model by searching for the best hyperparameters and keeping the classifier with the highest recall score. Using this, we still end up with an accuracy score close to baseline and a recall score of .209.\nNatural Language Processing on summary text for patient visits\nHere, I used both CountVectorizer and TfidVectorizer and MultinomialNB to see which transformer would give the best result, including stop words and no stop words. Our NLP best score was .635. We used the ""clean_text"" feature to predict whether or not the patient was 0(uncontrolled) or 1 (controlled). The clean_text feature was the stemmed version of all the summary text summed together from the patient\'s every visit. We train/test/split and created a pipeline and gridsearch using both CountVectorizer and TfidVectorizer with MultinomialNB to see which transformer would give the best result.\nModelling using NLP still doesn\'t perform that much better than our baseline score\nConclusions and Limitations\nWhen attempting to predict average A1c of patient\'s based soley off of average time between visits and number of visits, our model does not perform well. Even when we add in age and number of observtions for each patient, there is little improvement. Our best accuracy score for prediting if a patient was controlled or uncontrolled on average is .64, which still isn\'t that much better than our baseline score of .60. It seems that from this dataset, frequency of visits and average time between visits for each patient is not a good indicator of average a1c or control levels. There was perhaps some indication that more time in between visits was correlated with lower average a1c levels, but we\'d need to investigate this further in a controlled experiment.\nIt is difficult to make any solid conclusions from this analysis given the limitations of the project and lack of knowledge on the subject matter. The task at hand was more challenging given how the data was gathered, stored, and pulled. The inconsistency of visits and when blood work drawn also acted as a limitation. Having to manipulate the data (taking the average number of days between visits and average a1c levels to model and make predictions) also doesn\'t seem like the optimal approach given how unreliable averages can be at times.\nFinally, correlation does not mean causation - perhaps the patients who on average are controlled, come in for fewer visits since they don\'t feel the need to see a doctor.\nTo answer the questions we states above:\n\n\nAre patients more likely to have a lower and controlled A1c if they visit more frequently?\nIt doesn\'t look like it from an initial analysis, but we need more information.\n\n\nCan we predict based off of frequency of visits or time in between visits, what the patient\'s A1c is?\nNot really, but we could possibly if we run an experiment.\n\n\nMight factors like age also have an impact on A1c levels?\nIt seems like this might have a small impact, but not so significant (see above for inferences)\n\n\nSince we have access to the summary of the patient visits, I also think it\'s worthwhile to use natural language processing in an attempt to predict control level.\n\n\nNLP also didn\'t perform that much better than our baseline score.\nFuture Work\nRunning an experiment to test hypothesis\nI believe we can draw stronger conclusions if we could run a randomized experiment where patients had to come in every 1 month or 3 months for a visit and must get their bloodwork done on the date of visit. This would allow us to more accurately test the hypothesis that more frequent visits meant lower a1c levels. I\'d also like to conduct more research to understand all factors that contribue to a patient\'s A1c level.\nData Normalization\nThe data was put together differently; Having one row per patient would have given us more clarity with how to approach modelling. Additionally, I\'d like to look at each individual patient\'s data as a whole. Was the patient\'s a1c lower when they waited less time for their next visit? Perhaps having data on fewer patients but in an organized manner would also help with this type of analysis, as opposed to grouping everything together.\nClean Code\nI\'d like to go back to make sure I\'ve written my code efficiently. There are a few functions where I manipulate my data that could be more performative. I\'d also like to experiment with cleaning the data differently - perhaps using the average levels for a1c and average time between visits isn\'t the best way to look at the data.\nFeature Engineering\nI am going to continue to feature engineer to see if we\'ve missed any important features that, when put together, impact a1c.\n'], 'url_profile': 'https://github.com/dmiz6393', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '124 contributions\n        in the last year', 'description': ['Machine-Learning-Project-Predicting-Diabetes\nPredicting Onset of Diabetes using Classification Algorithms\nPredicting Diabetes using Classification\nMachine Learning Project\nIn this project, onset of diabetes is predicted based on different diagnostics measures. The dataset used is the Pima Indians Diabetes Database taken from kaggle. All All the patients in the dataset are females atleast 21 years of age and of Pima Indian heritage.\nThe different variables used in the prediction of the outcome are:\n\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance\nBlood Pressure: Diastolic blood pressure (mmHg)\nSkin Thickness: Triceps skin fold thickness\nInsulin: 2-Hour serum insulin(mu/Uml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\n\nDifferent classification algorithms are used in the prediction of diabetes and are evaluated based on two different evaluation metrics:\nf1-score value which is the harmonic average of both precision and recall of a model.\nJaccard similarity score which shows hows close are the predicted labels to actual labels.\n\nPrecision shows percentage of values that were True out of all the values predicted. Recalls shows percentage of values that were True out of all the values that are actually True.\nF1-score is the harmonic average of both Precision and recall.\nFor the best accuracy of a model both Precision and Accuracy have to be high to have a high F-1 score. Higher the F1-score, the better the model and higher the Jaccard similarity score, the better is the model. The following are the machine learning classification algorithms/ models which will be used to train the data for finding the right parameters for prediction of onset of diabetes:\n\nSupport Vector Machines\nK-Nearest Neighbors\nDecision Trees\nLogistic Regression\n\nData\nData used has been downloaded from https://www.kaggle.com/uciml/pima-indians-diabetes-database The file is named diabetes.csv\nProgramming Language\nPython 3.6 has been used for this project.\nLibraries\nFollowing libraries have been used in this project:\n\nnumpy\npandas\nmatplotlib\nseaborn\nsklearn\n\nStatistical Methodologies Employed:\n\nData Wrangling\nExploratory Analysis\nPredictive Analysis\nSupport Vector Machine\nK-Nearest Neighbors\nDecision Trees\nLogistic Regression\n\nNotebook\nPython notebook file is available with this project and is named: Diabetes_ML_Classification.ipynb\nPowerpoint Summary\ndiabetes_Classification.pptx\n'], 'url_profile': 'https://github.com/GauriSaran', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}","{'location': 'Kochi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '60 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ashishgeorge1811', 'info_list': ['Jupyter Notebook', 'Updated Mar 9, 2020', 'HTML', 'Updated Mar 11, 2020', '1', 'Updated Mar 14, 2020', 'Jupyter Notebook', 'Updated Mar 13, 2020', 'Updated Mar 15, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'HTML', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Mar 18, 2020', 'Jupyter Notebook', 'Updated Mar 14, 2020', '1', 'Jupyter Notebook', 'Updated Mar 13, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '73 contributions\n        in the last year', 'description': ['Analytics-on-PimaIndiansDiabetes2\nConducted some analytics on PimaIndiansDiabetes2 dataset that is available in R. Developed a model and then calculated its classification error.\n""Project Code"" file shares the details of the analysis. It also includes the questions in the comments that were answered through the analysis.\n'], 'url_profile': 'https://github.com/JiyadRehman', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['13', '          followers'], ['15', '          following'], ['8']], 'contributions': '131 contributions\n        in the last year', 'description': ['Decision-Tree-Diabetes-prediction-Scikit-learn\n'], 'url_profile': 'https://github.com/KevinAS28', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '124 contributions\n        in the last year', 'description': ['Machine-Learning-Project-Regression-to-Predict-onset-of-Diabetes\nPredicting onset of Diabetes using Linear and Polynomial Regression\nProject\nPredicting the progression of diabetes based on different demographic determinants\nThe goal of this project is to use different machine learning models to predict the progression of diabetes one year after baseline. There are 10 independent variables that are used for the prediction of the disease progression namely- age, sex, body-mass index, average blood pressure, and six blood serum measurements: low density lipoproteins (LDL), high density lipoproteins (HDL), total cholesterol (TC), triglyceride (TG), serum concentration of lamotrigine (LTG), glucose (GLU). The data was originally used in Lars Paper and has been scraped off from the following website using beautiful soup library and then it is finally read in to a text file. The text file is then converted in to excel file and is then read in to a pandas dataframe.\nThe data set has been normalized to have zero mean and variance of 1 and split in to training set and test set. The model is evaluated on the test set. Different models are evaluated that reduces the error or cost in predicting the correct output response varible (progression in diabetes in 1 year) such as:\n\nLinear Regression with single Variable\nLinear Regression with Multiple Variables\nPolynomial Regression (Regularized and Unregularized)\n\nThe training set is used for training the model. After the model is fitted on the training set, it is evaluated on both the training set and the test set. The model with the lowest cost or error in the test data set is concluded as the final model to be used for prediction of response variable.\nData\nData has been obtained from:\nhttps://web.stanford.edu/~hastie/Papers/LARS/diabetes.data\nProgramming Language\nPython 3.6 has been used for this project.\nLibraries\nFollowing libraries have been used in this project:\n\nnumpy\npandas\nmatplotlib\nseaborn\nBeautifulSoup\nsklearn\n\nStatistical Methodology\n\nData Wrangling\nData Visualization\nExploratory Analysis\nLinear Regression with single Variable\nLinear Regression with Multiple Variables\nPolynomial Regression (Regularized and Unregularized)\n\nNotebook:\nPython notebook file is available with this project and is named:\nDiabetes_ML.ipynb\nPowerpoint Summary:\ndiabetes_regression.pptx\n'], 'url_profile': 'https://github.com/GauriSaran', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'Ghana', 'stats_list': [['0', '          followers'], ['2', '          following'], ['12']], 'contributions': '71 contributions\n        in the last year', 'description': ['LogisticRegression\nBuilding a Logistic Regression algorithm with Diabetes dataset\nPackages required:\nPandas, NumPy, Matplotlib, Scikit-learn (sklearn)\n'], 'url_profile': 'https://github.com/Brian-code23', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['28', '          followers'], ['0', '          following'], ['0']], 'contributions': '260 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/crios2020', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['3', '          following'], ['20']], 'contributions': '19 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/harshil0206', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '62 contributions\n        in the last year', 'description': ['Classification-for-Predicting-Gestational-Diabetes-in-Pregnant-Women\nObjective: Prediction of Gestational Diabetes in Pregnant Women\nContext: Gestational diabetes is a type of diabetes that is first seen in a pregnant woman who did not have diabetes before she was pregnant. Some women have more than one pregnancy affected by gestational diabetes. Gestational diabetes usually shows up in the middle of pregnancy. Doctors most often test for it between 24 and 28 weeks of pregnancy.\nTools /Concepts: Python, Expectation–maximization algorithm and multiclass logistic regression.\nData: Captures the metrics like weight, height, physical activity, blood pressure, ethnicity, food intake (vitamins, calcium, carbohydrate.) and other biological attributes like RBC count, etc. Model Implementation:\n• Developed a baseline model (SVM, Logistic Regression, Random Forest) and a mixture of an expert model (probabilistic model) to predict gestational diabetes in pregnant women.\nKey findings:\n\n\nRace and Ethnicity have been differentiating factor to identify if the women are probable to get gestational diabetes or not.\n\n\nPrior history of gestational diabetes was also an important factor. People having prior gestational diabetes are probable to develop diabetes this time.\n\n\nThe other differentiating factors were food intake (carbohydrate), hypertension, and physical activity\n\n\n'], 'url_profile': 'https://github.com/YashuDhatrika', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '20 contributions\n        in the last year', 'description': ['FinalProject\nEarly Detection of Diabetes Mellitus Use Forward Chaining Expert System Based On Android\n'], 'url_profile': 'https://github.com/Leo16081997', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'Stillwater', 'stats_list': [], 'contributions': '38 contributions\n        in the last year', 'description': [""Logistic-regression-from-scratch-using-NumPy\nIn this repository, the PIMA Indians diabetes dataset has been used to illustrate how to create a logistic regression model from scratch using vectorization of the predictor variables and gradient descent algorithm for cost minimization with the intuition of neural network.\nThe steps used to create the model are listed below -\n1. Defining the activation function\nThe model algorithm consists of linear transformation of predictor variables to predict the output, which will give a numeric value. Thus, to restrict those values in the range of 0 and 1, an activation function is used here.\nWe have used the sigmoid activation function here which is given by-\nsigmoid(Z)=1/(1+e^(-Z))\n2. Random initialization of parameters (bias term and coefficients)\nThe parameters 'w' and 'b' have been initialized as 0 to start with. With each iteration of the logistic regression algorithm, the    values are updated using the optimization function.The 'w' vector has the shape (no. of features in predictor, 1).\n3. Forward propagation\nIn this step, we do the activation conversion and compute the cost of the model which is given by\n\n4. Optimization\nUsing this function definition, we optimize the cost function mentioned above and update the parameters to minimize the cost. The gradients descent algorithm is used and using the algorithm, the gradients of the 'w' and 'b' parameters are computed and the parameters are updated by using the following formula-\nw := w - learning_rate * dw, and\nb := b - learning_rate * db\nBy running this function using loop for n no. of iterations, we reach a convergence point where the cost function doesn't decrease any further.\nAnother important thing to note is the choice of learning rate. Learning rate shouldn't be too small to increase the computational expense, or too large to overshoot the global minima. Thus, we try the model algorithm with various learning rates to find out the rate which gives optimizes the cost function the best.\nThe final step is to create a 'predict' function and calculate the accuracy of predicted alues from test set.\n""], 'url_profile': 'https://github.com/TrishlaM', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '127 contributions\n        in the last year', 'description': ['Indian-Graves-disease-Market-Size-Share-and-Forecast-2019-2025\nIndian Graves’ disease market is growing at a CAGR of around 6.7% during the forecast period. India is continuously working towards positioning itself as a major region in the technological development and industrialization. There are various large companies in the country which are increasingly focusing on the development of advanced healthcare solutions for humans. The emerging economy such as India has a wide scope in the field of diabetes treatment due to improving government policies, economic reforms, medical tourism, rising diabetes patients, and growth of the diagnostic sector.\n'], 'url_profile': 'https://github.com/pooja2893', 'info_list': ['R', 'MIT license', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 11, 2020', 'Jupyter Notebook', 'Updated Mar 15, 2020', '1', 'Python', 'Updated Mar 11, 2020', 'Updated Mar 13, 2020', 'Python', 'Updated Mar 15, 2020', 'Python', 'Updated Nov 12, 2020', 'Updated Mar 13, 2020', 'Jupyter Notebook', 'Updated Mar 9, 2020', 'Updated Mar 9, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/darjeelingteadirect', 'info_list': ['Updated Mar 11, 2020']}",,,,,,,,,
