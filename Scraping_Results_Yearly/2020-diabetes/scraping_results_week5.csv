"{'location': 'Dublin, Ireland', 'stats_list': [['29', '          followers'], ['39', '          following'], ['10']], 'contributions': '117 contributions\n        in the last year', 'description': ['Trocaire Diabetes Management App Collection\nThe goal of this project is to provide tools to enable patients with diabetes to\ncommunicate their blood sugar level and blood pressure test results. These test\nresults data must be visualised for doctors so that they can track the health\nand wellbeing of their patients and take actions if necessary.\nClient Requirements\nIn countries like Somalia, in which poor health literacy is prevalent, diabetic\npatients are unable to attend frequent doctor appointments. Diabetes mellitus is\na chronic condition, predominantly affecting the pancreas, that fails to\nadequately produce insulin. This results in dangerously high blood sugar levels.\nThese spikes often cause comorbidities such as diabetic ulcers, blindness and\nhypertension. As these can rapidly develop, regularly scheduled doctor\nappointments are highly recommended to maximise patient care. However, poor\nonline infrastructure in Somalia has resulted in poor patient compliance for\nthese appointments as there is currently no digital platform for doctors to\ntrack and monitor their patients.\nSolution\nTo combat this problem we have developed an app entitled ""Korta"", that aims to\nresolve the disconnect between patients and doctors. This results in an\nimprovement in both patient compliance and overall care. Korta is a mobile and\nweb-based app designed for both diabetic patients and their doctors. Using the\napp, doctors can create individual patient profiles to allow for the ability to\nautomatically and securely upload patient data with minimal literary\nrequirements. The biometric data is displayed graphically for the clinician with\nany abnormalities highlighted. Notifications alert the doctor to contact a\npatient should they need to be called in for an appointment.\nOverall, a platform has been created to track and monitor diabetic patients in\nSomalia, thereby improving patient care. The app has the potential to be\ntranslated to other regions or to monitor additional biometrics like\ncholesterol.\nFinally, the app is particularly relevant to COVID-19 (of which diabetes is a\nlarge risk factor), as allowing doctors to remotely identify and monitor these\nhigh-risk patients without the need for an in-person assessment would reduce a\ndiabetic patient\'s risk of contracting the virus.\nPatient Android App\nAllows patients to input readings. Designed for illiterate users. Readings can\nbe inputted manually or through optical character recognition.\nDoctor Android App\nAllows doctors to sign-up patients and monitor them. Includes a visualisation\nand alert system, patient follow-up reminders and patient profiles.\nAdministrative Dashboard Web App\nAllows signing-up doctors, clinics and admins. This dashboard serves both\nadministrators and doctors. Includes an email verification procedure.\nTechnology Description: Front End\n\n\nAndroid Studio for the doctor and patient apps.\n\n\nGoogle Vision API and OpenCV for OCR.\n\n\nMPAndroidChart for visualisations.\n\n\nFirebase for authentication.\n\n\nTechnology Description: Back End\n\n\nNode.js for the server.\n\n\nExpress to handle requests.\n\n\nMySQL as the database.\n\n\nDeveloped using TypeScript.\n\n\nFirebase for authentication.\n\n\nAzure Blob Storage to store images.\n\n\nScreenshots\nPatient App\n\nDoctor App\n\nWeb App\n\nTeam\nDeveloped by a team comprising of Senior Sophister, BA (Mod.) Computer Science\nstudents and MSc Bioengineering students at Trinity College, Dublin.\nInstallation \xa0\nPlease get in touch with one of the contributors to discuss installation.\n'], 'url_profile': 'https://github.com/sullaVM', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'sector 35 b chandighar', 'stats_list': [['8', '          followers'], ['6', '          following'], ['45']], 'contributions': '23 contributions\n        in the last year', 'description': ['pima-diabetes-prediction-using-tensflow\n'], 'url_profile': 'https://github.com/adilshagoo87', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '321 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/lanurag150', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'Los Angeles, CA', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '79 contributions\n        in the last year', 'description': ['diabetes\nUsing LASSO to begin the development of a predictive model for short term diabetes-related hospital readmittance.\nopen the readme.pdf file to begin\n'], 'url_profile': 'https://github.com/dkirui27', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AtandiEdwin', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'kathmandu,Nepal', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': ['Diabetes-prediction\nDiabetes prediction from pima indian diabetes database\n'], 'url_profile': 'https://github.com/Basantakatuwal', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'Netherlands, Lichtenvoorde', 'stats_list': [['2', '          followers'], ['2', '          following'], ['1']], 'contributions': '8 contributions\n        in the last year', 'description': ['Diabetes\n'], 'url_profile': 'https://github.com/JowJoris', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/yasgun75', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mrvyldzr', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}","{'location': 'Kapan, Kathmandu, Nepal', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '21 contributions\n        in the last year', 'description': ['DiabetesDetectionSystem\nThis is the flask application for my final year project. This is made on argon dashboard and has used some basic machine learning to detect the diabetes for the given input.\n'], 'url_profile': 'https://github.com/TsheriSherpa', 'info_list': ['5', 'Java', 'Updated Jun 17, 2020', '6', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'LGPL-3.0 license', 'Updated Jun 7, 2020', 'R', 'Updated Feb 25, 2020', 'Java', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'JavaScript', 'Updated Jan 30, 2020', 'Updated Feb 2, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'CSS', 'Updated Jul 29, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['DiabetesPredictionModel\n'], 'url_profile': 'https://github.com/Data-Citadel', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'Kolkata', 'stats_list': [['4', '          followers'], ['5', '          following'], ['1']], 'contributions': '294 contributions\n        in the last year', 'description': [""Diabetes-Prediction\nPima Indians Diabetes Dataset\nPredict the onset of diabetes based on diagnostic measures\nNote: The dataset is based on females only\nThe dataset consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes:\n\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsulin\nBMI\nDiabetesPedigreeFunction\nAge\n\nSo let's Use some Machine Learning to achieve this!!\n""], 'url_profile': 'https://github.com/So-ham', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['4', '          following'], ['10']], 'contributions': '466 contributions\n        in the last year', 'description': ['Diabetes-Detection\nDiabetes detection using KNN\n'], 'url_profile': 'https://github.com/Jagannath7', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/LikhithaSinghM', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': ['diary_test\nA new Flutter project.\nGetting Started\nThis project is a starting point for a Flutter application.\nA few resources to get you started if this is your first Flutter project:\n\nLab: Write your first Flutter app\nCookbook: Useful Flutter samples\n\nFor help getting started with Flutter, view our\nonline documentation, which offers tutorials,\nsamples, guidance on mobile development, and a full API reference.\n'], 'url_profile': 'https://github.com/M-Linke', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['5', '          following'], ['5']], 'contributions': '206 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/deeprajbasu', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ichuvo', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/el-gabry', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'Maryland', 'stats_list': [['1', '          follower'], ['0', '          following'], ['4']], 'contributions': '9 contributions\n        in the last year', 'description': ['Pima-Indians-Dataset\nProject Objective:\nThe objective of this project is to use Machine Learning methods to predict whether a person has diabetes or not, in a supervised fashion.\nDataset and sources:\nThe data was collected and made available by “National Institute of Diabetes and Digestive and Kidney Diseases” as part of the Pima Indians Diabetes Database. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here belong to the Pima Indian heritage (subgroup of Native Americans), and are females of ages 21 and above.\nDataset Link: https://www.kaggle.com/uciml/pima-indians-diabetes-database\nPast Usage:\nSmith,~J.~W., Everhart,~J.~E., Dickson,~W.~C., Knowler,~W.~C., & Johannes,~R.~S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In {\\it Proceedings of the Symposium on Computer Applications and Medical Care} (pp. 261--265). IEEE Computer Society Press.\nResults: Their ADAP algorithm makes a real-valued prediction between 0 and 1. This was transformed into a binary decision using a cutoff of 0.448. Using 576 training instances, the sensitivity and specificity of their algorithm was 76% on the remaining 192 instances.\nSoftware and Libraries\nThis project uses the following software and Python libraries:\n\nPython 2.7\nNumPy\npandas\nscikit-learn\nmatplotlib\nScipy\nSeaborn\nJupyter Notebook\n\nIf you do not have Python installed yet, it is highly recommended that you install the Anaconda distribution of Python, which already has the above packages and more included.\nConclusion:\nI applied many algorithms and extract feature importance. I got the best accuracy of 80.72% and AUC of 79.83% using RandomForestClassifier. After performing a lot of exploratory data analysis and we came to many conclusions. Optimizing Random Forest and Ensemble Learning can probably find a better result.\n'], 'url_profile': 'https://github.com/sapphiresinha', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['6', '          following'], ['0']], 'contributions': '46 contributions\n        in the last year', 'description': ['Heroku-Diabetes\nThis is an api for diabetes prediction based on logistic classification.Its accuracy is around 80% when the test size is 0.5.\n'], 'url_profile': 'https://github.com/Ankit-adi', 'info_list': ['HTML', 'Updated Feb 15, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 28, 2020', 'Java', 'Updated Jan 30, 2020', 'CSS', 'Updated Jan 27, 2020', '1', 'Java', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', '1', 'HTML', 'Updated Mar 10, 2020', 'CSS', 'Updated Jan 29, 2020']}"
"{'location': 'New Delhi , India', 'stats_list': [['9', '          followers'], ['13', '          following'], ['494']], 'contributions': '230 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kushaggarwal', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '12 contributions\n        in the last year', 'description': ['Pima-Indian-Diabetes-Classifer-using-DNN\nThe objective is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.The dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n'], 'url_profile': 'https://github.com/mvikas545', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'Bangalore', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '21 contributions\n        in the last year', 'description': ['Diabetes-_Prediction\n'], 'url_profile': 'https://github.com/pusharani2112', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vishalshah96', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'Galle, Srilanka', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['#diabetes_prediction_class_project\n###Diagnostically predict whether or not a female patient has diabetes. Based on glucose, blood pressure, skin thickness, insulin, age, BMI and no of pregnancies.\n###Description about the data:\nPregnancies- Number of times pregnant\nGlucose- Plasma glucose concentration 2 hours in an oral glucose tolerance test.\nBlood Pressure- Diastolic blood pressure (mm Hg)\nSkin Thickness- Triceps skin fold thickness (mm)\nInsulin - 2-Hour serum insulin (mu U/ml)\nBMI - Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction - Diabetes pedigree function\nAge - Age (years)\nOutcome - having diabetes or not (0 and 1)\n\n'], 'url_profile': 'https://github.com/hasithakn', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '13 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/Bhadra-statistics', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': [""ML-Model-Flask-Deployment\nThis is a demo project to elaborate how Machine Learn Models are deployed on production using Flask API\nPrerequisites\nYou must have Scikit Learn, Pandas (for Machine Leraning Model) and Flask (for API) installed.\nProject Structure\nThis project has four major parts :\n\nmodel.py - This contains code fot our Machine Learning model to predict employee salaries absed on trainign data in 'diabetes3.csv' file.\napp.py - This contains Flask APIs that receives employee details through GUI or API calls, computes the precited value based on our model and returns it.\nrequest.py - This uses requests module to call APIs already defined in app.py and dispalys the returned value.\ntemplates - This folder contains the HTML template to allow user to enter patient details and displays the predicted status of the patient(diabetic or not).\n\nRunning the project\n\nEnsure that you are in the project home directory. Create the machine learning model by running below command -\n\npython model.py\n\nThis would create a serialized version of our model into a file model.pkl\n\nRun app.py using below command to start Flask API\n\npython app.py\n\nBy default, flask will run on port 5000.\n\nNavigate to URL http://localhost:5000\n\nEnter valid numerical values in all 8 input boxes and hit Predict.\nIf everything goes well, you should  be able to see the predicted patient status on the HTML page!\n\n\n\nYou can also send direct POST requests to FLask API using Python's inbuilt request module\nRun the beow command to send the request with some pre-popuated values -\n\npython request.py\n\n""], 'url_profile': 'https://github.com/elhossiny', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '16 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Model\nThis has a python code which uses a data-set to predict diabetes without using Insullin\nAbout the Dataset\nThe Dataset was obtained from UCI repository. It has some 1 lakh data points, with 55 features. Some of the features are listed below-\n\nEncounter_id - Unique identifier of an encounter\nPatient Number - Unique identifier of a paitient\nRace - Race of the paitient\nAge - Weight of the paitient\nWeight - Weight of the paitient\nRace - Race of the paitient\nGender - Gender of the paitient\nRace - Race of the paitient\nAdmission type - 9 different values based on on what state they were admitted\nDischarge disposition - 29 different values corresponding to how their treatment ended up with\nTime in hospital - Time till which the patient was admitted\nPayer code - 29 different values based on payment type. Lots of missing data\nMedical Speciality - Specification of the doctor. 129 unique values\nNumber of Procedures - Total number of procedures that had to be conducted\nNumber of Lab Procedures - Total number of lab procedures that had to be conducted\nNumber of Medication Visits - Total number of times patient had to meet the doctor in past.\nDiagonosis1/2/3 - First three caharcters of ICD-9 codes for the first, second and the third diagnosis\nNumber of Diagonoses- Total Number of Diagnosis conducted\nGlucose Serum Test - Test vales. 4 unique values\nChange - If there was a change in dosage of medicines\n24 Biological Features - These have relative values of different hormones.\nDiabetes Medication - This is the target variable. Having the need to take medicines is a representation of being Diabetic.\nReadmitted - Whether the patient was readmitted\n\nData Preprocessing\nThe ID features were removed because of very low correlation with the target variable. Payer code had to be removed because it had too many unique values and relatively less data. Diagnoses had to unfortunately be removed because one-hot encoding with 1000 unique features created 3000 features, and it became comoutationally very expensive. For physical features, age was given in age classes like 10-20, 20-30, etc. They were replaced by the means i.e. 15,25 etc.\nWeight had to be removed because 97% data was missing.\nThe missing values in Gender were filled as Female to balance out the data points\nFor filling the Race feature, we employed a two way correlation with Gender and Age, and finally the values were rounded off to the nearest integer.\nInsulin was dropped. The reason for this being the fact that Insulin is directly corelated with the target variable: Presence of Diabetes. Input of Insulin as a feature was resulting in overfitting over the dataset by the model.\nWe also tried using oversampling techinques like SMOTE to balance the data, but the performance metrics did not increase much.\nModel Building\nStarting off with Logistic Regression we applied different algorithms like SVM, Decision Tree and Random Forest.\nInitially, we got an accuracy and f1 score of 100% with the algorithms. We realised that the presence of Insulin as a feature, which had high correlation with the target was causing overfitting.\nOn removal of “Insulin” as a feature, the metrics dropped down to reasonable values. Our baseline model had an accuracy of 77% and F1 score at 80%.\nWith Random Forest, we tuned the hyperparameters using Randomised Search and found the best parameters for our final model.\nWith the accuracy at 81% and F1 score at 86%, and with the bias of data being at 74%, the model is decently successful.\nFeature Engineering\nWe tried to build and incorporate new features into our model but were unable to increase the perfomance metrics substantially. Also, in somecases, the metrics got worsened.\nModel Fine Tuning\nWe tried using some fine tuning techniques like Stacking, Bagging, Ensemble Learning, etc. However, unfortunately, our PC processors were unable to train complex models over such large datasets.\nConclusion\nOur model can be made more robust and reliable by collecting local data from hospitals to account for geographic variation. Obtaining more domain knowledge and getting assistance from doctors can help getting more insights from the data about the feature importances.\n'], 'url_profile': 'https://github.com/rohang9', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'San Francisco, CA', 'stats_list': [['0', '          followers'], ['0', '          following'], ['10']], 'contributions': '100 contributions\n        in the last year', 'description': ['Predicting-Diabetes-using-ML\nExploratory Analysis and Machine Learning on Diabetes Dataset:\nThis project includes exploratory analysis and will utilize sci-kit learn to train and test a support vector machine (SVM) to detect diabetes using the diabetes data based on the UC Irvine machine learning repository.\nInformation about the data set:\nAbstract: From National Institute of Diabetes and Digestive and Kidney Diseases; Includes cost data\n(donated by Peter Turney)\n(http://www.inf.u-szeged.hu/~tothl/gepitan/uci%20repository/WEB/UCI%20ML%20Repository%20Content%20Summary.htm)\nThe jupyter notebooks includes the following steps:\n\nLoad the diabetes data set from the csv file.\nEDA - Conduct exploratory analysis of the dataset. Obtain aggregate statistics on each predictor variable and preprocess data appropriately. Create plots to tell the story of the data: display the distribution of each variable and relationships between some of the variables.\nPartition the dataset into training and testing sets.\nUsing 2 different kernels (rbf and polynomial), train support vector machines to classify examples into control (0) and case (1). Select the best model for each kernel and explain how you chose the parameters you used: kernel, soft margin(C), gamma or degree. Record metrics including prediction accuracy, confusion matrix and area under the ROC curve.\n\nDataset : Attribute Information:\n\nNumber of times pregnant\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test\nDiastolic blood pressure (mm Hg)\nTriceps skin fold thickness (mm)\n2-Hour serum insulin (mu U/ml)\nBody mass index (weight in kg/(height in m)^2)\nDiabetes pedigree function\nAge (years)\nClass variable (0 or 1)\nAge levels\n\nInformation about the scikit-learn:\nscikit learn home page: http://scikit-learn.org/stable/index.html\nscikit learn machine learning tutorial: http://scikit-learn.org/stable/tutorial/basic/tutorial.html\nscikit learn SVM page: http://scikit-learn.org/stable/modules/svm.html#svm\nscikit learn MinMaxScaler page:\nhttp://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html\n'], 'url_profile': 'https://github.com/kd91', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['5', '          following'], ['5']], 'contributions': '206 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/deeprajbasu', 'info_list': ['Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Jan 27, 2020', 'CSS', 'Updated Feb 1, 2020', 'Python', 'Updated Jan 28, 2020', '1', 'Jupyter Notebook', 'Updated Dec 28, 2020', 'CSS', 'Updated Feb 1, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['Diabetes-Prediction-ML\n'], 'url_profile': 'https://github.com/anuragsuhag', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '45 contributions\n        in the last year', 'description': ['pima-diabetes-prediction\nwe will predict whether patients have diabetes or not.\n'], 'url_profile': 'https://github.com/rahulverma7788', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': [""DataCamp : Geographical Diabetes/Obesity rate prediction in the US\nAuthors: Saousan Kaddami, Taha Eddahbi, Rayan Charrier, Barthelemy Meynard, Mathis Chagneux\nContext\nAccessing affordable and nutritious food is a challenge for many Americans.\nIn 2015, an estimated 12.7 percent of U.S. census tracts were “low-income” and had a significant share of the population with limited access to food stores: supermarket, supercenter, or large grocery store (A Rhone and al 2019). Between 2010 and 2015, distance to the nearest store increased slightly overall, with 40 percent of the U.S. population living more than one mile away from any food store (the median distance to the nearest three food stores being 1.67 miles.).\nUnfortunately, even if limited access to a source of healthy and affordable food is an issue that can be overcomed, the most vulnerable individuals may be seriously affected (lower nutritional quality, food insufficiency...). Descriptive studies on the dietary quality of acquired foods support indeed the idea that households with limited access to stores selling healthy affordable foods enjoy a lower nutritional quality than households with better foodstore access.\nStudying the evolution of food access patterns in the U.S. population may help improving our understanding of Americans’ nutrition as well as its influence on health condition.\nThat could be done by analyzing the amount of time Americans spend in particular food-related activities for instance, or other similar indicators. Information on how Americans use their time to meet their dietary needs provides a further insight into nutrition and health issues of the population (T.D. Anekwe and al 2019): this is a basic ingredient in the creation of Americans’ diets for example (Hamermesh, 2007). Food environment factors such as prices, the existence of food and nutrition assistance programs, ethnicities... also interact together to influence food choices and diet quality.\nIn order to study that properly, the Atlas library has been established with the following purposes:\nassembling statistics on food environment indicators to stimulate research on the determinants of food choices and diet quality\nproviding a spatial overview of a community's ability to access healthy food and its success in doing so.\nExploiting that data may help providing a better understanding of the variations of nutrition and health outcomes over time and across different areas or segments of the population. Nonetheless, if identifying features leading to disparities among the subgroups (gender and age disparities in the division of labor, differences in the time allocated to nutrition...) may be more interesting than the differences in themselves, one must keep in mind that those interactions are complex and more investigation may be required to identify causal relationships or provide hard evidence suggesting effective policy interventions.\nSet up\nOpen a terminal and\n\ninstall the ramp-workflow library (if not already done)\n\n$ pip install git+https://github.com/paris-saclay-cds/ramp-workflow.git\n\n\nFollow the ramp-kits instructions from the wiki\n\nLocal notebook\nGet started on this RAMP with the notebook.\nTo test the starting-kit, run\nramp_test_submission --quick-test\n\n""], 'url_profile': 'https://github.com/teddahbi', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Sadroolhaque', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['Complications-of-diabetes\n'], 'url_profile': 'https://github.com/saragolesta', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['5', '          following'], ['1']], 'contributions': '10 contributions\n        in the last year', 'description': ['Diabetes-Dataset-Linear-Regression\n#Linear Regression model of sklearn has been implemented on diabetes dataset\n'], 'url_profile': 'https://github.com/Sankalp0797', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'Troy, NY', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '4 contributions\n        in the last year', 'description': ['pima-diabetes-classification\nThis project compares compares the classification performance of Naive Bayes, SVM, and Decision Trees on the Pima Indians diabetes dataset.\nThe dataset can be found at: https://www.kaggle.com/uciml/pima-indians-diabetes-database/data\nSee the Jupyter notebook: https://github.com/navatar5/pima-diabetes-classification/blob/master/PimaDiabetesClassification.ipynb\nThe repository consists of the following files:\ndatatools.py: Contains helper functions for data loading and processing\ncrossvalidate.py: Contains a leave one out crossvalidation function and a n-fold crossvalidation function\nNaiveBayes.py: Naive Bayes Classifier, contains train, run and helper functions\nSVM.py: SVM classifier using sklearn, contains train and run functions\nDTscractch.py: Decision Tree Classifier, contains train, run and helper functions\nDecisionTree.py: Decision Tree Classifier using sklearn, contains train and run functions\nI found the tutorials by Jason Brownlee\'s machinelearingmastery.com very hepful in understanding and coding the Naive Bayes and Decision Tree algorithms\n""from scratch"". Links below:\nhttps://machinelearningmastery.com/naive-bayes-classifier-scratch-python/\nhttps://machinelearningmastery.com/implement-decision-tree-algorithm-scratch-python/\n'], 'url_profile': 'https://github.com/navatar5', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['NONE'], 'url_profile': 'https://github.com/girtel', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['4', '          following'], ['0']], 'contributions': '56 contributions\n        in the last year', 'description': ['Challenge_2020_Diabetes\nParte 1 - Descripción de datos:\nDado el dataset, se espera que cada equipo lea el nombre de la variable y entienda la información que codifica. De esta información debe extraer los rangos en los que debe moverse cada variable y por lo tanto buscar si existen nulos. Ha de notarse que cuando se genera un dataset es frecuente que en ausencia de dato se introduzcan valores que no tienen sentido dada la información que representa la variable, los cuales deben buscar.\nAdemás de realizar esta tarea, se espera que obtengan una descripción de la distribución de datos de cada variable, una información básica de media, moda, cuartiles, mínimo y máximo (en caso de variables no categóricas). Igualmente, se deberá estudiar la correlación entre variables del conjunto de datos, de cara a buscar si existe información repetida y explorar qué variables son candidatas a combinar en la siguiente fase.\nParte 2 - Alteraciones del conjunto de datos\nUna vez entendido el conjunto de datos, el siguiente paso es editarlo y limpiarlo. En primer lugar se deben rellenar aquellos valores que se han detectado como nulos, con la política de reemplazo que considere cada grupo (media, moda, mediana, eliminar la fila etc). Una vez no queden nulos en el dataset, se debe proceder a buscar variables que se puedan añadir al conjunto de datos. Ya que solo se dispone de una fuente, estas variables (en caso de que se consideren relevantes) se obtendrán como combinación de las variables ya presentes en el dataset. De cara a la obtención de estas variables, se recomienda la representación de las mismas en distintos diagramas (barplot o scatterplot) para estudiar su distribución de manera visual y ver la posible existencia de patrones.\nParte 3 - Entrenamiento\nUna vez editado el conjunto de datos a gusto y consideración del grupo, se procederá a buscar y entrenar un modelo que resuelva el ejercicio. Ya que cada modelo depende de uno o más hiperparámetros que han de ser configurados por cada grupo, se espera que se haga un estudio de los distintos valores que puede tomar y dar un motivo por el cual se está eligiendo un determinado valor. Una vez más, las representaciones gráficas resultan de gran ayuda en este apartado.\nFinalmente, se deben analizar los resultados del modelo, en clasificación por lo general se utiliza una matriz de confusión, para analizar qué casos son más conflictivos para el modelo y analizar si es un escenario conveniente o si por el contrario se debe buscar otra métrica para la selección del modelo.\n'], 'url_profile': 'https://github.com/nanirg', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/fumeilin', 'info_list': ['Updated Jan 28, 2020', 'Python', 'Updated Feb 1, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 2, 2020', 'Jupyter Notebook', 'Updated Feb 25, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2020', 'Jupyter Notebook', 'Updated May 15, 2020', 'MIT license', 'Updated Jan 27, 2020', 'Jupyter Notebook', 'Updated Jan 28, 2020', 'Jupyter Notebook', 'Updated Jan 29, 2020']}"
"{'location': 'Cincinnati', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '60 contributions\n        in the last year', 'description': [' Predict Diabetes in Logistic Regression using R  \nThe goal of this project is to build a logistic regression model that would predict the likelihood of diabetes.\nThe dataset was collected and publicly shared by “National Institute of Diabetes and Digestive and Kidney Diseases”.\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes,\nbased on certain diagnostic measurements included in the dataset. We will start the analysis from basic\ndata cleaning steps such as looking for missing values, duplicate records and identifying for outliers in each covariate.\nRpubs link: https://rpubs.com/soodrk/578110\n'], 'url_profile': 'https://github.com/soodrk', 'info_list': ['HTML', 'Updated Mar 25, 2020', 'MATLAB', 'Updated Jan 27, 2020', '1', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Jul 19, 2020']}","{'location': 'Dhaka, Bangladesh', 'stats_list': [['9', '          followers'], ['0', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['Predicting-Diabetes-Mellitus-With-Machine-Learning-Techniques\nDiabetes mellitus is a chronic disease characterized by hyperglycemia. It may cause many complications. According to the growing morbidity in recent years, in 2040, the world’s diabetic patients will reach 642 million, which means that one of the ten adults in the future is suffering from diabetes. There is no doubt that this alarming figure needs great attention. With the rapid development of machine learning, machine learning has been applied to many aspects of medical health. In this study, we used decision tree, ANN, KNN and SVM to predict diabetes mellitus.\nKeywords\n\nDiabetes Mellitus\nDecision Tree\nMachine learning\nFeature Ranking\nArtificial Neural Network (ANN)\nK-Nearest Neighbors (KNN)\nSupport Vector Machine (SVM)\n\nNote\nIF YOU FIND ANY SEVERE BUGS PLEASE KINDLY PULL REQUEST.\n'], 'url_profile': 'https://github.com/mrmohim', 'info_list': ['HTML', 'Updated Mar 25, 2020', 'MATLAB', 'Updated Jan 27, 2020', '1', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Jul 19, 2020']}","{'location': 'United States', 'stats_list': [['2', '          followers'], ['2', '          following'], ['11']], 'contributions': '232 contributions\n        in the last year', 'description': [""82% Recall Score for Classification of Undiagnosed Diabetes Status Using Clinical and Social Behavioral Data from NHANES (2011-2016)\nDataset\nAggregated medical examination data and questionaire data from NHANES 2011 to 2016. The dataset contains 29,902 observations.\nSample weights were accounted for with medical examination 2 year weights.\nOutcome variable\nThe outcome variable (hemoglobin A1c) was recoded from continuous to categorical (none, diabetic, undiagnosed diabetic).\nThe categorical variable was combined with physician's self-report data to produce the final variable.\nDiabetes was stratified into 3 groups.\nFor example,\n\nHemoglobin A1c < 6.5 and physician diagnosis no diabetes = None.\nA1c > 6.5 and physician diagnosis no diabetes = undiagnosed diabetes.\nA1c > 6.5 and physician diagnosis yes diabetes = diabetes.\n\nData Prep\nBased on domain knowledge, a handful of known risk factors were selected as features.\n\nSocial Behavioral Factors: age, race, education, sex, citizen, alcohol, veteran, smoke,\nClinical Factors: BMI, BUN, systolicBP, AST, ALT\n\nCategorical features were converted to dummies.\nMissing Data\n\nFigure above shows the pattern of missing values. If we were to drop rows, we would have insufficient data.\nThe nature of survey data such as the NHANES is prone to having lots of missing values, and come in forms as step patterns.\nRather than imputing missing values by mean or median, I decided to use Multiple Imputation Chained Equations (MICE) to provide better estimates.\n\nThe figure above depicts the difference made through imputation. Since diabetes is our placeholder target variable, the density increases at point 0 and 1;\n0 representing no diabetes and 1 with diabetes.\n\nAfter, cleaning, imputing, and transforming our target variable (mentioned above) with 3 groups, we are left with the above proportion, which is evidently\nimbalanced.\nOverview of Risk Factors by Diabetes Classes\n\nThe figure above can be a bit confusing to interpret due to the fact that these variables are categorical dummies' (I seperated dummy and non-dummy).\nBut, it is shown that those without a college degree or has an associates degree has a higher mean value closer to having diabetes. Non-Hispanic whites more cases of diabetes diagnoses than non-hispanic blacks; HOWEVER, looking at the undiagnosed columns, non-hispanic blacks appear to have higher undiagnosed cases than non-hispanic whites. Smokers, alcohols, and veterans have higher mean values in diagnosed and undiagnosed blocks compared to no diabetes, which is corroborated by research.\n\nThis figure depicts clinical factors and age* (social factor but continuous). All factors other than AST and ALT seem to be higher in diagnosed categories than non diabetics. However, AST and ALT shows a slight increase in undiagnosed which is interesting.\nExamine Correlations\n\nThe heatmap is a correlation between features or risk factors to investigate whether correlations are not too high - this would lead to multicollinearity.\nAll correlations seem to appear okay with age and BMI having highest correlation at 69%, but fortuantely not high enough for it to be discarded.\nPreprocessing and Splitting\nDataset were split using sklearn's 'train_test_split' with a test size of 20%.\nStandardized and Normalized on only training set to mitigate data leakage, followed by transformation of training and testing set.\nModeling\nIn the case of disease diagnoses, having higher recall than precision scores is favored, due to decrease chances of overlooking individuals with actual diseases left to be untreated. In this case, we can live with false positives.\nSVC Linear OVR\n\nSVM Kernel RBF OVR\n\nLogistic Regression OVR\n\nLogistic regression OVR produced recall score for undiagnosed diabetes at 82% with most misclassifications with diagnosed cases.\nConclusion\nLogistic Regression produced highest recall score for undiagnosed cases despite class imbalance. One Vs Rest (OVR) or One vs All (OVA) models were selected for classification due to imbalanced classes. Linear SVC and SVM were also able to handle the imbalance and produce decent metrics.\nUnfortunately, an OVR Logistic Regression could not be found using statsmodel package, which would be conducive for interpretation; however, the results do seem to follow findgings of previous research.\nWith more data and additional risk factors, it is possible to obtain higher metrics, given the severity of undiagnosed diabetes - not only because of its direct health effects caused by diabetes, but also its close association with other comorbitities - additional research is crucial.\n""], 'url_profile': 'https://github.com/cspark2610', 'info_list': ['HTML', 'Updated Mar 25, 2020', 'MATLAB', 'Updated Jan 27, 2020', '1', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Jul 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['5', '          following'], ['0']], 'contributions': '7 contributions\n        in the last year', 'description': ['Processo-Machine-Learning---Modelo-Preditivo-\nProcesso-Machine-Learning -  Modelo Preditivo capaz de prever se uma pessoa pode ou não desenvolver Diabetes\n'], 'url_profile': 'https://github.com/noel1sant975', 'info_list': ['HTML', 'Updated Mar 25, 2020', 'MATLAB', 'Updated Jan 27, 2020', '1', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Jul 19, 2020']}",,,,,,
