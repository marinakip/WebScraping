"{'location': 'United Kingdom', 'stats_list': [['59', '          followers'], ['80', '          following'], ['14']], 'contributions': '630 contributions\n        in the last year', 'description': ['Machine Learning Algorithms for Diabetes Prediction\n'], 'url_profile': 'https://github.com/kulasedat', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/santosh44kumar', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/darshitvala', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '95 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AshishBadgujar', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '73 contributions\n        in the last year', 'description': ['早期糖尿病風險預測\n網站鏈結：\nhttps://diabetes-risk-predict.herokuapp.com/\n(網站需等候一段時間進行連線)\n架構流程：\n\n使用Keras這個TensorFlow高階API去編寫風險預測模型\n使用Flask創建Web API\n部屬至Heroku雲端伺服器\n\n預測模型介紹：\n\n使用MLP架構去編寫模型\n\n\n模型摘要\n\n\n\n\n\n訓練過程\n\n\naccuracy執行結果\n\n\nloss誤差執行結果\n\n\n\n\n模型準確率\n\n\n準確率有92%\n\n\n\n\n'], 'url_profile': 'https://github.com/Lily-Liao', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'San Jose, California, USA', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '16 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/khushi122', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'Indonesia', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '16 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Banggarakana', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'Auckland', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '42 contributions\n        in the last year', 'description': ['Diabetes Prediction Project\nIntroduction:\nThe goal of this project is to predict the diabetes for PIIMA Women Indians by using attributes like Insulin, Blood Pressure, Pregnancy, Skin Thickness, Age etc., Target variable(Output) is considered as “0” and “1” as  yes and no respectively.\nOne dataset in csv format is considered for this project to train and test the models. The dataset contains 9 variables which 768 observations. The dataset is segregated into 70% and 30% for training and testing.\nThe tool used is R along with its libraires and packages such as dplyr,e1071,c50,ggplot2 and Performance Analytics for data wrangling, data cleaning, data visualization, building predictive model and finding the correlation between the attributes.\nData Cleaning:\nThe data was checked for missing and duplicate values. The dataset was cleaned with no missing and unidentified values.\nExploratory data analysis(EDA):\nNumerical and categorical variables were identified and summarised to get an overview of the dataset. In this case, 8 numerical variables and one categorical variables are considered. Numerical variables are Pregnancies, Glucose, Blood Pressure, Skin Thickness, Insulin, BMI, Diabetes Pedigree Function and Age.\nOutput attribute is the categorical variable. Here, Output is renamed as  “diabetes” for better understanding.\nRelationship between variables\nThe below figure depicts explains the correlation value of each and every attributes in the dataset when compared to the target variable. This shows that every attributes has its own dependency with the target variable. Age, glucose and pregnancies are different according to the target variable outcome.\n\nCorrelation of Variance’s Diabetes\nThe below figure of correlation plot shows the correlation variance. This shows that Insulin, BMI and Skin Thickness is 0.4. Age and Pregnancies has 0.5 which conveys that both variables are 50 % correlated to each other.\n\nModel Selection and Evaluation:\nThe two different types of classification algorithms selected are:\n1. Support Vector Machine(SVM)\n2. C5.0 (Decision Tree)\nAccuracy and the confusion matrix is considered as the evaluation metric. The model with maximum accuracy and the best confusion matrix is selected as the best model for diabetes prediction.\nBest Model:\nThe accuracy for C5.0 79% which is higher compared to SVM accuracy of 78%. Though, the accuracy is near to each other’s prediction the confusion matrix of C5.0 is better. Hence C5.0 is considered as the best model for the diabetes prediction.\n\nThe above image shows the highest iteration which hits the best accuracy is 18. Hence the 18th iteration is fixed as the best optimization parameter for this model. The model was trained on the 7:3 of training and testing dataset.\nConclusion:\nThe C5.0 model is the best model for this prediction. The parameter can be tuned and optimised by using various trials of the decision tree algorithms. Though SVM is considered as the best for classification algorithm, in this case c5.0 with various parameter tuning is set to be best model for diabetes prediction with Age and pregnancies as the important attributes for the detection of diabetes.\n'], 'url_profile': 'https://github.com/Arasu464', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '21 contributions\n        in the last year', 'description': ['diabetes-prediction\ndiabetes prediction\n'], 'url_profile': 'https://github.com/narainshivv', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rhutvij', 'info_list': ['3', 'Jupyter Notebook', 'Updated Oct 27, 2020', 'Python', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'HTML', 'Updated Aug 18, 2020', 'HTML', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'R', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 17, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rhutvij', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'Seoul Korea', 'stats_list': [['7', '          followers'], ['19', '          following'], ['38']], 'contributions': '826 contributions\n        in the last year', 'description': ['당뇨 측정기\nDiabetes-Blog\n당뇨를 기록할 수 있는 그래프입니다.\n'], 'url_profile': 'https://github.com/DavidYang2149', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/juangasua', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['40', '          followers'], ['50', '          following'], ['18']], 'contributions': '53 contributions\n        in the last year', 'description': ['Predicting Diabetes in Pima Indian Database\n'], 'url_profile': 'https://github.com/sbkaracan', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '42 contributions\n        in the last year', 'description': ['DiabetesPrediction_MMA-869_MLcup\nThe objective is to predict if a person has diabetes. This was part of MMA869 ML Cup. The performance metric is F1. Feature Engineering and Data balancing is required for better performance. Has been done in both Python and R.\n'], 'url_profile': 'https://github.com/MadhumitaRoy', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mozkemah', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'Manipal udpi', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '20 contributions\n        in the last year', 'description': ['web-app-Diabetes-Detection\nDiabetes Detection using python\n'], 'url_profile': 'https://github.com/Avinashbhat1199', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['12', '          followers'], ['11', '          following'], ['2']], 'contributions': '80 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Yang-Munil', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '38 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Jisyari', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Python', 'Updated Aug 17, 2020', 'JavaScript', 'Updated Dec 17, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 25, 2020', 'Updated Aug 20, 2020', 'Python', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 21, 2020', 'Updated Aug 23, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'Pune', 'stats_list': [['1', '          follower'], ['3', '          following'], ['0']], 'contributions': '86 contributions\n        in the last year', 'description': ['diabetes_algo_comparison\nAlgorithm comparison on diabetes dataset\n'], 'url_profile': 'https://github.com/rajputankur56', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-2147-Diabetes-Prediction-using-Machine-Learning\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 22, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-1789-Diabetes-Prediction-using-Machine-Learning\nDiabetes Prediction using Machine Learning\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['Pytorch_diabetes\ndiabetes prediction by using Pytorch\n'], 'url_profile': 'https://github.com/Sudipp-datascientist', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}","{'location': 'Pune,Maharashtra,India', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['Classification Algorithms\n'], 'url_profile': 'https://github.com/ajaywayase', 'info_list': ['Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 26, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['9']], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/wisalsafi', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['4', '          following'], ['1']], 'contributions': '91 contributions\n        in the last year', 'description': ['Diabetes Prediction\n'], 'url_profile': 'https://github.com/DivyamSharma04', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['4', '          following'], ['28']], 'contributions': '58 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tanvi2000github', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'Nagpur , Maharashtra', 'stats_list': [['7', '          followers'], ['7', '          following'], ['4']], 'contributions': '222 contributions\n        in the last year', 'description': ['Diabetes-Detection\n'], 'url_profile': 'https://github.com/pushpak4166', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['3']], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Atulhackit', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'Biratnagar', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Pravubrt', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'Bhubaneswar', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '33 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ajaydevprusty', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['diabetes_prediction\n'], 'url_profile': 'https://github.com/saipavan08', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/SurjeetSingh264', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}","{'location': 'New York City', 'stats_list': [['19', '          followers'], ['6', '          following'], ['2']], 'contributions': '407 contributions\n        in the last year', 'description': [""Diabetes Hospitalizations\nAren Carpenter & JP Ventura\nAn interactive version of the final model is hosted on a web app on Heroku for those who want to play around!\nIntroduction\nDiabetes affects 30 million Americans, almost 10% of the population, as of 2015. It is a family of diseases that affects how your body can utilize blood sugar (specifically, glucose). While vital for powering your cells, a buildup of glucose in the blood can lead to serious health problems. Type I diabetes usually emerges pre-adolescence and is characterized by one's immune system incorrectly targeting insulin-producing cells. Type II can emerge at any age and is characterized by cells becoming resistent to insulin binding. This keeps glucose from being transported into the cells and causes a buildup of glucose in the blood.\nThere are a plethora of factors that impact diabetes, including genetics and environmental factors. Family history is the driving factor for Type I diabetes. For Type II diabetes, in addition to family history, there are many more environmental factors, such as weight, inactivity, age, race, and other underlying health concerns.\nHbA1c is a measure of how glycated one's red blood cells are. This gives a better picture of glucose levels over a few months, rather than a single point test like blood glucose levels. For diabetics, just a 1% increase in HbA1c can increase microvascular complications by 25%.\nThe Model\nWe used a logistic regression model to enable interpreting our coefficients and drawing relative comparisons between features. A non-polynomial model performed best and allowed for easier interpretation of coefficients. We also tried a decision tree model, but it consistently performed worse than our logistic regression even after iterative improvments using SMOTE, tomek links, and gridsearch.\nData Collection & Cleaning\nOur data set was a subset of some 75 million inpatient visits between 1998 and 2008. The specific dataset consists of 100,000 inpatient visits for only diabetic patients. Because this set spans ten years, we had to remove repeat visits as some patients were admitted several times in that period. The datset also had 25 features for specific diabetic treatments that had to be dropped as many were not used by any of our observations.\n\nFeature Engineering\nWe observed that the effect of age on readmittance was clearly different between different age ranges. Therefore, we binned age into 0-30, 30-60, and 60-100 categories. Various diagnoses were reported when patients were admitted inpatient via ICD-9 medical billing codes, but only the first three were listed. It was intractable to use get_dummies due to the sheer number of possible diagnoses we observed. Therefore, we created columns for if diabetes (ICD-9 code 250.xx) was listed as one of the top diagnoses.\nFrom outside research, we know that the HbA1C test is very important for assessing long-term management of glucose levels in the blood. However, less than 20% of inpatient visits resulted in a HbA1c test. Furthermore, if a patient was given a HbA1c test, one would hope that patient's medication would be adjusted if necessary. As we had a feature for 'Change in Meds' we were able to engineer a feature for when a patient likely needed an adjustment and if it was done or not.\n\nInsights and Suggestions\nOur main insight is that patients listed with diabetes as a top diagnosis for their inpatient visit were more likely to be later readmitted, both within and after 30 days. Therefore, steps that could lower diabetic visits would reduce rates of readmission. This is generally accomplished through routine testing of blood sugar levels and, less often, HbA1c tests to measure long-term glucose levels. Of diabetic patients, only 18.5% received a HbA1c test and of those, more than 50% had a change in medication during the visit, presumably due to their results. Indeed, patients who received a normal HbA1c result were less likely to be readmitted.\n\nAge also played a large part in readmission rate. Generally, older patients had higher rates than younger patients. Patients 60-100 were more likely to be readmitted within 30 days, and patients 0-30 were less likely to be readmitted in either case. While not surprising, physicians should focus on testing older patients with HbA1c.\nInterestingly, patients who did not receive even the daily, point blood sugar test were less likely to be readmitted within 30 days, but more likely to be readmitted after 30 days. This is potentially because arising issues went undiscovered during the inpatient visit necessitating a later visit.\nFuture Directions\nWe encourage physicians to offer both blood sugar and HbA1c tests for all diabetic inpatient visits regardless of the main cause of visit. Frequent testing will better capture emerging complications than waiting for adverse symptoms. This sort of preventative testing is done in ICUs already because of the clear health benefits, but it could be utilized in all inpatient cases.\nEven with more than 60,000 observations, our dataset greatly underestimates the true population of diabetic patients in the United States. An interesting next step would be to incorporate financial elements to the analysis. Diabetes treatment is quite expensive for the individual, on average $17,000 per year per patient, and for society, $1 of every $4 healthcare spending is diabetes-related. We would attempt to assign cost/benefit analysis to various testing and treatment options to optimize care and minimize costs.\nAn interactive version of the final model is hosted on a web app on Heroku for those who want to play around!\n""], 'url_profile': 'https://github.com/ArenCarpenter', 'info_list': ['PHP', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Python', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 30, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', '1', 'Jupyter Notebook', 'Updated Nov 13, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '30 contributions\n        in the last year', 'description': ['Pima-Diabetes\n'], 'url_profile': 'https://github.com/husnainmaqsood', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['Diabetes_Prediction\n'], 'url_profile': 'https://github.com/rishuraj00198', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SARVESHKUMAR17035040', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '73 contributions\n        in the last year', 'description': ['diabetic_prediction_using_KNN\nknn algorithm to predict diabetes patience\n'], 'url_profile': 'https://github.com/Nuel4u', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 19, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '94 contributions\n        in the last year', 'description': ['Diabetes-Analysis-using-ML\nA simple Azure ML Studio Project to predict the onset of diabetes.\nScored probabilities of different ML algorithms\nThe dataset used is available in the Azure Machine Learning Studio named as Pima Indian Diabetes Binary Classification dataset.\n\n\n\nAlgorithm\nScored Probabilities\n\n\n\n\nTwo Class Decision Forest\n0.875\n\n\nTwo Class Logistic Regression\n0.598\n\n\nTwo Class Boosted Decision Tree\n0.992\n\n\nTwo Class Locally Deep Support Vector Machine\n0.838\n\n\nTwo Class Bayes Point Machine\n0.655\n\n\nTwo Class Averaged Perceptron\n0.743\n\n\n\nThe scored probabilites are based on the default sample data.\nTo run on a Cloud-based Notebook VM\nHere are the following steps:\n\nClone this github repository\nCreate an Azure Machine Learning service workspace\nCreate a cloud notebook server in your workspace.\nOn the Notebooks page, click on the Upload files icon to upload the .ipynb file from the github repository\nExecute the Jupyter notebook script by either clicking on the Run link on the run Notebook server page, or Click on the [...] link to open in Jupyter and run the script.\n\nTraining Experiments\n\n\nDiabetes prediction using Two Class Decision Forest algorithm.\n\n\nDiabetes prediction using Two Class Logistic Regression algorithm.\n\n\nDiabetes prediction using Two Class Boosted Decision Tree algorithm.\n\n\nDiabetes prediction using Two Class Locally Deep Support Vector Machine algorithm.\n\n\nDiabetes prediction using Two Class Bayes Point Machine algorithm.\n\n\nDiabetes prediction using Two Class Averaged Perceptron algorithm.\n\n\n'], 'url_profile': 'https://github.com/SreevalliKeerti', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['3', '          following'], ['0']], 'contributions': '21 contributions\n        in the last year', 'description': ['Pima-Indian-Diabetes\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset\n'], 'url_profile': 'https://github.com/aliounegdiop', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'warrangal,telangana', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '99 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/codename-hyper', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['19']], 'contributions': '61 contributions\n        in the last year', 'description': ['Diabetes-Risk-Prediction\nA deep neural network trained to classify whether there is a risk of diabetes or not.\n'], 'url_profile': 'https://github.com/FORTFANOP', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'Poland', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '80 contributions\n        in the last year', 'description': ['Diabetes_prediction_neural-networks\nDataset from https://www.kaggle.com/mathchi/diabetes-data-set.\nInputting test data into the model, and comparing the output from the model to the true expected output in outcome.\n'], 'url_profile': 'https://github.com/Nataliaa1994', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'Mumbai', 'stats_list': [['1', '          follower'], ['1', '          following'], ['13']], 'contributions': '32 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/karanpokar', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['2', '          following'], ['22']], 'contributions': '311 contributions\n        in the last year', 'description': [""Indians Diabetes Prediction\nUse nine demographic/medical measurements to predict diabetes through a simple MLP with cross-validation and grid search.\nCredit: Deep Learning with Python by Jason Brownlee\nData source UCL Machine Learning Repository\nhttp://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\nThe dataset has 768 rows and 10 columns, column 1 to 9 are parameters, column 10 is prediction 0- no diabetes, 1-has diabetes\nColumn 1 - 9\n\nNumber of times pregnant.\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test.\nDiastolic blood pressure (mm Hg).\nTriceps skin fold thickness (mm).\n2-Hour serum insulin (mu U/ml).\nBody mass index.\nDiabetes pedigree function.\nAge (years).\nClass, onset of diabetes within five years.\n\nA simple 3-layer MLP was built with dense layers, loss function is binary cross entropy.\nThe following parameters were searched for optimization:\noptimizers = ['rmsprop', 'adam']\ninits = ['glorot_uniform', 'normal', 'uniform']\nepochs = [50, 100, 150]\nbatches = [5, 10, 20]\nAfter the grid search, which took ~20 minutes to run on the local CPU, the following configuration generates the best result:\nBest: 0.748698 using {'batch_size': 5, 'epochs': 150, 'init': 'normal', 'optimizer': 'adam'}\nSo the final accuracy is 0.75\ncheckpoints_plot\nUse checkpoints to save the best performance\nPlot history: loss function and metrics for each epoch throughout the training\ncheckpoints_load\nLoad the weights from the saved checkpoints for the model, then evaluate the model and calculate the accuracy\nBut the final accuracy was different from when the checkpoints were made. Is it due to stochastic?\n""], 'url_profile': 'https://github.com/sindhri', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '13 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Database\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n'], 'url_profile': 'https://github.com/MohisnFurkh', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '80 contributions\n        in the last year', 'description': ['data_science_diabetes_analysis\n'], 'url_profile': 'https://github.com/Nuel4', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['3', '          following'], ['1']], 'contributions': '42 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Data\nThis dataset is taken from Kaggle.\nIn this notebook i have done some EDA on the data like scaling of the data, outlier removal, missing values imputation etc.\nUsed Support Vector Classifier, Logistic Regression, Random Forest Classifier, Gradient Boost, K Nearest Neighbors to predict diabetes.\nUsed GridSearchCV to improve the results.\nFinally compared the models to get the best model.\n'], 'url_profile': 'https://github.com/payal-28', 'info_list': ['Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', '1', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 22, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'Mumbai, India', 'stats_list': [['39', '          followers'], ['13', '          following'], ['21']], 'contributions': '513 contributions\n        in the last year', 'description': ['pima-diabetes-prediction with Pytorch\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nThis Repo contains an ipynb with code to develop a Pytorch model.\n'], 'url_profile': 'https://github.com/HOD101s', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saipavan08', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['12', '          followers'], ['10', '          following'], ['70']], 'contributions': '664 contributions\n        in the last year', 'description': ['This is an android apllication built over kivy a python framework that predict the chances of diabetes using kaggle dataset and machine laerning.\n\n\nTry not to used scikit-learn library\nAs it is written in C and kivy will not be able to compile\nSo try to write your own algorithm from scratch\n\nClick the below link to download:\nhttps://drive.google.com/file/d/1ndRHyTLCf3X0D2RQPOn8696cKffnZF1H/view?usp=sharing\n'], 'url_profile': 'https://github.com/devil-cyber', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 20, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saipavan08', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [['12', '          followers'], ['10', '          following'], ['70']], 'contributions': '664 contributions\n        in the last year', 'description': ['This is an android apllication built over kivy a python framework that predict the chances of diabetes using kaggle dataset and machine laerning.\n\n\nTry not to used scikit-learn library\nAs it is written in C and kivy will not be able to compile\nSo try to write your own algorithm from scratch\n\nClick the below link to download:\nhttps://drive.google.com/file/d/1ndRHyTLCf3X0D2RQPOn8696cKffnZF1H/view?usp=sharing\n'], 'url_profile': 'https://github.com/devil-cyber', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'Sweden,India ', 'stats_list': [['8', '          followers'], ['10', '          following'], ['18']], 'contributions': '127 contributions\n        in the last year', 'description': ['diabetes-detection-type1\nThis repo diabetes-detection (type 1) time series analysis of glucose level and build a model which predict future glucose level\nData :\ncontinuous glucose monitoring (CGM) data from two anonymized\nindividuals who both have type 1 diabetes (997 and 998). As a reference we have also\nprovided CGM-data from a healthy individual (999).\nThree files (997,998,999)\n'], 'url_profile': 'https://github.com/reenal', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['3', '          following'], ['3']], 'contributions': '151 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tanyajha16', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'Dhaka', 'stats_list': [['1', '          follower'], ['10', '          following'], ['6']], 'contributions': '19 contributions\n        in the last year', 'description': ['diabetes_prediction_keras_ann\n'], 'url_profile': 'https://github.com/ishahriar94', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'Singapore', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '26 contributions\n        in the last year', 'description': [""Udacity AWS SageMaker Capstone Project\nDiabetes Prediction with XGBoost container of SageMaker\nObjective\nThe motive of this study is to design a model which can prognosticate the likelihood of diabetes in patients with maximum accuracy just by invoking Endpoint of Sagemaker with parameters they got from the Glucose Tolerance Test(GTT) result\nTo build multiple supervised learning models of Scitkit learn from linear classifier, tree classifier, naive bayes, neighbors classifier type as base models to compare with XGBoost models build with pre-built container image from AWS Sagemaker for training and deployment.\nDataset\nThe Pima Indian Diabetes Dataset with 768 patient’s data has been used in this study, provided by the UCI Machine Learning Repository (https://www.kaggle.com/uciml/pima-indians-diabetes-database). The dataset has been originally collected from the National Institute of Diabetes and Digestive and Kidney Diseases. The number of true cases are 268 (34.90%) and the number of false cases are 500 (65.10%) in this dataset.\nLibraries\nFollowing Python libraries are used im Implementation\n\npandas\nnumpy\nmatplotlib\nscikit-learn\nscipy\n\nSteps\n\nClone the repository.\n\tgit clone https://github.com/NarayananAmudha/sagemaker_diabetes_predictor.git\n\n\nTo pre-process raw data , save the processed data and to build all baseline models\nOpen the preprocess_baseline_models.ipynb file.\n\tjupyter notebook preprocess_baseline_models.ipynb\n\t\n\n\nTo Split data and to run XGBoost Model of AWS Sagemaker container\nRun the 'sagemaker_xgboost_model.ipynb' in jupyter notebook with AWS SageMaker account.\n\nImplementation\n\n\nAnalyzed the problem through visualizations and data exploration to have a better understanding of data and features that are appropriate for solving it by plotting correlation matrix.\n\n\nPre-Processed data, as it plays an important role in improving performance of the model for small dataset such as by replacing null values with mean/median, and selected important features through feature selection.\nAs XGBoost is able to perform pre-processing of replacing null values with median, class imbalance and feature selection by itself, implemented pre-processing and feature selection for building base models alone. Splitted the processed dataset into Train and Test dataset (80: 20 ratio) after scaling/normalizing the features with values between 0 to 1\n\n\nImplemented Models Baseline Models with scikit library and XGboost in SageMaker by loading Training, Test and Validation data in S3 Bucket, followed by selecting Algorithm Container Registry Path, Configure Estimator for training by specifying Algorithm container, instance count, instance type, model output location to train model.\nThen tuned the model by HyperParameterTuner object by specifying ranges for hyperparameter such as max depth, learning rate, etc to find best performing model from the model search feature of Sagemaker pre-built container of XGBoost.\n\n\nPerformed Evaluation of model as explained in Evaluation Metric section of this report by computing Accuracy Score, F1 score and ROC-AUC score.\n\n\nFinally Deployed model as SageMaker endpoint to run prediction on test data by specifying instance count, instance type and endpoint name in Sagemaker.\n\n\nOutcome and Future Improvement\nAble to achieve Accuracy score of 75 % and ROC-AUC score of 83%  through XGBoost hyperparameter tuned model implemented with AWS Sagemaker pre-built container which is better than multiple baseline models with pre-processed dataset and I still believe, it is possible to improve further by varying parameter range of various parameters of XGBoost through further hyperparameter tuning.\nOne other consideration for this dataset is that it is collected specifically from a study using members of the Pima Indian tribe. It is entirely conceivable that there are genetic or lifestyle differences within this population that make any model built using this data not robust enough or valid for a larger more general population. With this in mind, any resulting model would need to be validated against populations of patients of either their respective population subgroup or against the general population before being widely deployed or used. In future  I also would like to try this model on the dataset of diabetes with 2000 patient’s data, taken from the hospital Frankfurt (https://www.kaggle.com/johndasilva/diabetes) also to compare the performance of model with benchmark Pima Indian Diabetes Dataset which also has same proportion of true cases (684 – 34.20% and false cases (1316 – 65.80%) . Both the dataset consists of same eight medical distinct measurement variables.\nPossible to enhance model as End to End web/mobile solution with Flask integrating via API to AWS SageMaker Predictor endpoint\n""], 'url_profile': 'https://github.com/NarayananAmudha', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Sud0302', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '308 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rajatpillai10', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'Pune,India', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/akshaysharma5966', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 23, 2020', '1', 'Python', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 23, 2020', 'Updated Aug 17, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'India ', 'stats_list': [['1', '          follower'], ['2', '          following'], ['3']], 'contributions': '117 contributions\n        in the last year', 'description': ['Health-care-diabetes-\ncapstone project using Python , Machine learning , tableau\n'], 'url_profile': 'https://github.com/Mstoned', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['9']], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/wisalsafi', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['PimaDiabetesPrediction\nUse the Machine Learning Workflow to process and transform Pima Indian data to create a prediction model. This model must predict which people are likely to develop diabetes with 70% or greater accuracy.\n'], 'url_profile': 'https://github.com/dp9242000', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 20, 2020', 'MIT license', 'Updated Aug 21, 2020', 'Updated Aug 22, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 19, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Updated Aug 20, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['3']], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Atulhackit', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'New York, NY', 'stats_list': [['6', '          followers'], ['9', '          following'], ['0']], 'contributions': '75 contributions\n        in the last year', 'description': [""Diabetes Hospitalizations\nJean-Paul Ventura\nIntroduction\nDiabetes affects 30 million Americans, almost 10% of the population, as of 2015. It is a family of diseases that affects how your body can utilize blood sugar (specifically, glucose). While vital for powering your cells, a buildup of glucose in the blood can lead to serious health problems. Type I diabetes usually emerges pre-adolescence and is characterized by one's immune system incorrectly targeting insulin-producing cells. Type II can emerge at any age and is characterized by cells becoming resistent to insulin binding. This keeps glucose from being transported into the cells and causes a buildup of glucose in the blood.\nThere are a plethora of factors that impact diabetes, including genetics and environmental factors. Family history is the driving factor for Type I diabetes. For Type II diabetes, in addition to family history, there are many more environmental factors, such as weight, inactivity, age, race, and other underlying health concerns.\nHbA1c is a measure of how glycated one's red blood cells are. This gives a better picture of glucose levels over a few months, rather than a single point test like blood glucose levels. For diabetics, just a 1% increase in HbA1c can increase microvascular complications by 25%.\nThe Model\nI used a logistic regression model to enable interpreting our coefficients and drawing relative comparisons between features. A non-polynomial model performed best and allowed for easier interpretation of coefficients. I also tried a decision tree model, but it consistently performed worse than our logistic regression even after iterative improvments using SMOTE, tomek links, and gridsearch.\nData Collection & Cleaning\nThe data set was a subset of some 75 million inpatient visits between 1998 and 2008. The specific dataset consists of 100,000 inpatient visits for only diabetic patients. Because this set spans ten years, I had to remove repeat visits as some patients were admitted several times in that period. The datset also had 25 features for specific diabetic treatments that had to be dropped as many were not used by any of our observations.\n\nFeature Engineering\nI observed that the effect of age on readmittance was clearly different between different age ranges. Therefore, I binned age into 0-30, 30-60, and 60-100 categories. Various diagnoses were reported when patients were admitted inpatient via ICD-9 medical billing codes, but only the first three were listed. It was intractable to use get_dummies due to the sheer number of possible diagnoses observed. Therefore, I created columns for if diabetes (ICD-9 code 250.xx) was listed as one of the top diagnoses.\nFrom outside research, I know that the HbA1C test is very important for assessing long-term management of glucose levels in the blood. However, less than 20% of inpatient visits resulted in a HbA1c test. Furthermore, if a patient was given a HbA1c test, one would hope that patient's medication would be adjusted if necessary. Having a feature for 'Change in Meds' I was able to engineer a feature for when a patient likely needed an adjustment and if it was done or not.\n\nInsights and Suggestions\nThe main insight is that patients listed with diabetes as a top diagnosis for their inpatient visit were more likely to be later readmitted, both within and after 30 days. Therefore, steps that could lower diabetic visits would reduce rates of readmission. This is generally accomplished through routine testing of blood sugar levels and, less often, HbA1c tests to measure long-term glucose levels. Of diabetic patients, only 18.5% received a HbA1c test and of those, more than 50% had a change in medication during the visit, presumably due to their results. Indeed, patients who received a normal HbA1c result were less likely to be readmitted.\n\nAge also played a large part in readmission rate. Generally, older patients had higher rates than younger patients. Patients 60-100 were more likely to be readmitted within 30 days, and patients 0-30 were less likely to be readmitted in either case. While not surprising, physicians should focus on testing older patients with HbA1c.\nInterestingly, patients who did not receive even the daily, point blood sugar test were less likely to be readmitted within 30 days, but more likely to be readmitted after 30 days. This is potentially because arising issues went undiscovered during the inpatient visit necessitating a later visit.\nFuture Directions\nI encourage physicians to offer both blood sugar and HbA1c tests for all diabetic inpatient visits regardless of the main cause of visit. Frequent testing will better capture emerging complications than waiting for adverse symptoms. This sort of preventative testing is done in ICUs already because of the clear health benefits, but it could be utilized in all inpatient cases.\nEven with more than 60,000 observations, our dataset greatly underestimates the true population of diabetic patients in the United States. An interesting next step would be to incorporate financial elements to the analysis. Diabetes treatment is quite expensive for the individual, on average $17,000 per year per patient, and for society, $1 of every $4 healthcare spending is diabetes-related. We would attempt to assign cost/benefit analysis to various testing and treatment options to optimize care and minimize costs.\n""], 'url_profile': 'https://github.com/jvntra', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '82 contributions\n        in the last year', 'description': ['MachineLearning_pima-indians-diabetes_xgboost\nUse xgboost perdict the test for diabetes\ndata get from https://www.kaggle.com/kumargh/pimaindiansdiabetescsv#\n'], 'url_profile': 'https://github.com/RongweiMa', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Updated Aug 21, 2020', 'Updated Aug 20, 2020', 'Updated Aug 20, 2020', 'Updated Aug 17, 2020', 'Updated Aug 19, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '39 contributions\n        in the last year', 'description': ['diabetes-detection-ML\n'], 'url_profile': 'https://github.com/SSLotfi', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'Delhi, India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '55 contributions\n        in the last year', 'description': [""Diabetes-Classification-Using-KNN\nBuilt a Diabetes Classification System using Python. We are given a Diabetes Data Set consisting of the following features -\n['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome']\nWe are required to predict whether a person is suffering from diabetes or not.\nTech Stack - Python, KNN\n""], 'url_profile': 'https://github.com/lakkshh', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '43 contributions\n        in the last year', 'description': ['PimaIndiaDiabetesproject\nPimaIndianDiabetesProject\n'], 'url_profile': 'https://github.com/anuroopnag', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Jupyter Notebook', 'Updated Aug 22, 2020', 'Python', 'Updated Aug 18, 2020', 'Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 22, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-2482-Diabetes-Prediction-Model-for-Indian-Women\nDiabetes Prediction Model for Indian Wom\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '3 contributions\n        in the last year', 'description': ['Predictive models for diabetes\n'], 'url_profile': 'https://github.com/iashwani', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '103 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nikhilhiremath65', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-1609-Diabetes-Prediction-Model-for-Indian-Women\nDiabetes Prediction Model for Indian Women\nDemo:\nhttps://youtu.be/PEUAb6fDkbk\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 24, 2020', 'HTML', 'Updated Jan 6, 2021', 'MATLAB', 'Updated Aug 21, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 22, 2020', 'Updated Aug 21, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-1609-Diabetes-Prediction-Model-for-Indian-Women\nDiabetes Prediction Model for Indian Women\nDemo:\nhttps://youtu.be/PEUAb6fDkbk\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 22, 2020', 'Updated Aug 21, 2020', 'Updated Aug 18, 2020', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Aug 17, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Aug 21, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-1887-Diabetes-Prediction-Model-for-Indian-Women\nDiabetes Prediction Model for Indian Women\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Aug 17, 2020', 'Updated Aug 17, 2020', 'Updated Aug 23, 2020', 'Updated Sep 4, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 18, 2020', 'Updated Aug 23, 2020', 'Updated Aug 18, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['4', '          following'], ['0']], 'contributions': '169 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/EmmanuellaBudu', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['3', '          following'], ['1']], 'contributions': '18 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Nitinkaushik80', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'Rajam', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '56 contributions\n        in the last year', 'description': ['Diagnosis-of-diabetes-using-Machine-Learning\n'], 'url_profile': 'https://github.com/ashokcse135', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '49 contributions\n        in the last year', 'description': ['#Diabetes-Prediction-using-Machine-Learning-\n'], 'url_profile': 'https://github.com/techpkd123', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'Kolkata', 'stats_list': [['6', '          followers'], ['3', '          following'], ['8']], 'contributions': '61 contributions\n        in the last year', 'description': ['Decision-Tree-Classification-on-Diabetes-Dataset\nIt shows how to build and optimize Decision Tree Classifier of ""Diabetes dataset"" using Python Scikit-learn package.\nA decision tree is a flowchart-like tree structure where an internal node represents feature(or attribute), the branch represents a decision rule, and each leaf node represents the outcome. The topmost node in a decision tree is known as the root node. It learns to partition on the basis of the attribute value. It partitions the tree in recursively manner call recursive partitioning. This flowchart-like structure helps you in decision making. It\'s visualization like a flowchart diagram which easily mimics the human level thinking. That is why decision trees are easy to understand and interpret.\n\nImporting Required Libraries\nLet\'s first load the required libraries.\n\n2.Loading Data\nLet\'s first load the required Diabetes dataset using pandas read CSV function. You can download the data here (datasets_set.csv)\n\n\nFeature Selection\nHere, you need to divide given columns into two types of variables dependent(or target variable) and independent variable(or feature variables).\n\n\nSplitting Data\nTo understand model performance, dividing the dataset into a training set and a test set is a good strategy.\n\n\nLet\'s split the dataset by using function train_test_split(). You need to pass 3 parameters features, target, and test_set size.\n\n\nBuilding Decision Tree Model\nLet\'s create a Decision Tree Model using Scikit-learn.\n\n\nEvaluating Model\nLet\'s estimate, how accurately the classifier or model can predict the type of cultivars.\n\n\nAccuracy can be computed by comparing actual test set values and predicted values.\n7.Visualizing Decision Trees\n'], 'url_profile': 'https://github.com/Anny8910', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'Frankfurt, Germany', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '31 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nIn this project I will be using Machine Learning techniques to predict whether any person is suffering from Diabetes with 3 algorithms- KNeighborsClassifier DecisionTreeClassifier RandomForestClassifier\nIn this machine learning project, I have collected the dataset from Kaggle  and I will be using Machine Learning to predict whether any person is suffering from Diabetes.\nAlgorithms\nHere I experimented with 3 algorithms-\nKNeighborsClassifier\nDecisionTreeClassifier\nRandomForestClassifier\nto find the accuracy of the prediction\nfeature selection\nI did the feature selection using seaborn and got the correlations of each features in dataset.\nThen i analyzed the histogram pf each column properties to have a betterr understanding of the features.\nI observed the comparison of sizes of the outcome classes of the dataset.\nData Processing\nAfter exploring the dataset, I observed that I need to convert some categorical variables into dummy variables and scale all the values before training the Machine Learning models. First, I used the get_dummies method to create dummy columns for categorical variables.\nThen I used all 3 algorithms to find the accuracies and observed that the accuracies were quite similarly good. But the accuracy result of Random Forest Classifier was the best.\n'], 'url_profile': 'https://github.com/sf-snigdha', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'Paris', 'stats_list': [['9', '          followers'], ['8', '          following'], ['6']], 'contributions': '1,095 contributions\n        in the last year', 'description': ['Logistic-Regression-from-Scratch\nObjective\nThe goal of this project is to implement Logistic Regression from scratch using Pytorch.\nThe Logistic regression and Polynomial Logistic Regression are trained on real-world diabetes data.\nBlog Post\nPlease visit the link to see the blog post associated to this repository.\nDataset\nThe Pima Indians Diabetes Database has been gathered by the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nThis data set contains the following features:\n\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsuline\nBMI\nDiabetesPedigreeFunction\nAge\nOutcome (has diabetes or not)\n\nSetup\nIn order to install the conda environment needed to run the notebook, run the following line:\nconda env create --file requirements.yml\nconda activate torch\n'], 'url_profile': 'https://github.com/ConsciousML', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '24 contributions\n        in the last year', 'description': ['Module 5 Final Project - Predicting 30-day Hospital Readmission\nStudent name: Cynthia Pedrasa\nStudent pace: self paced\nScheduled project review date/time:  Monday, Jun 15, 2020 Time: 10:00am-11:00am (EDT)\nInstructor name: Jeff Herman\nDeliverables:\n\n\nJupyter Notebooks:\na. Data Preprocessing\nb. Model Evaluation\n\n\nBlog Post:\n\n\nExecutive Summary:\n\n\nIntroduction\nFor the final project for Module 5, we have chosen a binary classification project on predicting 30-day Readmisssion Risk of patients with Diabetes.\nObjectives\nHospital readmissions are associated with unfavorable patient outcomes and high financial costs.\n\n\nThe Medicare Payment Advisory Commission (MedPAC) reported that in 2005, 17.6% of hospital admissions resulted in readmissions within 30 days of discharge, 11.3% within 15 days, and 6.2% within 7 days. National Conference of State Legislatures\n\n\nDiabetes is one of the most frequently treated condition in US Hospitals with 20.3% readmission rate.\nAgency for Healthcare Research and Quality\n\n\nHealthcare Regulatory Agencies are focused on 30-day readmission rates as a way to improve quality. The Centers for Medicare and Medicaid Services (CMS) have labeled 30-day readmission rates as a measure of healthcare quality and emphasize its reduction as a strategy to reduce healthcare costs while also maintaining quality.  Some of these mandatory and/or voluntary programs are as follows:\n\nHospital Readmissions Reduction Program (HRRP) is a Medicare value-based purchasing program that reduces payments to hospitals with excess readmissions. The Affordable Care Act established the Hospital Readmissions Reduction Program to improve the quality of care while reducing costs. The program incentivizes hospitals to improve communication and care coordination efforts, and to better engage patients and caregivers, with respect to post-discharge planning.\nBundled Payments for Care Improvement Advanced (BPCIA). An alternative payment model to incentivize financial accountability, care redesign, data analysis and feedback, provider engagement, and patient engagement with bundled payments, care redesign activities, and accountability for performance on quality measures. This program links reimbursement or payment to the quality of care provided during a specific episode period.\nComprehensive Care for Joint Replacement (CJR) model is an episode payment model that uses bundled payments for clinical episodes focused on lower extremity joint replacements\nMedicare Shared Savings Program (MSSP) is a voluntary program that encourages groups of doctors, hospitals, and other health care providers to come together as an Accountable Care Organization (ACO) to give coordinated, high quality care to their Medicare patients. This program showed greater reductions in readmission rates.\nDelivery System Reform Incentive Payment (DSRIP) Program is the main mechanism by which New York State will implement the Medicaid Redesign Team (MRT) Waiver Amendment. DSRIP´s purpose is to restructure the health care delivery system by reinvesting in the Medicaid program, with the primary goal of reducing avoidable hospital use by 25% over 5 years. Up to $6.42 billion dollars are allocated to this program with payouts based upon achieving predefined results in system transformation, clinical management and population health.\n\n\n\nA successful predictive model will help the Healthcare Organization:\n\nPinpoint patients with high readmission risk to reduce the occurrences of preventable hospital readmissions and avoidable admissions.\nOut-predict common approaches to readmission risk stratification by rendering more precise and complete views into patient predispositions by using patient characteristics and other comorbidity index computations in enabling the patient level predictions\nImprove resource utilization and increase operational efficiency\nImprove hospital rating based on lower readmission rate and increased patient satisfaction\nA positive financial return is expected from the readmission and avoidable admission reduction rate.  Revenue generation by decreasing the hospital’s excess readmission ratio that reduces payments for hospitals whose 30-day readmission rates are high relative to other facilities\n\n\nThe Project\nData Science Workflow\nUnderstanding the typical work flow on how the data science process works is important in business understanding and problem solving. Using the OSEMN Framework the student will go through the different steps of the framework in an iterative and non-linear process.\n\nO. Obtain the data - Requirements and information gathering on the problem.\nS. Scrubbing - Pre-processing our data (removing nulls, outliers, normalization, feature selection)\nE. Explore-Understand the cohort characteristics and impactful predictors\nM. Modeling the data - Build and tune the model\nN. iNterpret the Data and communicate results to stakeholders\n\nIn this Module 5 Project, the student will build and test different binary classifier algorithms to predict 30-day hospital readmissions of patients with diabetes, based on the electronic medical records. The models will be tuned to improve accuracies and the model with the best score will be selected to make accurate predictions of data.\nPart I of the project includes the Introduction, data load, data scrubbing thru completion of pre-processing of the final dataframe.\nPart II of the project includes the Data Modeling, tuning, evaluation, performance metrics and finalization/saving of the model. for later prediction use.\nIn this project we would like to find the answers to the following questions:\n\nWho among the hospitalized Diabetic patients are at risk for 30-day hospital readmissions?\nHow can we risk stratify and rank patient/encounters with the highest probability of getting readmitted within 30 days?\nWhich features are important predictors of 30-day readmission in patients with Diabetes?\nAre HbA1c result, changes in treatment, and glycemic factors significant contributors to readmissions?\n\nHospital Readmissions Diabetes Data Set\nUCI Machine Learning Datasets Repository\nThe dataset represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. Information was extracted from the database for encounters that satisfied the following criteria.\n\nIt is an inpatient encounter (a hospital admission)\nIt is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\nThe length of stay was at least 1 day and at most 14 days.\nLaboratory tests were performed during the encounter.\nMedications were administered during the encounter.\n\nDATA-SPECIFIC INFORMATION FOR: [diabetic_data.csv]\n\nNumber of variables: 50\nNumber of instances/rows: 101766\nVariable List:\n\nTarget Variable:\n\n\n\nAttribute\nDescription\n\n\n\n\nReadmitted\nDays to inpatient readmission. Values: “<30” if the patient was readmitted in less than 30 days, “>30” if the patient was readmitted in more than 30 days, and “No” for no record of readmissionFeatures:\n\n\n\nPredictors:\n\n\n\nAttribute\nDescription\n\n\n\n\nEncounter ID\nUnique identifier of an encounter\n\n\nPatient number\nUnique identifier of a patient\n\n\nRace Values\nCaucasian, Asian, African American, Hispanic, and other\n\n\nGender\nmale, female, and unknown/invalid\n\n\nAge\nGrouped in 10-year intervals: 0, 10), 10, 20), …, 90, 100)\n\n\nWeight\nWeight in pounds\n\n\nAdmission type\nInteger identifier corresponding to 9 distinct values, for example, emergency, urgent, elective, newborn, and not available\n\n\nDischarge disposition\nInteger identifier corresponding to 29 distinct values, for example, discharged to home, expired, and not available\n\n\nAdmission source\nInteger identifier corresponding to 21 distinct values, for example, physician referral, emergency room, and transfer from a hospital\n\n\nTime in hospital\nInteger number of days between admission and discharge\n\n\nPayer code\nInteger identifier corresponding to 23 distinct values, for example, Blue Cross/Blue Shield, Medicare, and self-pay Medical\n\n\nMedical specialty\nInteger identifier of a specialty of the admitting physician, corresponding to 84 distinct values, for example, cardiology, internal medicine, family/general practice, and surgeon\n\n\nNumber of lab procedures\nNumber of lab tests performed during the encounter\n\n\nNumber of procedures\nNumeric Number of procedures (other than lab tests) performed during the encounter\n\n\nNumber of medications\nNumber of distinct generic names administered during the encounter\n\n\nNumber of outpatient visits\nNumber of outpatient visits of the patient in the year preceding the encounter\n\n\nNumber of emergency visits\nNumber of emergency visits of the patient in the year preceding the encounter\n\n\nNumber of inpatient visits\nNumber of inpatient visits of the patient in the year preceding the encounter\n\n\nDiagnosis 1\nThe primary diagnosis (coded as first three digits of ICD9); 848 distinct values\n\n\nDiagnosis 2\nSecondary diagnosis (coded as first three digits of ICD9); 923 distinct values\n\n\nDiagnosis 3\nAdditional secondary diagnosis (coded as first three digits of ICD9); 954 distinct values\n\n\nNumber of diagnoses\nNumber of diagnoses entered to the system 0%\n\n\nGlucose serum test result\nIndicates the range of the result or if the test was not taken. Values: “>200,” “>300,” “normal,” and “none” if not measured\n\n\nA1c test result\nIndicates the range of the result or if the test was not taken. Values: “>8” if the result was greater than 8%, “>7” if the result was greater than 7% but less than 8%, “normal” if the result was less than 7%, and “none” if not measured.\n\n\nChange of medications\nIndicates if there was a change in diabetic medications (either dosage or generic name). + + Values: “change” and “no change”\n\n\nDiabetes medications\nIndicates if there was any diabetic medication prescribed. Values: “yes” and “no”\n\n\n24 features for medications\nFor the generic names: metformin, repaglinide, nateglinide, chlorpropamide, glimepiride, acetohexamide, glipizide, glyburide, tolbutamide, pioglitazone, rosiglitazone, acarbose, miglitol, troglitazone, tolazamide, examide, sitagliptin, insulin, glyburide-metformin, glipizide-metformin, glimepiride- pioglitazone, metformin-rosiglitazone, and metformin- pioglitazone, the feature indicates whether the drug was prescribed or there was a change in the dosage. Values: “up” if the dosage was increased during the encounter, “down” if the dosage was decreased, “steady” if the dosage did not change, and “no” if the drug was not prescribed\n\n\n\n\nMissing data codes:\n\n\n\n\nAttributes with Null values\nDescription\n\n\n\n\nrace\n2273\n\n\nweight\n98569\n\n\npayer_code\n40256\n\n\nmedical_specialty\n49949\n\n\ndiag_1\n21\n\n\ndiag_1\n358\n\n\ndiag_3\n1423\n\n\n\nPrerequisites\nYou may need to install some software and packages.\n\n\nInstall Anaconda (https://docs.anaconda.com/anaconda/install/)\n\n\nInstall Scikit-learn (https://anaconda.org/anaconda/scikit-learn)\n\n\nconda install -c anaconda scikit-learn\n\nInstall Imbalanced-Learn Library (https://anaconda.org/conda-forge/imbalanced-learn)\n\nconda install -c conda-forge imbalanced-learn\n\nInstall XGBoost Library (https://anaconda.org/conda-forge/xgboost)\n\nconda install -c conda-forge xgboost\nAcknowledgments\n\nDataset: (https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008)\nBeata Strack, Jonathan P. DeShazo, Chris Gennings, Juan L. Olmo, Sebastian Ventura, Krzysztof J. Cios, and John N. Clore, “Impact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records,” BioMed Research International, vol. 2014, Article ID 781670, 11 pages, 2014.(https://www.hindawi.com/journals/bmri/2014/781670/)\nThe inspiration for class imbalance techniques come from Jason Brownlee PhD website and book\n\nImbalance Classification Techniques/Codes -  (https://machinelearningmastery.com/what-is-imbalanced-classification/)\nPrecision Recall Curves for imbalanced classification - https://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/\n\n\n\n'], 'url_profile': 'https://github.com/cynthiapedrasa', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '129 contributions\n        in the last year', 'description': ['DiabApp\nIntroduction\nA mobile application to help you monitor your diabetes\n'], 'url_profile': 'https://github.com/carlosperezm', 'info_list': ['Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Sep 3, 2020', '1', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Sep 29, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', 'Dart', 'Updated Aug 20, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['4', '          following'], ['0']], 'contributions': '24 contributions\n        in the last year', 'description': ['PIMA-diabets-\nThis repository consist my codes for predicting diabetes\nName: Melory Elias Pereira\nSubject: Deep Learning Fundamentals\nStudent ID: a1797905\n'], 'url_profile': 'https://github.com/Optimus-Q', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '32 contributions\n        in the last year', 'description': ['Pima-Indian-diabetes-end-to-end-from-scratch\n'], 'url_profile': 'https://github.com/krishnakategaru', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Jodhpur', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['Genetic-Analysis-of-Type-2-Diabetes-using-In-Silico-tools\nI used In-Silico Tools for Genetic Analysis of Type 2 Diabetes . In-Silico Tools i used were SIFT , POLYPHEN 2 and Fathmm. Calculated probability along with other results which tells us whether an amino acid substitution effects the functioning of Gene related to type 2 diabetes or not.\n'], 'url_profile': 'https://github.com/ashutoshsanodia2000', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Hyderabad', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/NikhilManikya123', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Aligarh', 'stats_list': [['17', '          followers'], ['31', '          following'], ['61']], 'contributions': '289 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AquibPy', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '148 contributions\n        in the last year', 'description': ['Diabetes Prediction Based on Diagnostic Measures\n\nRead Data and Data Cleaning\n## Loading required package: Matrix\n\n## Loaded glmnet 4.0-2\n\n## Loading required package: lattice\n\n## \n## Attaching package: \'lattice\'\n\n## The following object is masked from \'package:boot\':\n## \n##     melanoma\n\n## Loading required package: ggplot2\n\nFirst we read in the data in which the zero values have all been\nconverted to NA values.Then we omit the observations which contain the\nNA values.\nrm(list=ls())\n#setwd(\'/Users/z/Documents/MSBA/Summer 2020/Predictive Modeling/Project\')\ndiabetes=read.csv(""pima_diabetes_NA.csv"")\ndiabetes$class <- as.factor(diabetes$class)\ndiabetes <- na.omit(diabetes)\nattach(diabetes)\nNext we are going to see if we have a class imbalance issue. The\npercentage of true class which means the patient has diabetes is 33.61%\nwhile the false class is 66.84%. There is imbalance existing in the\ndataset which might impact our analysis.\nD = sum(diabetes$class == 1)\nTrueD =   D / nrow(diabetes)\nTrueD\n## [1] 0.3489583\n\n1-TrueD\n## [1] 0.6510417\n\nWe plotted the box plot to get a sense of what might be the key\nvariables to help us tell the difference between patients with diabetes\nand patients without.In the plot we can see plas, mass, and age is doing\na better job in differentiating two classes.\npar(mfrow=c(2,4)) \n\nplot(preg ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(plas ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(pres ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(skin ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(test ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(mass ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(pedi ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\nplot(age ~ class, data=diabetes, col=c(grey(.2),2:6), cex.lab=1)\n\nModel Selection\nKNN\nWe are going to perform a 5-fold CV KNN model here. We are testing the K\nvalue for KNN ranging from 1 to 100. The optimal K is 17 which gives us\nan accuracy of 77.44%.\npar(mfrow=c(1,1))\nplot(kk,mAccuracy,\n     xlab=""k"",\n     ylab=""CV Accuracy"",\n     col=4, #Color of line\n     lwd=2, #Line width\n     type=""l"", #Type of graph = line\n     cex.lab=1.2, #Size of labs\n     main=paste(""kfold("",kcv,"")"")) #Title of the graph\n\n#Find the index of the minimum value of mMSE\nbest = which.max(mAccuracy)\ntext(kk[best],mAccuracy[best], #Coordinates\n     paste(""k="",kk[best]), #The actual text\n     col=2, #Color of the text\n     cex=0.8) #Size of the text\ntext(kk[best]+5,mAccuracy[best]-3,paste(""Best Accuracy:"",mAccuracy[best]), col=2, cex=0.8)\n\nmaxAccuracy = max(mAccuracy)\nTree Model\nWe tried Simple Tree Model and Random Forest in this part.\nSimple Tree\nWe grew the Simple Tree model based on one set up of train and test data\nfollowing the grow-and-prune process. Because of the randomness of train\nand test data, the accuracy rate of our Simple Tree model might floats.\nlibrary(tree)\nset.seed(1)\npima = read.csv(""pima_diabetes.csv"",header=T)\n\n#Data Cleanning\npima$class = as.factor(pima$class)\npima[,2:8][pima[,2:8] == 0] = NA\npima = na.omit(pima)\n\n#set up train and test data\nn = dim(pima)[1]\ntrain = sample(1:n, size = 130, replace = FALSE) #Indice of train data\npima_tr = pima[train, ] #the train data\npima_te = pima[-train, ] # the test data\n\n#First, grow a big tree\n\nbig_tree = tree(class ~ ., data = pima_tr)\nplot(big_tree)\ntext(big_tree)\n\n#make prediction on test data\npima_pred = predict(big_tree,\n                    newdata = pima_te,\n                    type=""class"") \n\n#compare predictions to actual diabetes status\nconf_mtx = table(pima_pred,pima_te$class) #diagonal are correct predictions, off-diagonal are incorrect\nconf_mtx\n##          \n## pima_pred   0   1\n##         0 141  30\n##         1  35  56\n\naccur_big = sum(diag(conf_mtx)) / dim(pima_te)[1]\ncat(""we have a big tree with accuracy rate of"", accur_big, \'\\n\')\n## we have a big tree with accuracy rate of 0.7519084\n\n#Second, we prune back our big tree to reach the optimal size (cp)\n\n#Do a 10-fold CV on our big tree\ntree_cv = cv.tree(big_tree, \n                  FUN = prune.misclass,\n                  K = 10)\n\n#find the size# with min missclassification rate\nplot(tree_cv, type = \'p\')\n\nbest_size = tree_cv$size[which.min(tree_cv$dev)]\n\n#prune back the big tree to the optimum size\npruned_tree = prune.misclass(big_tree, best = best_size)\nplot(pruned_tree)\ntext(pruned_tree, pretty = T)\n\n#look at predictions\npruned_tree_pred = predict(pruned_tree, \n                            newdata = pima_te,\n                            type=""class"")\nconf_mtx = table(pruned_tree_pred, pima_te$class) \nconf_mtx #diagonal are correct predictions, off-diagonal are incorrect\n##                 \n## pruned_tree_pred   0   1\n##                0 171  59\n##                1   5  27\n\naccur_pruned = sum(diag(conf_mtx)) / dim(pima_te)[1]\ncat(""we have a pruned tree with accuracy rate of"", accur_pruned,\n    ""with size of"", best_size, \'\\n\')\n## we have a pruned tree with accuracy rate of 0.7557252 with size of 3\n\nRandom Forest\nWe then built the Random Forest model based on a 10-fold CV where we\ntested the p value b/w 100 and 500 and the m value from 1 to 8 (total).\nWe ended up having an optimal RF with m = 4 and p = 100 which\nyeilds an accuracy rate of 77.55%.\nset.seed(1)\nlibrary(randomForest)\n## randomForest 4.6-14\n\n## Type rfNews() to see new features/changes/bug fixes.\n\n## \n## Attaching package: \'randomForest\'\n\n## The following object is masked from \'package:ggplot2\':\n## \n##     margin\n\npima = read.csv(""pima_diabetes_NA.csv"",header=T)\n\n#Data Cleanning\npima$class = as.factor(pima$class)\npima[,2:8][pima[,2:8] == 0] = NA\npima = na.omit(pima)\n\n#total num of obs in pima\nn = dim(pima)[1]\n\n#Define the number of folds, aka num of groups that the data is divided into\nkcv = 10 \n\n#Size of the fold (which is the number of elements in the test matrix)\nn0 = round(n/kcv, 0) \n\n#The model setups matrix\np = ncol(pima) - 1 #Number of covariates (-1 because one column is the response)\nmtryv = c(1:p) #Number of candidate variables for each split, the m val\nntreev = c(100,500) #Number of trees, the B val\nparmrf = expand.grid(mtryv,ntreev) #Expading grids of different models\ncolnames(parmrf)=c(\'mtry\',\'ntree\')\nnset = nrow(parmrf) #Number of models\n#print(parmrf)\n\n#error matrix\nout_ERR = matrix(0, #matrix filled with zeroes\n                 nrow = kcv, #number of rows\n                 ncol = nset) #number of columns/models\n\n#Vector of indices that have already been used inside the for\nused = NULL\n\n#The set of indices not used (will be updated removing the used)\nset = 1:n\n\nfor(j in 1:kcv){\n    \n    if(n0 < length(set)) { #If the set of \'not used\' is > than the size of the fold\n        val = sample(set, size = n0) #then sample indices from the set\n        #recall k-flod RADOMLY select obs from data to fill in each fold\n    }\n    if(n0 >= length(set)) { #If the set of \'not used\' is <= than the size of the fold\n        val = set #then use all of the remaining indices as the sample\n    }\n    \n    #Create the train and test matrices\n    train_i = pima[-val,] #Every observation except the ones whose indices were sampled\n    test_i = pima[val,] #The observations whose indices sampled\n    \n    for(i in 1:nset){\n        #The current model\n        temprf = randomForest(class ~ .,\n                              data = train_i,\n                              mtry = parmrf[i,1],\n                              ntree = parmrf[i,2],\n                              maxnodes = 15)\n        pred = predict(temprf,\n                       newdata = test_i,\n                       type = \'class\')\n        error_rate = sum(test_i$class != pred) / nrow(test_i)\n        #Store the current ERR\n        out_ERR[j,i] = error_rate\n    }\n    #The union of the indices used currently and previously, or, append val to used\n    used = union(used,val)\n    #The set of indices not used is updated\n    set = (1:n)[-used]\n    #Printing on the console the information that you want\n    #Useful to keep track of the progress of your loop\n    cat(j,""folds out of"",kcv,\'\\n\')\n}\n## 1 folds out of 10 \n## 2 folds out of 10 \n## 3 folds out of 10 \n## 4 folds out of 10 \n## 5 folds out of 10 \n## 6 folds out of 10 \n## 7 folds out of 10 \n## 8 folds out of 10 \n## 9 folds out of 10 \n## 10 folds out of 10\n\n#Calculate the mean of error rate for each model\nmERR = apply(out_ERR, 2, mean) \n\n#plot m vs error rate graph for p = 100 and p = 500\nplot(x = 1:8,\n     y = sqrt(mERR[1:8]),\n     xlab=""m value"",\n     ylab=""out-of-sample error rate"",\n     col=4, #Color of line\n     lwd=2, #Line width\n     type=""l"", #Type of graph = line\n     cex.lab=1.2, #Size of labs\n     main=paste(""10-fold CV"")) #Title of the graph\nlines(x = 1:8,\n     y = sqrt(mERR[9:16]),\n     col = 5,\n     lwd = 2)\nlegend(""topright"",\n       legend=c(""p = 100"", ""p = 500""),\n       col=c(4, 5),\n       lty=c(1, 1),\n       cex=0.8)\n\n#pick up the best model overall \nbest = which.min(mERR)\nbestrf = randomForest(class ~ .,\n                      data = pima,\n                      mtry = parmrf[best,1],\n                      ntree = parmrf[best,2],\n                      maxnodes = 15)\n\n#calculate accuracy rate when predicting the whole population for pima\nbestrfpred = predict(bestrf, type=""class"")\nconf_mtx = table(bestrfpred, pima$class) \n#conf_mtx #diagonal are correct predictions, off-diagonal are incorrect\naccur_rf = sum(diag(conf_mtx)) / dim(pima)[1]\ncat(""we have a random forest model with accuracy rate of"", accur_rf,\n    ""with m ="", parmrf[best, 1],\n    ""p = "", parmrf[best, 2], \'\\n\')\n## we have a random forest model with accuracy rate of 0.7755102 with m = 4 p =  100\n\nLogistic Regression\nIn the end we performed a Logistic Regression with cross validation. The\nraw CV estimate of accuracy returned is 78.06% and the adjusted\nestimate is 77.60%.\n# first we scale the data that will be used later for variable selection \nXXdia <- scale(diabetes[,-9])\nDIAdata <- data.frame(class,XXdia)\n#define our own cost function here\nmycost <- function(r, pi){  #r = observed responses, pi = fitted responses\n  c1 = (r==1)&(pi<0.5) #logical vector - true if actual 1 but predict 0\n  c0 = (r==0)&(pi>=0.5) #logical vector - true if actual 0 but predict 1\n  return(mean(c1+c0))\n}\ndiabetes.glm <- glm(class ~ ., family = \'binomial\', data = DIAdata)\nset.seed(1)\ncv.error = cv.glm(DIAdata,diabetes.glm, cost = mycost, K=10)$delta\ncv.error  \n## [1] 0.2278646 0.2255198\n\nVariable Selection\nAs previously mentioned with the box plot, we notice some variables\nmight have stronger predictive ability than others. Here,we will perform\nout-of-sample variable selection methods with Logistic Regression\nalgorithm to find out the more important predictors.\n#split the dataset into training and test data for all the variable selection methods for better comparison\nn = dim(diabetes)[1]\nset.seed(1)\ntr = sample(1:n, \n             size = 274, # we take 70% of our dataset as training data\n             replace = FALSE) \nOut-of-Sample Stepwise Methods\nWe tried all three kinds of stepwise method: forward, backward and both.\nThe results returned are the same with the model **class ~ plas + mass\n\nage** and an accuracy of 76.27%.\n\nForward Selection\ntest_x = DIAdata[-tr,][,-1]\ntest_y = DIAdata[-tr,][,1]\n\n#Two models initially\nnull = glm(class~1, data=DIAdata[tr,], family = \'binomial\' ) \nfull = glm(class~., data=DIAdata[tr,], family = \'binomial\') \n\nregForward = step(null, \n                  scope=formula(full),\n                  direction=""forward"", \n                  k=log(length(tr))) \n## Start:  AIC=351.1\n## class ~ 1\n## \n##        Df Deviance    AIC\n## + plas  1   302.24 313.46\n## + mass  1   321.63 332.86\n## + preg  1   332.51 343.74\n## + pedi  1   332.87 344.09\n## + age   1   333.55 344.78\n## <none>      345.49 351.10\n## + test  1   344.00 355.23\n## + skin  1   344.18 355.41\n## + pres  1   345.45 356.67\n## \n## Step:  AIC=313.46\n## class ~ plas\n## \n##        Df Deviance    AIC\n## + mass  1   284.90 301.74\n## + preg  1   290.95 307.79\n## + pedi  1   293.52 310.36\n## <none>      302.24 313.46\n## + age   1   296.93 313.77\n## + test  1   300.53 317.37\n## + pres  1   300.93 317.77\n## + skin  1   302.09 318.93\n## \n## Step:  AIC=301.74\n## class ~ plas + mass\n## \n##        Df Deviance    AIC\n## + preg  1   271.94 294.39\n## + age   1   273.28 295.73\n## + test  1   279.22 301.67\n## <none>      284.90 301.74\n## + pedi  1   279.67 302.12\n## + skin  1   282.55 305.01\n## + pres  1   282.82 305.27\n## \n## Step:  AIC=294.39\n## class ~ plas + mass + preg\n## \n##        Df Deviance    AIC\n## + pedi  1   265.90 293.97\n## <none>      271.94 294.39\n## + pres  1   266.93 294.99\n## + test  1   268.35 296.41\n## + age   1   268.70 296.77\n## + skin  1   270.20 298.27\n## \n## Step:  AIC=293.97\n## class ~ plas + mass + preg + pedi\n## \n##        Df Deviance    AIC\n## + test  1   259.04 292.72\n## + pres  1   259.96 293.64\n## <none>      265.90 293.97\n## + skin  1   262.48 296.16\n## + age   1   262.68 296.36\n## \n## Step:  AIC=292.72\n## class ~ plas + mass + preg + pedi + test\n## \n##        Df Deviance    AIC\n## + pres  1   252.88 292.18\n## <none>      259.04 292.72\n## + age   1   256.89 296.19\n## + skin  1   258.40 297.69\n## \n## Step:  AIC=292.18\n## class ~ plas + mass + preg + pedi + test + pres\n## \n##        Df Deviance    AIC\n## <none>      252.88 292.18\n## + age   1   249.81 294.71\n## + skin  1   252.46 297.37\n\nforward_prob <- predict(regForward, test_x, type = ""response"")\nforward_pred <- ifelse(forward_prob > 0.5, 1, 0)\nforward_acc = mean(forward_pred==test_y)\n\nforward_acc\n## [1] 0.7651822\n\nBackward Selection\nregBack = step(full, \n               direction=""backward"", \n               k=log(length(tr))) \n## Start:  AIC=299.99\n## class ~ preg + plas + pres + skin + test + mass + pedi + age\n## \n##        Df Deviance    AIC\n## - skin  1   249.81 294.71\n## - age   1   252.46 297.36\n## - test  1   253.25 298.16\n## <none>      249.48 299.99\n## - preg  1   256.13 301.03\n## - pres  1   256.36 301.27\n## - pedi  1   259.85 304.75\n## - mass  1   273.10 318.01\n## - plas  1   284.43 329.34\n## \n## Step:  AIC=294.71\n## class ~ preg + plas + pres + test + mass + pedi + age\n## \n##        Df Deviance    AIC\n## - age   1   252.88 292.18\n## <none>      249.81 294.71\n## - test  1   255.53 294.82\n## - preg  1   256.34 295.63\n## - pres  1   256.89 296.19\n## - pedi  1   259.91 299.20\n## - mass  1   274.32 313.61\n## - plas  1   285.21 324.50\n## \n## Step:  AIC=292.18\n## class ~ preg + plas + pres + test + mass + pedi\n## \n##        Df Deviance    AIC\n## <none>      252.88 292.18\n## - pres  1   259.04 292.72\n## - test  1   259.96 293.64\n## - pedi  1   263.39 297.07\n## - preg  1   267.05 300.73\n## - mass  1   274.57 308.25\n## - plas  1   294.88 328.56\n\nback_prob <- predict(regBack, test_x, type = ""response"")\nback_pred <- ifelse(back_prob > 0.5, 1, 0)\nback_acc = mean(back_pred==test_y)\n\nback_acc\n## [1] 0.7651822\n\nBoth Selection\nregHybrid = step(null, \n                 scope=formula(full), \n                 direction=""both"", \n                 k=log(length(tr))) \n## Start:  AIC=351.1\n## class ~ 1\n## \n##        Df Deviance    AIC\n## + plas  1   302.24 313.46\n## + mass  1   321.63 332.86\n## + preg  1   332.51 343.74\n## + pedi  1   332.87 344.09\n## + age   1   333.55 344.78\n## <none>      345.49 351.10\n## + test  1   344.00 355.23\n## + skin  1   344.18 355.41\n## + pres  1   345.45 356.67\n## \n## Step:  AIC=313.46\n## class ~ plas\n## \n##        Df Deviance    AIC\n## + mass  1   284.90 301.74\n## + preg  1   290.95 307.79\n## + pedi  1   293.52 310.36\n## <none>      302.24 313.46\n## + age   1   296.93 313.77\n## + test  1   300.53 317.37\n## + pres  1   300.93 317.77\n## + skin  1   302.09 318.93\n## - plas  1   345.49 351.10\n## \n## Step:  AIC=301.74\n## class ~ plas + mass\n## \n##        Df Deviance    AIC\n## + preg  1   271.94 294.39\n## + age   1   273.28 295.73\n## + test  1   279.22 301.67\n## <none>      284.90 301.74\n## + pedi  1   279.67 302.12\n## + skin  1   282.55 305.01\n## + pres  1   282.82 305.27\n## - mass  1   302.24 313.46\n## - plas  1   321.63 332.86\n## \n## Step:  AIC=294.39\n## class ~ plas + mass + preg\n## \n##        Df Deviance    AIC\n## + pedi  1   265.90 293.97\n## <none>      271.94 294.39\n## + pres  1   266.93 294.99\n## + test  1   268.35 296.41\n## + age   1   268.70 296.77\n## + skin  1   270.20 298.27\n## - preg  1   284.90 301.74\n## - mass  1   290.95 307.79\n## - plas  1   307.07 323.91\n## \n## Step:  AIC=293.97\n## class ~ plas + mass + preg + pedi\n## \n##        Df Deviance    AIC\n## + test  1   259.04 292.72\n## + pres  1   259.96 293.64\n## <none>      265.90 293.97\n## - pedi  1   271.94 294.39\n## + skin  1   262.48 296.16\n## + age   1   262.68 296.36\n## - preg  1   279.67 302.12\n## - mass  1   281.06 303.52\n## - plas  1   297.68 320.14\n## \n## Step:  AIC=292.72\n## class ~ plas + mass + preg + pedi + test\n## \n##        Df Deviance    AIC\n## + pres  1   252.88 292.18\n## <none>      259.04 292.72\n## - test  1   265.90 293.97\n## + age   1   256.89 296.19\n## - pedi  1   268.35 296.41\n## + skin  1   258.40 297.69\n## - preg  1   269.83 297.90\n## - mass  1   278.11 306.17\n## - plas  1   297.47 325.54\n## \n## Step:  AIC=292.18\n## class ~ plas + mass + preg + pedi + test + pres\n## \n##        Df Deviance    AIC\n## <none>      252.88 292.18\n## - pres  1   259.04 292.72\n## - test  1   259.96 293.64\n## + age   1   249.81 294.71\n## - pedi  1   263.39 297.07\n## + skin  1   252.46 297.36\n## - preg  1   267.05 300.73\n## - mass  1   274.57 308.25\n## - plas  1   294.88 328.56\n\nhybrid_prob <- predict(regHybrid, test_x, type = ""response"")\nhybrid_pred <- ifelse(hybrid_prob > 0.5, 1, 0)\nhybrid_acc = mean(hybrid_pred==test_y)\n\nhybrid_acc\n## [1] 0.7651822\n\nOut-of-Sample Shrinkage Method\nLasso returns with an accuracy of 77.11% with the model\nclass~plas+mass+age.By looking at the coefficients, plas has a more\nsignificant predicting power, mass comes the second, and age comes the\nthird. This verifies our guess when first looking at the box plot. And\nthe predictors chosen by Lasso is also consistent with what we get from\nthe stepwise method.\nRidge, on the other hand, has a compromised performance with an accuracy\nof 72.88% only.\nLasso\ntrain_x = as.matrix(DIAdata[tr,-1])\ntrain_y = DIAdata[tr,1] \ntest_x = as.matrix(DIAdata[-tr,-1])\ntest_y = DIAdata[-tr,1] \n\nLasso.Fit = glmnet(train_x,train_y,family = \'binomial\',alpha=1)\nplot(Lasso.Fit)\n\n#Cross Validation\nset.seed(1)\nCV.L = cv.glmnet(train_x, train_y, family = \'binomial\',type.measure=""class"", alpha=1) \ncoef(CV.L,s=""lambda.1se"")\n## 9 x 1 sparse Matrix of class ""dgCMatrix""\n##                      1\n## (Intercept) -0.9314809\n## preg         0.3155049\n## plas         0.8844288\n## pres        -0.2435930\n## skin         .        \n## test        -0.1872814\n## mass         0.6453351\n## pedi         0.3326329\n## age          0.2289776\n\n####Plots#####\nLamL = CV.L$lambda.1se\nplot(log(CV.L$lambda),sqrt(CV.L$cvm),\n     main=""LASSO CV (k=10)"",xlab=""log(lambda)"",\n     ylab = ""RMSE"",col=4,type=""b"",cex.lab=1.2)\nabline(v=log(LamL),lty=2,col=2,lwd=2)\n\n####Predict on test set####\nlasso_predict = predict(CV.L,newx = test_x,s=""lambda.1se"",type=\'class\')\nlasso_conf_matrix <- table(lasso_predict,test_y)\nlasso_acc = mean(lasso_predict==test_y)\nlasso_acc\n## [1] 0.7753036\n\nRidge\nRidge.Fit = glmnet(train_x,train_y,family = \'binomial\',alpha=0)\npar(mfrow=c(1,1)) \nplot(Ridge.Fit)\n\n#Cross Validation\nset.seed(1)\nCV.R = cv.glmnet(train_x, train_y,family = \'binomial\',type.measure=""class"", alpha=0)\ncoef(CV.R,s=""lambda.1se"") # check coefficients of the model with optimal lambda\n## 9 x 1 sparse Matrix of class ""dgCMatrix""\n##                       1\n## (Intercept) -0.85131850\n## preg         0.23895294\n## plas         0.57684643\n## pres        -0.16125025\n## skin        -0.02002929\n## test        -0.08353884\n## mass         0.44403301\n## pedi         0.26467225\n## age          0.21115009\n\n#this lambda is not correponding to the lowest RMSE, instead its error is within one std of the min RMSE\n\n#Make the plot of how cv chooses the optimal lambda\nLamR = CV.R$lambda.1se\nplot(log(CV.R$lambda),sqrt(CV.R$cvm),\n     main=""Ridge CV (k=10)"",\n     xlab=""log(lambda)"",\n     ylab = ""RMSE"",\n     col=4,#Color of points\n     cex.lab=1.2) #Size o lab\nabline(v=log(LamR),lty=2,col=2,lwd=2) #selected lambda vs RMSE\n\n#predict on the test data\nridg_predict = predict(CV.R, newx = test_x,s=""lambda.1se"",type=\'class\')\nridg_acc = mean(ridg_predict==test_y)\nridg_conf_matrix <- table(ridg_predict,test_y)\n\nridg_acc\n## [1] 0.7651822\n\nModel Comparison\nMost of our models yield satisfactory accuracy of above 75%. We want to\nspecifically compare the Logistic Regression Model with all variables\nand Lasso with three variables picked to evalute whether variable\nselection process is effective. Both models have similar accuracy, while\nour team decides to go with the Logistic Regression with all variables.\nThe main reason is that our model is trying to solve the problem of\npredicting diabetes. It is crucial to correctly identify the patients\nwith diabetes for timely treatment. Therefore, sensitivity score of the\nmodel is an important criteria to look at besides the accuracy score.\nBelow we are doing the out-of-sample Logistic Regression in order to\nbetter compare with the Lasso model. We will be also generating the\nconfusion matrix for both models.\n#\ntrain = DIAdata[tr,] \ntest_x = DIAdata[-tr,][,-1]\ntest_y = DIAdata[-tr,][,1]\n\ndiabetes.glm <- glm(class ~ ., family = \'binomial\', data = train)\nglm_predict_prob <-predict(diabetes.glm, newdata = test_x, family = \'binomial\',type = \'response\')\nglm_predict <- ifelse(glm_predict_prob > 0.5, 1, 0)\nglm_predict_accuracy <- mean(glm_predict == test_y)\n\n\nglm_conf_matrix <- table(glm_predict,test_y)\nglm_conf_matrix\n##            test_y\n## glm_predict   0   1\n##           0 282  81\n##           1  33  98\n\n#confusion matrix for lasso\nlasso_conf_matrix\n##              test_y\n## lasso_predict   0   1\n##             0 287  83\n##             1  28  96\n\nLogistic Regression with all Variables Sensitivity Score: 0.6154\nSpecificity Score: 0.8734\nLasso with class~plas+mass+age Sensitivity Score: 0.4103\nSpecificity Score: 0.9494\nAs we can see, Logistic Regression with all variables achieve a leap in\nthe sensitivity score with a small compromise of specificity score. This\nmight be due to the information contained in the variables that aren’t\nselected by Lasso.\nWhat’s more, since our dataset only has 8 predictors, we are not\nanalyzing our data in a high-dimensional space which requires varaibles\nselection methods to reduce the dimensionality.\n'], 'url_profile': 'https://github.com/haohe1113', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Birmingham, Alabama', 'stats_list': [['21', '          followers'], ['29', '          following'], ['4']], 'contributions': '298 contributions\n        in the last year', 'description': [""\nACC AHA BP guideline groups\nThis repository contains all of the code necessary to reproduce the\nmanuscript Predicted cardiovascular risk for US adults with diabetes,\nchronic kidney disease, and ≥ 65 years of age. The abstract and one\ncentral illustration for the paper are below.\nABSTRACT\nBackground: The 2017 American College of Cardiology/American Heart\nAssociation blood pressure (BP) guideline recommends using 10-year\npredicted atherosclerotic cardiovascular disease (ASCVD) risk to guide\ndecisions to initiate antihypertensive medication.\nObjectives: Determine if the majority of US adults in subgroups\ndefined by diabetes, chronic kidney disease (CKD), and age ≥65 years\nhave high ASCVD risk (i.e., 10-year predicted ASCVD risk ≥10% or\nclinical CVD), and estimate the age-adjusted probability of having high\nASCVD risk.\nMethods: Adults aged 40-79 years from the National Health and\nNutrition Examination Survey 2013-2018 were included (n=8,803). We\npredicted 10-year ASCVD risk using the Pooled Cohort risk equations and\nclinical CVD was self-reported. Analyses were conducted overall and\namong those with stage 1 hypertension, defined by systolic BP of 130-139\nmm Hg or diastolic BP of 80-89 mm Hg.\nResults: Among US adults, an estimated 72.3%, 64.5%, and 83.9% of\nthose with diabetes, CKD, and age ≥65 years had high ASCVD risk,\nrespectively. Among US adults with stage 1 hypertension, an estimated\n55.0%, 36.7%, and 72.6% of those with diabetes, CKD, and age ≥65 years\nhad high ASCVD risk, respectively. The probability of having high ASCVD\nrisk increased with age and exceeded 50% for US adults with diabetes and\nCKD at ages 52 and 57 years, respectively. For those with stage 1\nhypertension, these ages were 55 and 64, respectively.\nConclusions: Most US adults with diabetes, CKD, or age ≥65 years had\nhigh ASCVD risk. However, many with stage 1 hypertension did not.\nCentral Illustration\nDistribution of US adults by blood pressure and antihypertensive\nmedication use categories. In text, the proportion of adults with stage\n1 hypertension at high atherosclerotic cardiovascular disease risk in\nsubgroups defined by diabetes, chronic kidney disease and age ≥ 65\nyears.\n\nHigh atherosclerotic cardiovascular disease risk was defined by a\n10-year predicted risk for atherosclerotic cardiovascular disease ≥ 10%\nor clinical cardiovascular disease. Data are from the National Health\nand Nutrition Examination Survey, 2013-2018.\nASCVD = atherosclerotic cardiovascular disease; CKD = chronic kidney\ndisease\nNote: This illustration is not the same as the central illustration in\nthe paper. A different version is used in order to adhere to a\npublication agreement: “Excluding abstracts, none of the paper’s\ncontents have been previously published.”\nINSTRUCTIONS FOR REPRODUCTION\nTo reproduce this manuscript, you should first obtain all of the code in\nthis repository. To do this, fork or download its contents. Once the\nrepository is locally available and its contents unzipped, find and open\nthe ACC AHA BP guideline groups.Rproj file. This should trigger\nRstudio to open the project for you in a local R session.\nTo reproduce the manuscript as-is, follow the steps below:\n\n\nOpen packages.R and run all of the code in the file.\n\n\nThe pacman package must be installed on your machine to run\nthis code\n\n\nTwo packages need to be installed from GitHub: table.glue and\nPooledCohort. If you asked whether you want to update\ndependencies - say ‘no’. If pacman is not able to do this for\nyou, you can use remotes::install_github('bcjaeger/table.glue)\nand remotes::install_github('bcjaeger/PooledCohort) to get\nthese packages manually.\n\n\nIt may take more than one try to successfully download and/or\nupdate the packages and their dependencies. If any installations\nfail, try restarting your R session and using\ninstall.packages() to install any packages that are causing\nissues for pacman.\n\n\n\n\nThis project is built around drake, a workflow package. To produce\nevery target in the drake workflow, run drake::r_make() in your\nconsole.\n\n\nAllow Rstudio to access the internet if prompted, as\ndrake::r_make() will be downloading NHANES data from the NHANES\nwebsite while it produces the manuscript.\n\n\ndrake::r_make() will build every target, ending with the\nmanuscript and finally the README.md file. Simply open the file\n‘doc/ACCAHA_BP_groups.docx’ to see the manuscript you built.\n\n\nNote: If an error occurs while the project is being made and you have\nsuccessfully downloaded all of the packages in packages.R, please file\nan issue in this repository.\nMake a different manuscript\nNote: Not everything in the paper will update when you change\nparameters. For example, the exclusion figure was made using InkScape\nand the paper’s central illustration was made using PowerPoint, so they\nwon’t update if you change parameters in the plan.R file. However, the\nremaining figures and text are.\nThese instructions assume you have successfully completed the steps\nabove. If you would like to change some initial parameters for the\nmanuscript, you can do so by following these instructions:\n\n\nOpen R/plan.R.\n\n\nNotice that exams = c(2013, 2015, 2017) is the first argument in\ndrake_plan(). Change this to exams = c(2011, 2013, 2015, 2017)\nto include a fourth NHANES exam.\n\n\nSave your changes to the R/plan.R file and then run\ndrake::r_make() in your console.\n\n\nEnjoy reading your fascinating new paper!\n\n\nThere are a few other parameters that can be changed in R/plan.R:\n\nfasted_hrs_lower = 8,\nfasted_hrs_upper = 24,\ngluc_cutpoint_fasted = 126,\ngluc_cutpoint_fed = 200,\nhba1c_cutpoint = 6.5,\negfr_cutpoint = 60,\nacr_cutpoint = 30\n\nThese values define variables, manuscript variable definitions, and\ntable footnotes.\n""], 'url_profile': 'https://github.com/bcjaeger', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Silicon Valley, CA', 'stats_list': [['7', '          followers'], ['11', '          following'], ['1']], 'contributions': '231 contributions\n        in the last year', 'description': ['LogisticRegression\nMy implementation of Logistic Regression which is used to predict whether someone has diabetes or not.\nThe dataset I used can be found at: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/20arjuna', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['0', '          following'], ['1']], 'contributions': '44 contributions\n        in the last year', 'description': ['Prediction-of-Diabetes-With-Different-Models-and-Finding-the-High-Accuracy-Model\nThis Project is to identify the diabetes patients from the given dataset. And also provides, the model which gives high accuracy.\n'], 'url_profile': 'https://github.com/LakshmiNarayana-9990', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}","{'location': 'Haryana', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['Prediction-of-Diabetes-in-Women-Logistic-Regression-Model-Comparison-Predictive-Analytics-\nThe primary objective was to predict the occurrence of Diabetes in Women, given the personal details of a female. A Logistic Regression Model was developed and validated with test data to predict the chances of someone suffering from the disease.\n'], 'url_profile': 'https://github.com/AparajitaMukherjee', 'info_list': ['Jupyter Notebook', 'Updated Aug 23, 2020', 'Jupyter Notebook', 'Updated Aug 18, 2020', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Updated Aug 20, 2020', 'Jupyter Notebook', 'Updated Aug 24, 2020', 'Updated Dec 23, 2020', 'R', 'Updated Jan 14, 2021', 'Python', 'Updated Aug 20, 2020', 'Updated Aug 23, 2020', 'R', 'Updated Aug 23, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '50 contributions\n        in the last year', 'description': [""AI_For_Health\nThis is a web app which uses ML model based on Logistic regression to predict either a patient's diabetes\nIt is deployed on the pivotal web services\nThe link of the deployed product:\nhttps://diabetesprediction-impressive-swan-vi.cfapps.io/\n""], 'url_profile': 'https://github.com/ramsahani', 'info_list': ['Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 24, 2020']}","{'location': 'Hyderabad ,India', 'stats_list': [['9', '          followers'], ['9', '          following'], ['24']], 'contributions': '461 contributions\n        in the last year', 'description': [""Diabetes-Prediction-Detection-App\n\nSimple App which can detect Weather you are diagnoised with Diabetic or not depending up on users data provided to the application.\n\nCreated an app that detects wheather they  have Diabetics or not to help doctors with 89% accuracy .\nData collected from Open source websites from Internet .\nProcessed features to make data look's like perfect and to get good accuracy with less loss\nI had used Ada boost Classifier ,XGBoost ,Logistic ,support vector to reach best model\nDeployed model on Heroku .\n\nCode and Resources Used :\n\nPython Version : 3.7\nPackages: pandas, numpy, sklearn, matplotlib, seaborn, selenium, flask, json, pickle\nFor Web Framework Requirements: pip install -r requirements.txt\n\nExploratory Data Analysis :\n\n\nTo know cor-relation  between every feature i had used corr()\n\n\n\nTo check Outliers i had used Box plot to know weather outliers present or not .And this is one of the best way to check outliers.\nTo remove outliers Z-score is one of the best way to remove outliers .\n\nModel Building :\nFirst, I transformed the categorical variables into dummy variables. I also split the data into train and tests sets with a test size of 20%.\nI tried three different models and evaluated them using Classification Metrics. I chose Confusion Matrix Because it's better to understand how many features are going to support and not going to support .\nI tried Five different models:\n\nSupport Vector Classifier: It classifies data perfectly\nLogistic Regression\nK-Nearest Neighbour Classifier\nNaive Bayes Classifier\nXGBoost Classifier\n\nModel Performance :\n\nTo measure the performance of every model i had used classification metrics ,it is one of the best way to know which model is best depending up on all the metrics.\n\nProductionization :\n\nIn this step , I had deployed Model on heroku with Flask api.\nThe API endpoint takes in a request with a values by end user and returns weather they have Diabetes or not . Here is URL to predict Diabetes Identification Web App\n\n""], 'url_profile': 'https://github.com/SKJNR', 'info_list': ['Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 24, 2020']}","{'location': 'Istanbul', 'stats_list': [['5', '          followers'], ['17', '          following'], ['57']], 'contributions': '182 contributions\n        in the last year', 'description': [""Machine Learning using Synthesized Patient Health Records on IBM DB2 🚀 🌁\n\n\n📌 DISCLAIMER: This notebook is used for demonstrative and illustrative purposes only and does not constitute an offering that has gone through regulatory review. It is not intended to serve as a medical application. There is no representation as to the accuracy of the output of this application and it is presented without warranty.\n\nThis notebook explores how to train a machine learning model to predict type 2 diabetes using synthesized patient health records. The use of synthesized data allows us to learn about building a model without any concern about the privacy issues surrounding the use of real patient health records.\nWhen the reader has completed this Code Pattern, they will understand how to:\n\nStore data on IBM DB2 database\nPrepare data using SciKit-learn and Pandas.\nVisualize data relationships using Seaborn & Matplotlib.\nTrain a machine learning model and publish it in the Watson Machine Learning (WML) repository.\nDeploy the model as a web service and use it to make predictions.\n\nFlow\n\n\n\nCreate a Watson Studio Project on IBM Cloud.\nCreate a DB2 on Cloud Database : IBM DB2 stores information that will be used for machine learning and predictions.\nCreate Watson Machine Learning Service\nCreate a Jupyter notebook in Watson Studio\nPublish and deploy model with Watson Machine Learning\n\nSteps\n\n\nClone the repo\nCreate an IBM Cloud account\nLoad data into IBM Db2 on Cloud\nSetup Watson studio project\nCreating and deploying a machine learning model\nTesting using UI\n\n1. Clone the repo\nBefore we start anything, we need to clone the repo. The repo has our dataset and python notebook which we will use when creating our model.\ngit clone https://github.com/ademaldemir/machine-learning-patient-records-on-db2.git\n2. Create an IBM Cloud account\nCreate a free IBM on Cloud Account if you don't already have one using the following link:\nIBM Cloud\nCreating this account will give us access to Db2 on Cloud and Watson Studio services.\n3. Load data into IBM Db2 on Cloud\nNow that we have created our IBM Cloud account. We need to create a Db2 on Cloud service. Once we have create that, we will then we able to load our data into our database.\n\nCreate Db2 on Cloud Service\nGet Db2 on Cloud credentials\nLoad Data into Db2 on Cloud\n\n3a. Create Db2 on Cloud Service\nGo to the dashboard of your IBM Cloud account and follow the steps to create your Db2 On Cloud service.\n\n\nIn the search bar at the top of your dashboard, search Db2.\nAlthough there are different database options to choose from, for the purposes of this tutorial we will be using the Db2 option. Click Db2 when that option appears in the search bar.\n\n\n\nFor the service name, enter in Data-Science-for-health.\nMake sure you pick the region that is closest to where you currently reside.\nLook at the Pricing Plan section and choose the Lite plan.\nClick Create\n\n\nNOTE: You will be only able to create one instance per account.\n\n\nOnce you have created your database instance, we can go back to the dashboard and click on the Resource List link under the Navigation Menu section. You should then be able to see and verify that your Db2 instance has been created under the Services tab.\n\n\n3b. Get Db2 on Cloud credentials\n\n\nGo to the dashboard of your IBM Cloud account and follow the steps to load your data onto Db2 On Cloud service.\n\n\nIn the search bar, search Data-Science-for-health and click on your Db2 on Cloud service.\n\n\nBefore we load data to database, we need to first create credentials for our database so both that Watson Studio can connect to it and we can learn .\n\nClick on Service Credentials on the left hand side.\nClick on New Credentials and then Add. Make sure to save the credentials for later use.\n\n\nThe key information that is important for us is:\n\nHOSTNAME\nUI\nPWD\nDATABASE\nUSERNAME ⭐️\n\n\nThe important part here is, for now:\nWe will use the username at the bottom of the service credentials you created when uploading data to db2.\nNotice ! The name of the DB2 scheme where you will install Data should be the username name assigned specifically for you.\n\n\n3c. Load Data into Db2 on Cloud\n\nClick on Open Console button under the Manage on the left side and Open Console button will direct you to the Db2 on Cloud Console.\n\n\n\nClick on Load under the Hamburger menu.\nClick on browse files and select diabetes.csv from your computer.\nClick Next.\n\n\n\nThe next step is to decide where our data will be stored. Click on the scheme with the same name as your DB2 username, then select New Table.\nEnter DIABETES as our table name and select Create and finally Next.\nMake sure the column names and datatypes are correct, and click Next.\nClick Begin Load.\n\n\nOnce the job has been completed, our data has finally been loaded into our database.\n\n4. Setup Watson Studio project\nSetting up our project enivorment can be broken down in the follow steps.\n\nCreating Watson Studio service\nCreating a Watson Studio project\nConnect Db2 on Cloud with Watson Studio\n\n4a. Creating Watson Studio service\n\nGo to Catalog and search for  Watson Studio and click on that option.\n\n\n\nFill out all the fields and choose 'Lite' plan.\nClick Create and then Get Started.\n\nThis will redirect you to the Watson Studio homepage.\n4b. Creating a Watson Studio project\nHey! 🧞\u200d♂️\nWelcome to the new interface of IBM Cloud Pak for Data. ❤️\n\nLet's now create and setup our project.\n\n\nSelect Create a Project and then select Standard.\nIf you haven't created object storage earlier, go to the bottom of the page and click the link Cloud Object Storage. Choose the Lite plan and click Create.\nGo back to the project page and make sure to choose the Cloud Object Storage that you have created earlier.\nFill out the project details and click Create.\n\nThis will take you to your project dashboard/homepage.\n4c. Connect Db2 on Cloud with Watson Studio\n\nOn the top of the project homepage, select Add to project and then click Connection.\nSelect  Db2 connection option that you created.\n\n\n\nThis will take you to a connection configuration page. Here, we will enter the Db2 credentials that we got from Step 4a. Make sure to use 50000 or it can be default value for the Port option.\nClick Create once you have entered all the required information.\n\nThis will redirect you to the asset page for this project, and you should see your new Db2 connection as one of the assets.\nNow that we have our database connected to our project, we need to also connect our data that is stored in our database to the project as well.\n\nOn the top of the project homepage, select Add to project and then click Connected data.\nSelect Select Source.\n\n\n\nSelect our database, scheme and finally our table DIABETES.\nClick Select.\nLet's name this connected data as DIABETES and then click Create.\n\nWe have finally created our Watson Studio service. Within that, created a project where our database and data are connected. We can now finally start coding and building our Machine Learning models on Jupyter Notebook!\n5. Creating and deploying a Machine Learning Model\n\nOn the top of the project homepage, select Add to project and then click Notebook.\n\n\n\nFill out the notebook details\nSelect From URL option from the tab and paste the following link to Notebook URL field:\nhttps://raw.githubusercontent.com/ademaldemir/machine-learning-patient-records-on-db2/master/health_record_notebook.ipynb\n\nBefore we run the notebook, we need to create Watson Machine Learning instance so that we can deploy the model to Watson Machine Learning on IBM Cloud. Here are the steps:\n\nGo to IBM cloud dashboard and click Create Resource\nSearch for machine learning and select Machine Learning service\nFill out the details, select Lite plan and click Create.\n\n\n\nAnd finally Create Service Credentials as shown below\n\n\nIn the notebook, after the import cell, add cell to create connection as shown below.\n\nSelect your DB2 username from the Schemes section. And select the table named DIABETES you loaded.\n\nRun the cell containing the functions imported from the ibmdbpy library and your db2 informations. And observe the results. 🔎\n\nThe dataset type is ibmdbpy.frame.IdaDataFrame.\n\nTo make the dataset type pandas.core.frame.DataFrame, we click on the Find and add data button in the upper right corner and select pandas DataFrame from the Connections tab. Then, select your db2 username assigned specifically to you from the schemas. Find the DIABETES table and click Select.\n\nAdd Watson Machine Learning service credentials that you have saved from above, at step 5 of the notebook as shown below.\n\nThen, run all the cells. At the end of the run the model will be deployed using Watson Machine Learning on IBM Cloud so that you could use the same model to predict the person's illness through Watson Machine Learning service.\nLearn more\n\n\nFollow the IBM Z & LinuxONE Community Turkey community.\nCheck out our other events.\n\n\n🚀 created by: Adem Aldemir\n🌁 presented by: Adem ALDEMIR and Betül TEKNE\n🧬 inspired by this code pattern\n\n\n""], 'url_profile': 'https://github.com/ademaldemir', 'info_list': ['Jupyter Notebook', 'Updated Aug 18, 2020', 'Jupyter Notebook', 'Updated Aug 19, 2020', '1', 'Jupyter Notebook', 'Updated Aug 24, 2020']}",,,,,,,
