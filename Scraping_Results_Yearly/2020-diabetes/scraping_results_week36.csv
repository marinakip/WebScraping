"{'location': 'Sweden ', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/salamatoto', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['Diabetes\nChronic conditions associated with disease\n'], 'url_profile': 'https://github.com/jandata2020', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '80 contributions\n        in the last year', 'description': ['Diabetes\n'], 'url_profile': 'https://github.com/phanindhargolla', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '23 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/andrericsouza', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '28 contributions\n        in the last year', 'description': ['This is an android apllication built over kivy a python framework that predict the chances of diabetes using kaggle dataset and machine laerning.\n\n\nTry not to used scikit-learn library\nAs it is written in C and kivy will not be able to compile\nSo try to write your own algorithm from scratch\n\nClick the below link to download:\nhttps://drive.google.com/file/d/1ndRHyTLCf3X0D2RQPOn8696cKffnZF1H/view?usp=sharing\n'], 'url_profile': 'https://github.com/prasadilla42', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'India', 'stats_list': [['3', '          followers'], ['2', '          following'], ['0']], 'contributions': '15 contributions\n        in the last year', 'description': ['DiabetesPrediction\nHere, we have collected database from online source, of 800 different women with details of their insulin level, No of pregnancy, BMI, skin thickness, age\nand also the outcome whether they had diabetes or not. We made a model using machine learning to predict whether a person has diabetes or not. In this we used three different approaches Logistic Regression, Decision Tree Regeression and Random Forest Classification, after comparing the accuracy of the test data set of each approach we came to the conclusion that Random Forest Classification predicted the best and had a accuracy of 78.6% predictions.\n'], 'url_profile': 'https://github.com/Shield011', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'Frankfurt am Main', 'stats_list': [['1', '          follower'], ['3', '          following'], ['2']], 'contributions': '193 contributions\n        in the last year', 'description': ['Diabetes App using Machine Learning algorithm (Random Forest)\nDeployed in: https://diabetes-app-ml.herokuapp.com/\n'], 'url_profile': 'https://github.com/JahedNaghipoor', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'Odisha', 'stats_list': [['6', '          followers'], ['8', '          following'], ['29']], 'contributions': '541 contributions\n        in the last year', 'description': ['Online-Disease-Detection-and-Prediction-Analysis\n\n\nRun the Application\nTo run this application in your local machine first install all the dependencies.\nthen run below command\nmanage.py runserver 8000\nMediBot\nIt provides doctors recommendation on the basis of disease predicted through symptoms selected by the user.\n\n'], 'url_profile': 'https://github.com/iamsiddharthdas', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'Bangalore', 'stats_list': [['1', '          follower'], ['0', '          following'], ['17']], 'contributions': '166 contributions\n        in the last year', 'description': ['Diabetes Prediction using Machine Learning.\nTable of Content\n\nOverview\nMotivation\nDemo\nLearning Objective\nTechnical Aspect\nTechnologies Used\nInstallation\nRun\n\nOverview\nIn this project, the objective is to predict whether the person has Diabetes or not based on various features like Number of Pregnancies, Insulin Level, Age, BMI.The data set that has used in this project has taken from the kaggle . ""This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage."" and used a simple XGBoost.\n[]\nMotivation\nThe motivation was to experiment  with end to end machine learning project and get some idea about deployment platform like Heroku and offcourse this ""\nDiabetes is an increasingly growing health issue due to our inactive lifestyle. If it is detected in time then through proper medical treatment, adverse effects can be prevented. To help in early detection, technology can be used very reliably and efficiently. Using machine learning we have built a predictive model that can predict whether the patient is diabetes positive or not.""\nDemo\nVisit this link for live demo\nLearning Objective\nThe following points were the objective of the project (The main intention was to create an end-to-end ML project.)\n\nData gathering\nDescriptive Analysis\nData Visualizations\nData Preprocessing\nData Modelling\nModel Evaluation\nModel Deployment\n\nTechnical Aspect\n\nTraining a machine learning model using scikit-learn.\nBuilding and hosting a Flask web app on Heroku.\nA user has to put details like Number of Pregnancies, Insulin Level, Age, BMI etc .\nOnce it get all the fields information , the prediction is displyed on a new page .\n\nTechnologies Used\n\n\n\n\n\n\nInstallation\n\nClone this repository and unzip it.\nAfter downloading, cd into the flask directory.\nBegin a new virtual environment with Python 3 and activate it.\nInstall the required packages using pip install -r requirements.txt\n\nRUN\n\nExecute the command: python app.py\n\n'], 'url_profile': 'https://github.com/mohithxoxo', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Python', 'Updated Sep 1, 2020', 'Updated Sep 17, 2020', 'R', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 9, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Oct 8, 2020', 'Python', 'Updated Sep 1, 2020', '1', 'Python', 'Updated Dec 6, 2020', '2', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/yanaapollo', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'Pakistan', 'stats_list': [['0', '          followers'], ['1', '          following'], ['4']], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/dexDanish', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'Tumkur', 'stats_list': [['1', '          follower'], ['4', '          following'], ['0']], 'contributions': '32 contributions\n        in the last year', 'description': ['Task1-Machine-Learning\nDiabetes Prediction with Logistic Regression\n'], 'url_profile': 'https://github.com/Swapna2000', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-4065-Diabetes-Prediction-using-Machine-Learning\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '22 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rsb33', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'Boston Massachussetts US', 'stats_list': [['11', '          followers'], ['35', '          following'], ['0']], 'contributions': '125 contributions\n        in the last year', 'description': ['Diabetes-prediction\nDiabetes-prediction\nThis project was completed as a capstone projet to get DS master certificate\nContext:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nProblem Statement:\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not?\nDataset Description:\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0\n\nApproach:\nFollowing pointers will be helpful to structure your findings.   \n\n1.\tPerform descriptive analysis. It is very important to understand the variables and corresponding values. We need to think through - Can minimum value of below listed columns be zero (0)? On these columns, a value of zero does not make sense and thus indicates missing value.\n\t\t•\tGlucose\n\t\t•\tBloodPressure\n\t\t•\tSkinThickness\n\t\t•\tInsulin\n\t\t•\tBMI\n\n\t\t\tHow will you treat these values?\n\n2.\tVisually explore these variable, you may need to look for the distribution of these variables using histograms. Treat the missing values accordingly.\n\n3.\t We observe integer as well as float data-type of variables in this dataset. Create a count (frequency) plot describing the data types and the count of variables. \n\n4.\tCheck the balance of the data by plotting the count of outcomes by their value. Describe your findings and plan future course of actions.\n\n5.\tCreate scatter charts between the pair of variables to understand the relationships. Describe your findings.\n\n6.\tPerform correlation analysis. Visually explore it using a heat map.\n\n\t(Note: Do not focus on visualization aspects when working with SAS)\n\n7.\tDevise strategies for model building. It is important to decide the right validation framework. Express your thought process. Would Cross validation be useful in this scenario?\n\n\t(Note: if you are working with SAS, ignore this question and perform stratified sampling to partition the data. Create strata of age for this.)\n\n8.\tApply an appropriate classification algorithm to build a model. Compare various models with the results from KNN.\n\n\t(Note: if you are working with SAS, ignore this question. Apply logistic regression technique to build the model.)\n\n9.\tCreate a classification report by analysing sensitivity, specificity, AUC(ROC curve) etc. Please try to be as descriptive as possible to explain what values of these parameter you settled for? any why?\n\n10.\tCreate a dashboard in tableau by choosing appropriate chart types and metrics useful for the business. The dashboard must entail the following: \n\n\ta)\tPie chart to describe the diabetic/non-diabetic population\n\tb)\tScatter charts between relevant variables to analyse the relationships\n\tc)\tHistogram/frequency charts to analyse the distribution of the data\n\td)\tHeatmap of correlation analysis among the relevant variables\n\te)\tCreate bins of Age values – 20-25, 25-30, 30-35 etc. and analyse different variables for these age brackets using a bubble chart. \n\n'], 'url_profile': 'https://github.com/Kari-sad', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['3', '          following'], ['7']], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saicharan1312', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '31 contributions\n        in the last year', 'description': ['Diabetes-KNN\nIn this kernel we will build a machine learning model using k-Nearest Neighbors algorithm to predict whether the patients in the ""Pima Indians Diabetes Dataset"" have diabetes or not. I will compare the accuracy of the k-Nearest Neighbors algorithm to a Decision Tree and Logistic Regression. The main point of this kernel is to apply the k-NN algorithm and use Cross-Validation to find the optimal number of neighbors.\n'], 'url_profile': 'https://github.com/Brendan557', 'info_list': ['Updated Sep 1, 2020', 'Updated Sep 2, 2020', 'Updated Aug 31, 2020', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Updated Sep 6, 2020', 'CSS', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jan 30, 2021']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['diabetes-prediction-\n'], 'url_profile': 'https://github.com/sravanig16', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '73 contributions\n        in the last year', 'description': ['Diabetes_predict\n'], 'url_profile': 'https://github.com/kitofficial', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '32 contributions\n        in the last year', 'description': ['Diabetes Prediction - Deployment\n  \n• Please do ⭐ the repository, if it helped you in anyway.\n'], 'url_profile': 'https://github.com/Gauravkapooor123', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'New Delhi', 'stats_list': [['2', '          followers'], ['3', '          following'], ['3']], 'contributions': '147 contributions\n        in the last year', 'description': [""Predicting Gender\nIntroduction:-\nIn this notebook, I'm going to do an end to end project of Machine Learning Project in which we will take height(in feet) and weight(in kgs) as an input and will predict the gender of that particular person. I'm going to go over a basic Machine Learning pipeline from start to finish to show what a typical data science workflow looks like.\nThe dataset for this project was collected from Kaggle.com.The dataset contains three columns one weight one of height and labeled as male and female as the third column. The shape of the dataset is (10000,3).\nIn this project i have used 4 Machine learning algorithm.\n-KNN\n-Random forest\n-Decision Tree\n-Logistic Regression\nFor the purposes of this project, the following preprocessing steps have been made to the dataset:\n-The 7 rows of data with a value of [ 994, 1317, 2014, 2014, 3285, 3757, 6624, 9285, 9285] which is totally different from the dataset. These data point can be considered as outliers and has been removed.\n-The given data of height and weight were in a unit of centimeter and pound which is not popular in India so these data points are converted to units that are popular in India which is kilogram and feet.\nTo test my model I have deployed my model using Flask framework into Heroku environment.\nlink to test my model is-\nhttps://genderprediction-api.herokuapp.com\nGo check out my model.\n\n\nI would also like to add a little description of my other files:-\nTemplates:-This folder contains the index.html file which is basically the homepage of my app.\nProcfile:-This file defines that which first I want to execute first in my case its app.py\napp.py:-This files create a web app using the Flask framework.\nmodel.pkl:-model needs to be dumped in the form of an extension and is dumped as model.pkl file\nrequirements.txt:-This file defines the library that has to get install in my environment when I am deploying into Heroku\nIt's just an approach.\nI am still learning!\n""], 'url_profile': 'https://github.com/Anas-coder', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['5', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['Goal of the project:\nThis project has been produced to carry out the following assignment:\nThe exam of statistical learning consists in two assignments, one on the first part(regression, tree, neural nets) and the second part (unsupervised learning).\nFor both you must prepare a writing report using one or more techniques and comparing their performance on one or more data set chosen by the student.\nI decided to apply the statistical learning techniques on the Pima Indiands Diabetes dataset.\nIn this repository you can find:\n\nThe report of the analysis in PDF.\nIt is divided in two main sections, one about unsupervised methods (PCA, Clusternig) and the second one about supervised techniques (Logistic Regression, Tree Classifier, Ensemble Methods).\nThe R code for the Unsupervised section.\nThe R code for the Supervised section.\nThe dataset.\n\n'], 'url_profile': 'https://github.com/emanuelemorales', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'Mumbai,India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['13']], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes_detection\nThis Web App will detect if someone has a diabetes or not using diabetes data set. The whole machine learning process is done using Sklearn, pandas, numpy, Image libraries and for displaying result on web I used Streamlit library. This webapp will check and display the result using some parameters on randomforest classification.\n'], 'url_profile': 'https://github.com/AkshRidlan', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'Pune', 'stats_list': [['0', '          followers'], ['0', '          following'], ['10']], 'contributions': '25 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nThis project predicts diabetes in a person based on the data provided.\n'], 'url_profile': 'https://github.com/iNERO9', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'Hyderabad', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '116 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n\n\nThis Repository contains Files related to Model Building and Deployment using Flask and Heroku.\n\n\nIn this project I have predicted whether the person has Diabetes or Not given the data.\n\n\nUsed Ramdom Forest Classifier for model building\n\n\nI got the accuracy score of 86%.\n\n\nWeb deployment link\n\n\n'], 'url_profile': 'https://github.com/dishaaagarwal', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'Dhaka', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/MdEhteshamul', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['20', '          following'], ['1']], 'contributions': '118 contributions\n        in the last year', 'description': ['Diabetes-Classification\n'], 'url_profile': 'https://github.com/VaibhavPatel029', 'info_list': ['Jupyter Notebook', 'Updated Sep 1, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'R', 'Updated Oct 7, 2020', '1', 'Python', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '208 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/aniket312001', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['6', '          following'], ['9']], 'contributions': '146 contributions\n        in the last year', 'description': ['⚕️ Diabetes Classifier ⚕️\nPredicting whether a patient is prone to diabetes or not using Machine Learning.\nData:\n\n\nDataset used is Pima Indians Diabetes Dataset, obtained from Kaggle.\n\n\nThe datasets consists of several medical predictor variables and one target variable, Outcome.\n\n\nPredictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\n\n\nFor further information, please refer the Pima Indian Diabetes Dataset.\nModels:\nThe models included are:\n\nTuned and Baseline Logistic Regression.\nTuned and Baseline Random Forest Classifier.\n\nHow to use:\nTo use the model, download and run main.py. The model used by default is Tuned Logistic Regression.\n'], 'url_profile': 'https://github.com/Anuj-Attri', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'Banglore', 'stats_list': [['2', '          followers'], ['2', '          following'], ['40']], 'contributions': '341 contributions\n        in the last year', 'description': ['Overview\nIn this project, the objective is to predict whether the person has Diabetes or not based on various features like Number of Pregnancies, Insulin Level, Age, BMI.The data set that has used in this project.The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of\nObjective\nThe following points were the objective of the project .- Data gathering\n\nDescriptive Analysis\nData Visualizations\nData Preprocessing\nData Modelling\nModel Evaluation\nModel Deployment\nTraining a machine learning model using scikit-learn.\nBuilding and hosting a Flask web app on Heroku.\nA user has to put details like Number of Pregnancies, Insulin Level, Age, BMI etc .\nOnce it get all the fields information , the prediction is displyed on a new page .\n\n'], 'url_profile': 'https://github.com/heroorkrishna', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '31 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anuraglucifer6', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'Niterói, RJ', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '58 contributions\n        in the last year', 'description': ['Diabetes Prediction\nWorking through the database avaible at https://www.kaggle.com/uciml/pima-indians-diabetes-database while following along the chapter 2 of the book ""Hands-on Machine Learning with Scikit-Learn, Keras, and TensorFlow"".\n'], 'url_profile': 'https://github.com/jogamaral', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'New delhi', 'stats_list': [['9', '          followers'], ['6', '          following'], ['4']], 'contributions': '85 contributions\n        in the last year', 'description': ['Linear-Regression---Diabetes-Dataset\nDiabetes dataset is one of the datasets available in sklearn. The diabetes dataset consists of 10 physiological variables (age, sex, weight, blood pressure) measure on 442 patients, and an indication of disease progression after one year. You are given a Training dataset csv file with X train and Y train data. As studied in lecture, your task is to come up with Linear Regression training algorithm and thus predictions for the test dataset given.\n'], 'url_profile': 'https://github.com/atharvjairath', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '43 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ajaydeore123236', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'Brighton, UK', 'stats_list': [['2', '          followers'], ['13', '          following'], ['26']], 'contributions': '150 contributions\n        in the last year', 'description': ['Patient Selection for Diabetes Drug Testing\nIntroduction\nEHR data is becoming a key source of real-world evidence (RWE) for the pharmaceutical industry and regulators to make decisions on clinical trials. In this project, we will create a deep learning model trained on EHR data (Electronic Health Records) to find suitable patients for testing a new diabetes drug. It is a very unique and sensitive drug that requires administering the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application.\nUtilizing a synthetic dataset (denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, we will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial. This project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. We will also analyze and interpret the model for biases across key demographic groups.\nThe Dataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for this study, we are using a dataset from UC Irvine.\nKey files\n\nNotebook for data analysis and model development\n\nResults\nThe final model achieved an F1 score of 0.54 and a ROC-AUC of 0.5.\nIn the fairness analysis of the model predictions, there appears to be signficant disparity with the Asian race being under-represented with a magnitude of 0.19.\nFairness Analysis - Relative to a Reference Group\n\n'], 'url_profile': 'https://github.com/pranath', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['0', '          following'], ['0']], 'contributions': '314 contributions\n        in the last year', 'description': ['pima-indians-diabetes\n'], 'url_profile': 'https://github.com/phuongvnguyen', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}","{'location': 'Vancouver, Canada', 'stats_list': [], 'contributions': '41 contributions\n        in the last year', 'description': ['\nLast updated: September 2020\n\nType 2 Diabetes Analysis\nOverview\nThis project offers an in-depth analysis of eight medical variables and their relationship with the outcome of the type 2 diabetes diagnosis.  The eight observed variables are number of pregnancies, glucose levels, blood pressure, skin thickness, insulin, BMI, diabetes pedigree function, and age.  These variables are analyzed using data science methods to assess their significance in predicting a positive type 2 diabetes diagnosis.  In this project, I also train several predictive models, including logistic regression, decision trees, and support vector machines to predict the diagnosis based on a given set of variables.  Afterwards, the models are adjusted to maximize recall, thus lowering the rate of false negatives.\nTools used: Sci-Kit Learn, matplotlib, seaborne, statsmodels\nHow to view\nTo view the project click here or open the Jupyter notebook type2_diabetes_analysis.ipynb in this repository.\n'], 'url_profile': 'https://github.com/arvidyuen7', 'info_list': ['Jupyter Notebook', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Nov 7, 2020', '1', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'HTML', 'Updated Sep 4, 2020', 'Python', 'Updated Sep 3, 2020', 'Python', 'Updated Sep 8, 2020', 'Jupyter Notebook', 'Updated Sep 8, 2020']}"
"{'location': 'NONE', 'stats_list': [['5', '          followers'], ['3', '          following'], ['7']], 'contributions': '65 contributions\n        in the last year', 'description': ['QSVM-Implementation\nThis is an Implementation of QSVM on diabetes dataset available publicly. The accuracy on a quantum computer simulator with ~800 data points is 63.64%.\nThe accuracy on an actual Quantum computer with 50 data points was 52% as expected due to less data points. (Complete set could not be used due to qbit limitation)\nPlease Refer to the final report for more details\n'], 'url_profile': 'https://github.com/abhinavbandaru', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'Chicago', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '168 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/memanuel0109', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'Kansas City, MO', 'stats_list': [], 'contributions': '32 contributions\n        in the last year', 'description': [""Early Diabetes Detection Web Application - Project Overview\nGOAL: Build an web application to interact with a predictive model to provide live predictions based on input\n\nBuilt a random forest model to help detect diabetes early based on 16 unique features\nCreated a web application to interact with model and provide live predictions using StreamLit\nPushed the web application to the cloud (hosted by Salesforce's Heroku)\nClick here to go to the web application\n\nResources\nMajor packages used: Pandas, Numpy, Scikit-Learn, Streamlit, Matplotlib, Seaborn, Pickle\nSource of Data: Islam, MM Faniqul, et al. 'Likelihood prediction of diabetes at early stage using data mining techniques.' Computer Vision and Machine Intelligence in Medical Image Analysis. Springer, Singapore, 2020. 113-125. (https://archive.ics.uci.edu/ml/datasets/Early+stage+diabetes+risk+prediction+dataset.)\nStreamLit Production and Heroku Configuration: https://github.com/dataprofessor/penguins-heroku/blob/master/penguins-app.py\nTools: Jupyter Notebook, Anaconda Prompt, Heroku\nFuture Improvements\n\nBetter Dataset - the sample was not great. The data was sourced from Bangladesh which has a population that does not represent the USA. Specifically, we can see that in the dataset when looking at obesity and genital thrush rates.\nMore Interactive Features - the web application is pretty plain. It allows you to answer some questions and it returns a prediction. Additional features to be added:\n\nA window to show actual probablity of event.\nA submit button -- currently it updates every time a change is made\nResources for diabetes help to come up when the prediction is yes\n\n\nNot a binary target- options for at high risk or low risk would be a great way to show more subtly to the app. This can be based on probability or a new dataset to train for that.\n\n""], 'url_profile': 'https://github.com/jzcharia', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['7']], 'contributions': '7 contributions\n        in the last year', 'description': ['PIMA-Indians-Diabetes-Dataset\nThe analysis intends to create a model on the dataset to predict if a particular observation is at a risk of developing diabetes, given the independent factors.\n'], 'url_profile': 'https://github.com/royrohann', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['2']], 'contributions': '49 contributions\n        in the last year', 'description': [""Diabetes-Prediction-Model-\nA Diabetes Prediction model using Python's sklearn library using Logistic Regression algorithm.\n""], 'url_profile': 'https://github.com/ashutosh1pathak', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Pima-Dataset\nDiabetes Prediction using Pima Dataset though ML\n'], 'url_profile': 'https://github.com/Vijayp1983', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['5', '          following'], ['0']], 'contributions': '39 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anshu-ravi', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sandhyathot', 'info_list': ['1', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Python', 'CC0-1.0 license', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Unlicense license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 5, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020']}"
"{'location': 'Lucknow', 'stats_list': [['2', '          followers'], ['0', '          following'], ['2']], 'contributions': '53 contributions\n        in the last year', 'description': [""PytorchDiabetesPrediction\nBuilding Neural Network in Pytorch and predicting diabetes\n\nIn this notebook you'll learn how to use Pytorch for building neural network and perform deep learning with Pytorch\nWhat is Pytorch\n\nPyTorch is a library for Python programs that facilitates building deep learning projects\nPyTorch supports dynamic computational graphs, which means the network behavior can be changed programmatically at runtime. This facilitates more efficient model optimization and gives PyTorch a major advantage over other machine learning frameworks, which treat neural networks as static objects.\nIf you want to explore Deep learning then Pytorch is your friend\nKindly head to https://pytorch.org/docs/master/nn.html to unvail the beauty of Pytorch library\nDataset\nThe dataset can be dowlaoded from https://www.kaggle.com/uciml/pima-indians-diabetes-database\nI've analysed the dataset through visualization\nThanks for reading\n""], 'url_profile': 'https://github.com/alankritamishra', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '71 contributions\n        in the last year', 'description': ['Diabetes-Dataset-MachineLearning\nUsing a diabetes dataset from Kaggle tried to implement the machine learning algorithms.\n1.Multiple Linear Regression\n2.KNN Classification\n3.Clustering using kmeans\n'], 'url_profile': 'https://github.com/Shivaani232', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '150 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Model-Deployment-Using-AWS Sagemaker\nModel Building\nProblem Statement\nHere we going to make a model which will predict whether a person has diabetes or not based on 8 features. We will implement xgboost algorithm. Then we will see how deployment as a REST API on AWS sagemaker is done.\nDataset\nThe data is taken form https://www.kaggle.com/uciml/pima-indians-diabetes-database. It has 768 rows and 9 coulmns\nFeatures are as follows\nIndependent Variables\n\n\nPregnancies\n\n\nGlucose\n\n\nBloodPressure\n\n\nSkinThickness\n\n\nInsulin\n\n\nBMI\n\n\nDiabetesPedigreeFunction\n\n\nAge\n\n\nDependent Varaible\nOutcome: It has values o and 1. O refers to No diabetes and 1 refers to diabetes\nIndependent Varibales are not much corrleated to each as seen from the correlation matrix\n\nNow seeing the pair plot of the variables, there is no trend observable or regions of diabletes to non diabetes region is higly overlapping. Therefore our alorithm has to perform very well.\n\nMissing Values: In this dataset, there are some values are 0 in some columns which dosen\'t makes any sense, as they are basically the NULL values. So they are replaced by the mean values of that column respectively .\nTraining and Accuracy\nXGBoost Algorithm\nModel Deployment in AWS Sagemaker\nSteps :\n\n\nFirst make an account on AWS.\n\n\nThen to your AWS sagemaker and on the left, under the ""Notebook"" click on Notebook instances.\n\n\nCreate a new notebook instance using ""ml.t2.medium"" EC2 instance in the conda-python3 environment.\n\n\n\n\n\nOpen the new notebook and do the coding part.\n\n\nNotebook Coding :\n\n\nHere we import required libraries, then define the bucket name, defining the paths where our training and testing data will be. I have already uploaded the diabetes data in our S3 bucket. Then we import the data from our S3, then split it into training and validation data. We then saves these train and test data and writing back to s3 model in training and testing paths respectively. Then we import a docker image/ container for our xgboost algorithm from aws itself. We define an estimator which contains our container, total number of ianstances used for training (=1), type of the isntance (=ml.m4.xlarge), our output(model)path and our job name. Set the hyperparameters (max_depth=7, num_round = 1000, objective: binary logistic).Once the training is done, in AWS Sagemaker console go to training jobs section and you will see the list of all training jobs that has been done till now. You can also the see the hyperparameter tuning jobs , here i have seperately run in my local machine and got the hyparameters values and directly fed to to our model to save the AWS cost. Deploying the model as an endpoint ( with number of instance =1, type = ml.m4.xlarge. Now if you want to handle many requests , then you can increase the number of instances and also upgrade the type of EC2 instance. Training accuracy comes out to be 80 %\n\n\nEndpoint creation\n\nEndpoint is basically where our clients will hitting up the URL to get the result whether the person has diabetes or not by inputting the numerical values of the independent variables.\nTo create the endpoint, go to endpoints tab and click on create endpoint. Create with new configurationa, add name, click on ""add model"" below which we created above and create.\n\n7. Integration With AWS sagemaker using serverless.yml and handler.py files\nAfter the endpoint creation, install serverless framework from the internet. Download node.js from the link https://nodejs.org/en/download/. It will install all the requirements. After installing, do the following steps in order to connect serverless with the aws\na) Adding configurations. Create a new user under IAM (Identity and Access Management) section. Give administrative access initailly, after creating the user, you will get two keys; Access Key Id and Secret Access Key. Then type the following command in Windows powershell (make  a new folder and then going into that directory)\nserverless config --provider aws --key Access Key Id --secret Secret Access Key\nb) Then type the below command to get the template files (handler.py and serverless.yml) which we will edit\nserverless create --template aws-python --name diabetes_Pred\nc) Description and coding of two files\nserverless.yml file\nhere you define what kind of service (diabetesPrediction), provider (define python version (python 3.8), region (us-east-1), name of the endpoint (diabetes-pred), endpoint resource (link cicled in the belwo pic), action means what you want your resource to do (we want to invoke the endpoint)) and function (what function will it be execute that is defined in handler.py file)\n\nHandler.py file  (also known as lambda function)\nThis function will get invoked when the client through AWS API GATEWAY will request\nThe function will take the input paramters (numerical values), convert it into the list of of str type and then will be given to the endpoint and return type will be json format.\nFor additional information, go to https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-inference.html\nNow the two files have been edited, save it and run the following command in the powershell promt.\nserverless deploy --force\n\nHere we will get the url (highlighted one in the above pic ) which will be provided to the client. It s a post url means client will give the input and get the required result . For web interface, HTML and CSS can be used to get the proper UI format .\nd) Checking if the REST API is working or not\nGive the values in the format ""pregnancies=1&glucose=12&BP=180&SkinThickness=1&Insulin=23&BMI=34&DiabetesPedigreeFunction=1&Age=76"" by going to API gateway and under the POST section, click on test and underquery strings section paste it and it will generate ""0"" (no diabetes) under the response body.\n\nHow the lambda function and API GATEWAY works ?\n\nStarting from the client side, a client script calls an Amazon API Gateway API action and passes parameter values. API Gateway is a layer that provides API to the client. In addition, it seals the backend so that AWS Lambda stays and executes in a protected private network. API Gateway passes the parameter values to the Lambda function. The Lambda function parses the value and sends it to the SageMaker model endpoint. The model performs the prediction and returns the predicted value to AWS Lambda. The Lambda function parses the returned value and sends it back to API Gateway. API Gateway responds to the client with that value\nFor more info , visit this link https://aws.amazon.com/blogs/machine-learning/call-an-amazon-sagemaker-model-endpoint-using-amazon-api-gateway-and-aws-lambda/\n'], 'url_profile': 'https://github.com/kushagra2103', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/TheerejS', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'Kolkata', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['Machine-Learning-projects\nMany standard datasets for data mining and data visualizations.\n'], 'url_profile': 'https://github.com/suvajit1998', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Harshu16', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'College of Engineering And Technology,Bhubaneswar', 'stats_list': [['10', '          followers'], ['7', '          following'], ['33']], 'contributions': '465 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Ashishkumarpanda', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'Los Angeles', 'stats_list': [['15', '          followers'], ['7', '          following'], ['10']], 'contributions': '64 contributions\n        in the last year', 'description': [""Diabetes-Patient-Readmission-Classification\ndevelop a pattern recognition system that operates on a given real- world dataset.\nIntroduction\nThe goal of this project is to develop a pattern recognition system that operates on a given real-\nworld dataset.\nDataset\nOur dataset is: Diabetes 130-US hospitals for years 1999-2008 Data Set.\nSource:\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-800\nThe dataset represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated\ndelivery networks. It includes over 50 features representing patient and hospital outcomes.\nThe target labels, indicating:\n\n“<30” if the patient was readmitted in less than 30 days\n“>30” if the patient was readmitted in more than 30 days\n“No” for no record of readmission.\n\nThis problem is a 3-class classification problem.\n\n\nProject Goal\nThe main goal of this project is to design a machine learning classification system, that is able to predict the readmission of a diabetes patient, based on the patient's medical history information.\nConclusion\nWe have acheived the best prediction performance using Gradient Boost classifier.\n\nF1 Score (micro): 0.6215\nF1 Score (macro): 0.3612\n\nThe main reasons for not acheiving a high classification performance is the fact that our labels are not palnced thoughout\nthe dataset, where 1 label (No readmission) accounts for over 60% of the data points, while another\nlabel (Readmitted in < 30 days) accounts for only ~8%. Another reason for low performance is\nthat our target has very low correlation with all of our predectors.\n\nFuture Work\nIn the future, we can try the following to improve the performance of our classifier:\n\ncombine (readmitted in < 30 days) and (readmitted in > 30 days) into one feature, and turn\nthe problem in to binary classification problem (readmitted vs not readmmited) which is going to\nresult in a better palanced label classes.\nWe can try selecting a subset of feature, with higher\nclassification importance according to our classifier, and just using those in training.\n\nReferences\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\nhttps://www.hindawi.com/journals/bmri/2014/781670/\nhttps://www.analyticsvidhya.com/blog/2016/02/complete-guide-parameter-tuning-gradient-boosting-gbm-python\n\n""], 'url_profile': 'https://github.com/zeglam', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'Cracow, Poland', 'stats_list': [['2', '          followers'], ['1', '          following'], ['2']], 'contributions': '37 contributions\n        in the last year', 'description': ['Analysis-of-diabetes-dataset\nThe project was made in order to learn how to use such methods in Python:\n\ndetecting and filling in missing observations,\ndata visualization,\nclassification,\nclustering,\nmultidimensional scaling.\n\nThe analysis was based on the dataset from the kaggle platform: https://www.kaggle.com/uciml/pima-indians-diabetes-database.\nMain libraries\n\npandas\nnumpy\nsklearn\nseaborn\nmatplotlib\nrandom\nscipy\n\nTechnology\n\nPython version 3.7\n\n'], 'url_profile': 'https://github.com/EsteraSaidlo', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}","{'location': 'Medellin - Colombia', 'stats_list': [['2', '          followers'], ['2', '          following'], ['7']], 'contributions': '32 contributions\n        in the last year', 'description': ['Pytorch_Diabetes_Detection\nThis is a beginner project on Pytorch.\nAplying a Neural Net for the kaggle dataset: ""Pima indians Diabetes"" using pytorch.\n'], 'url_profile': 'https://github.com/MiguelQuiceno', 'info_list': ['Jupyter Notebook', 'Apache-2.0 license', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Aug 31, 2020', 'Python', 'Updated Sep 1, 2020', 'Python', 'Updated Sep 6, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 6, 2020', 'Python', 'Updated Sep 12, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Aman-s-hub', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/BK-Supreetha', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['glicotrack\nAplicação para rastrear pessoas com diabetes\nModificações para teste de branch.\n'], 'url_profile': 'https://github.com/gmoravia', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'Boston', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/huynhvo265', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'San Jose, California', 'stats_list': [['2', '          followers'], ['3', '          following'], ['37']], 'contributions': '176 contributions\n        in the last year', 'description': ['Early Stage Diabetes Prediction using Machine Learning Algorithms\nDiabetes is one of the fastest growing chronic life threatening diseases that have already affected 422 million people worldwide according to the report of World Health Organization (WHO), in 2018.\nThe dataset contains 16 features and 520 records which were collected using direct questionnaires from the patients of Sylhet Diabetes Hospital in Sylhet, Bangladesh by M. M. Faniqul Islam, Rahatara Ferdousi, Sadikur Rahman, and Humayra Yasmin Bushra.\nSome of the binary (Yes or No) features include:\n\nPolyuria : Polyuria is urine output of > 3 L/day; it must be distinguished from urinary frequency, which is the need to urinate many times during the day or night but in normal               or less-than-normal volumes.\nPolydipsia : Polydipsia is a medical name for the feeling of extreme thirstiness. Polydipsia is often linked to urinary conditions that cause you to urinate a lot.\nPolyphagia : Polyphagia is the medical term used to describe excessive hunger or increased appetite and is one of the 3 main signs of diabetes.\nGenital Thrush : Thrush (or candidiasis) is a common condition caused by a type of yeast called Candida.\nVisual Blurring : Lack of sharpness of vision with, as a result, the inability to see fine detail.\nIrritability : Irritability is the excitatory ability that living organisms have to respond to changes in their environment. The term is used for both the physiological.                         reaction to stimuli and for the pathological, abnormal or excessive sensitivity to stimuli.\nPartial Paresis : Paresis is the medical term for weakened muscle movement. It may also sometimes see it referred to as “mild paralysis” or “partial paralysis.\nAlopecia : Alopecia is the term used for loss of hair, either diffuse or patchy, due to a structural or functional defect in the follicle or to a change in the hair itself.\n\nTarget Feature:\nLikelihood of Diabetes (Positive or Negative)\nThese clinically meaningfull features are analyzed with Naive Bayes Algorithm, Logistic Regression Algorithm, and Random Forest Algorithm  after applying Cross- Validation and shuffle split to find the best hyper-parameters and optimum accuracy.\nReferences\nIslam M.M.F., Ferdousi R., Rahman S., Bushra H.Y. (2020) Likelihood Prediction of Diabetes at Early Stage Using Data Mining Techniques. In: Gupta M., Konar D., Bhattacharyya S., Biswas S. (eds) Computer Vision and Machine Intelligence in Medical Image Analysis. Advances in Intelligent Systems and Computing, vol 992. Springer, Singapore. https://doi.org/10.1007/978-981-13-8798-2_12\n'], 'url_profile': 'https://github.com/markmacwan', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'Computer Science', 'stats_list': [['7', '          followers'], ['3', '          following'], ['11']], 'contributions': '335 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/evansMeja', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'Maharastra ,Mumbai', 'stats_list': [['1', '          follower'], ['7', '          following'], ['21']], 'contributions': '109 contributions\n        in the last year', 'description': ['Diabetes-Prediction-with-pyspark-MLib\ntaken dataset of patients to predict diabetes uisng pyspark MLib\n'], 'url_profile': 'https://github.com/karan19100', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'Andra Pradesh', 'stats_list': [['0', '          followers'], ['3', '          following'], ['2']], 'contributions': '23 contributions\n        in the last year', 'description': ['Logistic-Regression\nIn this repository I implemented logistic regression on  pima-indians-diabetes to predict whether the patient has diabetes are not\n'], 'url_profile': 'https://github.com/sairam852', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rohitchauhan16', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}","{'location': 'Malaysia', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '14 contributions\n        in the last year', 'description': ['Pima-Indian-Diabetes-Classifications-or-Predictions\nthis repository include exploratory data analysis and classification\nEDA- exploratory data analysis\nclassifications using multiple supervised machine learning classifiers\n'], 'url_profile': 'https://github.com/aishahismail3', 'info_list': ['Updated Aug 31, 2020', 'Updated Sep 5, 2020', 'HTML', 'Updated Aug 31, 2020', 'Jupyter Notebook', 'Updated Sep 1, 2020', '1', 'Jupyter Notebook', 'Updated Nov 12, 2020', '1', 'Python', 'Updated Sep 5, 2020', '1', 'Jupyter Notebook', 'MIT license', 'Updated Oct 18, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'HTML', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'GPL-2.0 license', 'Updated Sep 1, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '45 contributions\n        in the last year', 'description': ['Pima-Indian-heritage--Diabetes-predictive-analysis\nProblem statement:\nDiabetes is one of the deadliest diseases in the world. It is not only a disease but also creator of different kinds of diseases like heart attack, blindness etc.Since the disease burden of diabetes is increasing by the day, diagnosis of diabetes at an early stage of the disease is essential for effective treatment and control of diabetes.\nObjective:\nTo identify accurately whether the subject under analysis has diabetes or not based on a set of variables and compare the accuracy obtained from implementing different models.  The Random Forest model gave the highest accuracy compared to Logistic Regression and Decision Tree full-grown and pruned.  We can predict with 78% accuracy whether the person has diabetes or not.\nAbout the DATA:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.In particular, all patients here are females at least 21 years old of Pima Indian heritage.The dataset consist of 768 samples, out of which 500 are non diabetic while 269 are diabetic people.The dataset has total 9 attributes out of which 8 are independent variables and one is the dependent variable i.e. target variable which determines whether  patient is having diabetes or not.\nConclusion:\nRandom Forest model has highest accuracy compared to Logistic Regression and Decision Tree. We can predict with 78% accuracy whether the person has diabetes or not.\n'], 'url_profile': 'https://github.com/prajwalballal', 'info_list': ['R', 'Updated Oct 5, 2020', 'GPL-2.0 license', 'Updated Sep 5, 2020', '1', 'Python', 'Updated Sep 5, 2020', 'C++', 'Updated Sep 4, 2020', 'Updated Sep 6, 2020']}","{'location': 'Minas Gerais, Brasil', 'stats_list': [], 'contributions': '48 contributions\n        in the last year', 'description': ['calculator-diabeties\nA calculator for diabetes usign java and DB.\n'], 'url_profile': 'https://github.com/divanabarbosa', 'info_list': ['R', 'Updated Oct 5, 2020', 'GPL-2.0 license', 'Updated Sep 5, 2020', '1', 'Python', 'Updated Sep 5, 2020', 'C++', 'Updated Sep 4, 2020', 'Updated Sep 6, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['1', '          following'], ['5']], 'contributions': '57 contributions\n        in the last year', 'description': ['Diabates_Detection\nPython Web App that use the RandomForestClassifier to predict if the Patient has Diabetes based on User Metric Input\n'], 'url_profile': 'https://github.com/santiagof99', 'info_list': ['R', 'Updated Oct 5, 2020', 'GPL-2.0 license', 'Updated Sep 5, 2020', '1', 'Python', 'Updated Sep 5, 2020', 'C++', 'Updated Sep 4, 2020', 'Updated Sep 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '29 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/koushik-krishna', 'info_list': ['R', 'Updated Oct 5, 2020', 'GPL-2.0 license', 'Updated Sep 5, 2020', '1', 'Python', 'Updated Sep 5, 2020', 'C++', 'Updated Sep 4, 2020', 'Updated Sep 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': [""What-Does-The-Supplement-Do-\nBlood Balance Advanced Formula is one approach to settle different blood-related concerns. In addition to the fact that this supplements improve your pulse and glucose levels, however it additionally assists with weight reduction. It upholds solid insulin markers alongside bringing down awful cholesterol as well. By utilizing such a characteristic item, you wouldn't have motivation to stress over your wellbeing. Overweight, hypertension, LDL cholesterol, and unmanaged sugar levels are only the fixings required for cardiovascular infection and diabetes. Visit the official site here. https://lebc.us/blood-balance-advanced-formula-review-blood-sugar-heart-health-supplement/  Blood Balance Advanced Formula Reviews - https://healthfirsto.com/blood-balance-advanced-formula-review-blood-sugar-heart-health-supplement/\n""], 'url_profile': 'https://github.com/melvinlord0', 'info_list': ['R', 'Updated Oct 5, 2020', 'GPL-2.0 license', 'Updated Sep 5, 2020', '1', 'Python', 'Updated Sep 5, 2020', 'C++', 'Updated Sep 4, 2020', 'Updated Sep 6, 2020']}",,,,,
