"{'location': 'Blumenau', 'stats_list': [['70', '          followers'], ['18', '          following'], ['39']], 'contributions': '278 contributions\n        in the last year', 'description': ['Estratificando riscos usando registros eletrônicos de pacientes diabéticos\nTipicamente, dez por cento dos pacientes geram cerca de 70% das despesas de saúde (dado dos EUA). Ao identificar quais as pessoas são de alto risco ou a probabilidade de se tornarem de alto risco, as equipes de saúde podem intervir para melhorar seus resultados e reduzir os respectivos custos de saúde.\nUm dos problemas mais comuns e que refletem as inadequações no sistema de saúde são as readmissões hospitalares. Nos Estados Unidos sozinho, o tratamento de pacientes diabéticos readmitidos excede 300 milhões de dólares por ano (https://www.diabetes.org/). A readmissão hospitalar é uma das principais preocupações no tratamento do diabetes, com milhões de dólares sendo gastos no tratamento de pacientes diabéticos que precisam ser readmitidos em um hospital após receberem alta.\nIdentificação precoce de pacientes que enfrentam um alto risco de readmissão pode permitir que os profissionais de saúde conduzam investigações adicionais e possivelmente impeçam futuras readmissões.\nSendo assim, proposta aqui é utilizar os registros eletrônicos de dados médicos dos pacientes, tais como: resultados dos exames, nível de insulina, diagnósticos de outras doenças, etc... a fim de prever se um paciente pode ou não ser readmitido. Aliás, iremos além: vamos identificar os pacientes diabéticos de alto risco por meio de estratificação de risco de registros médicos eletrônicos.\nJá estamos vivendo uma “nova medicina” que está sendo “guiada” pelo processamento de um grande volume de informações através de algoritmos poderosos de “machine learning”, uma das áreas da “inteligência artificial”!\nPara isso, vamos treinar e comparar o desempenho de alguns algoritmos de aprendizado de máquina e decidir qual deles usar para prever o risco de readmissão para o paciente.\nUsarei o melhor modelo treinado para estratificar a população em três grupos de risco:\n\nAlto Risco (probabilidade de readmissão > 0,7)\nRisco Médio (0,3 < Probabilidade de readmissão < 0,7)\nBaixo Risco (probabilidade de readmissão < 0,3)\n\nO conjunto de dados, ""Diabetes 130-US hospitals for years 1999-2008"", foi baixado do UCI Machine Learning Repository: Diabetes 130-US hospitals for years 1999-2008 Data Set\nOs dados representam 10 anos (1999-2008) de atendimento clínico em 130 hospitais dos EUA e redes de distribuição integradas com 100.000 observações e 50 recursos (variáveis) que representam os registros eletrônicos com resultados de exames dos pacientes e dados sobre cada hospital. Descrição completa do trabalho:\nImpact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records\nCréditos: Data Science Academy - https://www.datascienceacademy.com.br/\n'], 'url_profile': 'https://github.com/RodrigoLima82', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'Mumbai, India', 'stats_list': [['0', '          followers'], ['3', '          following'], ['35']], 'contributions': '56 contributions\n        in the last year', 'description': ['Diabetes\nProject to predict whether a person will have diabetes or not\n'], 'url_profile': 'https://github.com/Vishal3041', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'Gurgaon', 'stats_list': [['5', '          followers'], ['1', '          following'], ['0']], 'contributions': '18 contributions\n        in the last year', 'description': ['diabetes\nHere I will introduce you to identification and dealing with outliers.\nThen we will do cluster based modeling to predict if a person will be diabetic or not.\n'], 'url_profile': 'https://github.com/Puneettt', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '85 contributions\n        in the last year', 'description': ['Diabetes\nAutomated diagnosis of diabetes.\nReference:\nLoy, James. ""Neural Network Projects with Python"". Packt. Feb, 2019.\n'], 'url_profile': 'https://github.com/Ireneyou33', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'Kathmandu, Nepal', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SaraTuladhar', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'Alexandria, Egypt', 'stats_list': [['6', '          followers'], ['6', '          following'], ['5']], 'contributions': '75 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/andaleebkhog', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['Diabetes Onset Prediction\nThe data involved the details of people in a particular area and the incidence of diabetes.\nAfter data cleaning, I fit the data using Logistic Regression to obtain a model to predict the onset of diabetes.\n'], 'url_profile': 'https://github.com/divij8', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '30 contributions\n        in the last year', 'description': ['Project1\nDiabetes Check\n'], 'url_profile': 'https://github.com/titye', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'UK', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pollon285', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '85 contributions\n        in the last year', 'description': ['DiabetesDataSet\n'], 'url_profile': 'https://github.com/OBH67', 'info_list': ['4', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Python', 'Updated May 26, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Java', 'Updated May 31, 2020', 'C#', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Updated May 30, 2020']}"
"{'location': 'Noida', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['DiabetesPrediction-WebApp\nA web app to predict the possibility of diabetes.\n'], 'url_profile': 'https://github.com/tanishqamahendru', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '38 contributions\n        in the last year', 'description': ['DiabetesPrediction_XGBoost_HPtuned\nThis Python code snippet uses PIMA Diabetes dataset from Kaggle and builds a XGBoost hypertuned model using RandomizedSearchCV.\n'], 'url_profile': 'https://github.com/Darkdew', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'Delhi, India', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['Flask-DiabetesPrediction\nA web application based on Flask which predicts chances of diabetes.\n'], 'url_profile': 'https://github.com/lakshay05singhal', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '56 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/McAdam-Mathew', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'Mumbai', 'stats_list': [['23', '          followers'], ['25', '          following'], ['16']], 'contributions': '374 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Prediction using Flask.\nRandom Forest Classifier is used for training the model.\n\n'], 'url_profile': 'https://github.com/devika30', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '114 contributions\n        in the last year', 'description': ['Trackr\nCalculate your carb intake, blood glucose levels, and blood pressure with this diabetes trackr.\n'], 'url_profile': 'https://github.com/pakph', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['7']], 'contributions': '21 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/malharb', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': '130 Descanso Dr, San Jose, 95134', 'stats_list': [], 'contributions': '16 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/KiranGowda10', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}","{'location': 'Japan', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '31 contributions\n        in the last year', 'description': ['Diabetes_qa\n'], 'url_profile': 'https://github.com/Buzaabah', 'info_list': ['HTML', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'HTML', 'Updated Jun 27, 2020', 'CSS', 'Updated May 30, 2020', 'HTML', 'Updated Jun 1, 2020', 'Jupyter Notebook', 'Updated Jun 2, 2020', 'TSQL', 'Updated Jun 7, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Updated May 28, 2020', 'Python', 'Updated May 26, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '259 contributions\n        in the last year', 'description': ['Repositorio que contiene el codigo para el entrenamiento del modelo de prediccion de diabetes.\n'], 'url_profile': 'https://github.com/sergiobaquero', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'Pune', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '18 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Aakankshagj', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/jieni3', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '99 contributions\n        in the last year', 'description': ['Diabetes-Predictor\nThe aim of this project is to check predict whether a person has diabetes based on a given set of features. Four algorithms have been used: K Nearest Neighbors, Logistic Regression, Support Vector Machine and Decision Trees.\n'], 'url_profile': 'https://github.com/aaronadb', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'Dallas', 'stats_list': [['4', '          followers'], ['15', '          following'], ['8']], 'contributions': '90 contributions\n        in the last year', 'description': [""Diabetes Data Tracking Project\n\nHello and welcome to my Diabetes Data Tracking project!\nIn May I was diagnosed with Type 1 Diabetes which meant I had to start keeping close track of what I was eating and my blood glucose levels. I got a whole starting kit upon arriving to CVS after the doctor's office, including this 'True Metrix' blood sugar monitor.\nThe extent of analytics that this monitor can do is show me averages for the week and month.\n\nThe time is also 67 minutes off.\nThe monitor came with a pocket sized piece of graph paper that had a few rows for the times during the day I checked my levels. There are also other monitors out there on the market that hook up to an app on your phone but neither of these ways seemed like the way I wanted to approach this.\nI was (and still am) working on my SQL skills and had just built a project that allowed me to populate an SQL database using Python.\nProgress\nAs of this writing ( June 08, 2020 ) I have decided on, and written a Discord bot as a means for data entry ( here is a video of it working and entering the data: https://www.youtube.com/watch?v=8Z6Zoao9YLI )\nI also decided on Heroku for deploying the bot and after a failed deploy learned that Heroku uses Postgresql as their main database storage which means I'll have to reconfigure how my bot enters data. I have written in functionality to enter data about what food I'm eating as well so later on I might be able to look back and see what food affects my blood sugar the most.\nThe last functionality I wrote into the bot was to test if I could send pictures from one side of the app to the Discord chat interface. Which I was able to. This is the first picture I sent\n\nThis is my blood sugar data from the first test I did with my monitor the day I got home from the doctors office. There is still messy data in this graph but the overall trend is shown correctly. The shadow looking thing below the graph is actually the dates and times I took the measures all compressed together.\nThe project objectives\n\nChallenge myself to build a data pipeline from scratch\nbuild upon current ability in SQL\ncreate a simple tool that I can use to reference data about my health with a few simple commands\n\nTools I'm using\n\nPython\n\npandas\nmatplotlib\nsqlite3\ndiscord\n\n\nSQL\nDiscord\nJupyter Notebooks\nPostgresql\n\nThings I've learned\n\nHow to do SQL in Jupyter Notebooks and it comes with it's own graphing functions\nthat VS Code is awesome sauce\nthat you shouldn't wait to record hundreds of data points\n\n""], 'url_profile': 'https://github.com/mctopherganesh', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/forselfawareness', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'Pune', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Kajal-12', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['4', '          following'], ['0']], 'contributions': '38 contributions\n        in the last year', 'description': ['Predict Diabetes\nPurpose of this project is to decide if a patient has diabetes or not. Predictor variables are the number of pregnancies of the patient,  BMI, insulin level, age, glucose, blood pressure,\tskin thickness, diabetes pedigree function. Target variable is outcome.\n'], 'url_profile': 'https://github.com/denizerden', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['Diabetes_prediction\nObjective\n\nTo predict that person is suffering from diabetes or not from following features :-\n* No. of Pregnancies\n* Glucose\n* BloodPressure\n* SkinThickness\n* Insulin\n* BMI\n* DiabetesPedigreeFunction\n* Age\n\nData Source\n    * https://www.kaggle.com/uciml/pima-indians-diabetes-database\n\nProblem Type :- Classification\nLibraries Used\n    * sklearn\n    * xgboost\n    * numpy\n    * pandas\n    * seaborn\n    * matplotlib\n\nWhat Can Be Achieved :\n    * From This we can make a model to predict the risk of diabetes i.e. what is the probability that a person can have diabetes in future so that he/she can improve his routine to be safe. Will be shortly working on that.\n\nAuthor\nLovish Chhabra\n'], 'url_profile': 'https://github.com/Lovish11', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}","{'location': 'New Delhi', 'stats_list': [['2', '          followers'], ['12', '          following'], ['14']], 'contributions': '166 contributions\n        in the last year', 'description': ['diabetes_prediction\nTraining and testing data and prediction of diabetes using regression\n'], 'url_profile': 'https://github.com/smriti2311', 'info_list': ['Python', 'MIT license', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Updated May 25, 2020', '1', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated Jun 8, 2020', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 27, 2020']}"
"{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['8']], 'contributions': '39 contributions\n        in the last year', 'description': ['DiabetesClassification\nUtilized data from https://www.kaggle.com/uciml/pima-indians-diabetes-database to try and predict whether or not someone had diabetes using Python.\nWays to improve the model:\n\ninput feature bucketing (create new variables for blood pressure\nin a specific range, glucose levels in a specific range, etc\nimprove the data cleaning by replacing 0 values with mean value\nRead a bit about what metrics do doctors rely on the most to\ndiagnose a diabetic patient and create new features\n\nSee if accuracy can be improved achieving 85-90%\n'], 'url_profile': 'https://github.com/MelinaRogers', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['17', '          followers'], ['20', '          following'], ['4']], 'contributions': '596 contributions\n        in the last year', 'description': ['Diabetes_Classification\nThis is a Machine Learning problem which uses the K-Nearest Neighbours algorithm\nThe problem statement is that you have to predict whether a person is diabetic or non-diabetic on the basis of several probable numerical\nfactors like Glucose level, Pregnancies, Blood Pressure, Skin Thickness, Insulin, BMI, Diabetes Pedigree function and Age.\nK-Nearest Neighbour Algorithm is analogous to the Distance formula. The root squared difference of the testing and training data is made\nthe basis for sorting out the K nearest cases in training set to the tested set. Then a majority vote count is taken among these neighbours\nand this vote gives the class of the testing data (In this case Diabetic or Non-Diabetic).\nThis model is trained over randomly generated data but this project can be equally accurate in real-life scenarios. This project may prove\nto be a prototype of a major application in health sector.\n'], 'url_profile': 'https://github.com/ChakPC', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sohailali71', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['PRJ_001-Predict-Diabetes\nPredict whether a given new patient is likely to have diabetes using his medical records\nAdded version0.0\n'], 'url_profile': 'https://github.com/shulyalkar1', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Kurukshetra', 'stats_list': [['14', '          followers'], ['8', '          following'], ['41']], 'contributions': '252 contributions\n        in the last year', 'description': ['Diabetes Classification Using K-Nearest Neighbour Algorithm\nThe Training and testing data is provided in the repository\nWe will be using K nearest algorithm\nSeparate functions are made for the algorithm\nif wanted to use the algorithm, just take the dist and knn functions\nOnly CSV/ numpy format is supported so conversion is mandatory\ndata visualization can be seen at the end\nRequirements\n\nPandas(v1.0.4)\nNumpy(v1.18+)\nMatplotlib(v3.2+)[Only for visualization)\n\n'], 'url_profile': 'https://github.com/thelokeshgoel00', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Bangalore', 'stats_list': [['1', '          follower'], ['19', '          following'], ['1']], 'contributions': '82 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Database\nPima Indians Diabetes Database-Predict the onset of diabetes based on https://www.kaggle.com/uciml/pima-indians-diabetes-databasediagnostic measures\nPredict the onset of diabetes based on diagnostic measures\nhttps://www.kaggle.com/uciml/pima-indians-diabetes-database\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nAcknowledgements\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\nInspiration\nCan you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\n'], 'url_profile': 'https://github.com/mragpavank', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/dmedirat', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vp8141', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '102 contributions\n        in the last year', 'description': ['Diabetes-Prediction-System\nDiabetes Prediction Using Machine Learning Algorithms\n📌Problem Statement :-\nDiabetes mellitus is one of the chronic disease characterized by hyperglycemia. It may cause\nmany complications. According to the growing morbidity in recent years, in 2040, the world’s\ndiabetic patients will reach 642 million, which suggests that one among the ten adults in the\nfuture is suffering from diabetes. The tedious identifying process leads to visiting of a patient\nto a diagnostic center and consulting doctor. But the research in machine learning approaches\nsolves this critical problem. The motive of this project is to design a model which can predict\nthe likelihood of diabetes in patients with maximum accuracy. Therefore different machine\nlearning classification algorithms like Decision Tree, KNN and Naive Bayes etc. can be\nused in this process to detect diabetes at an early stage.Ensemble Learning techniques helps\nto improve the accuracy of prediction.\n📌Scope :-\n\nThis system can be used in Hospitals for Diabetes Prediction at an early stage.\nThis can be also used for generating machine learning dataset.\nIn Pathology labs for Diabetes Prediction.\nUseful for small clinics in rural areas.\n\n📌Objective :-\n\nTo predict whether the person suffers from Diabetes or not.\nTo simplify the process of Diabetes detection using Machine Learning.\nTo evaluate the performance of different algorithms used for prediction.\nTo create a standard model for diabetes prediction.\nTo enhance model accuracy using Ensemble Learning techniques.\n\n'], 'url_profile': 'https://github.com/Saurabh-Tambe', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '64 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Prediction\nPredict the onset of diabetes based on diagnostic measures\n'], 'url_profile': 'https://github.com/divyanshk7', 'info_list': ['Python', 'Updated May 25, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'R', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', '1', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '102 contributions\n        in the last year', 'description': ['Diabetes-Prediction-System\nDiabetes Prediction Using Machine Learning Algorithms\n📌Problem Statement :-\nDiabetes mellitus is one of the chronic disease characterized by hyperglycemia. It may cause\nmany complications. According to the growing morbidity in recent years, in 2040, the world’s\ndiabetic patients will reach 642 million, which suggests that one among the ten adults in the\nfuture is suffering from diabetes. The tedious identifying process leads to visiting of a patient\nto a diagnostic center and consulting doctor. But the research in machine learning approaches\nsolves this critical problem. The motive of this project is to design a model which can predict\nthe likelihood of diabetes in patients with maximum accuracy. Therefore different machine\nlearning classification algorithms like Decision Tree, KNN and Naive Bayes etc. can be\nused in this process to detect diabetes at an early stage.Ensemble Learning techniques helps\nto improve the accuracy of prediction.\n📌Scope :-\n\nThis system can be used in Hospitals for Diabetes Prediction at an early stage.\nThis can be also used for generating machine learning dataset.\nIn Pathology labs for Diabetes Prediction.\nUseful for small clinics in rural areas.\n\n📌Objective :-\n\nTo predict whether the person suffers from Diabetes or not.\nTo simplify the process of Diabetes detection using Machine Learning.\nTo evaluate the performance of different algorithms used for prediction.\nTo create a standard model for diabetes prediction.\nTo enhance model accuracy using Ensemble Learning techniques.\n\n'], 'url_profile': 'https://github.com/Saurabh-Tambe', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '64 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Prediction\nPredict the onset of diabetes based on diagnostic measures\n'], 'url_profile': 'https://github.com/divyanshk7', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '3 contributions\n        in the last year', 'description': ['Diabetes-Classification-using-KNN\n'], 'url_profile': 'https://github.com/sohketa', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['3', '          following'], ['0']], 'contributions': '47 contributions\n        in the last year', 'description': ['Pima-Diabetes---EDA\nThe project involved exploratory data analysis on Pima-Indian-Diabetes dataset using Python. Functions of Pandas,Numpy,Seaborn and Matplotlib libraries were used to understand the distribution of different attributes of data.Various plots were used to get different insights about data.\n'], 'url_profile': 'https://github.com/Aakash-barwad', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'Singapore', 'stats_list': [], 'contributions': '31 contributions\n        in the last year', 'description': ['GUSTO_Gestational-Diabetes-Mellitus\nPopulation-centric risk prediction modeling for Gestational Diabetes Mellitus: a machine learning approach\n'], 'url_profile': 'https://github.com/mukkeshkumar', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'Singapore', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '18 contributions\n        in the last year', 'description': ['InterpretableMLForDiabetesReadmission\nNOTE:\nIn GitHub the notebook might not get rendered properly, so please use the below link to look at the results:\nhttps://nbviewer.jupyter.org/github/ashish24142/InterpretableMLForDiabetesReadmission/blob/master/Interpretable%20ML%20for%20Risk%20of%20Readmission.ipynb\nBut you can clone the repo and look at the solution, as well.\nBasic Explanation\nIt is important to know if a patient will be readmitted in some hospital. The reason is that you can change the treatment, in order to avoid a readmission.\nIn this database, you have 3 different outputs:\n\nNo readmission;\nA readmission in less than 30 days\nA readmission in more than 30 days\n\nAbout the Data\n""The data set represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. Information was extracted from the database for encounters that satisfied the following criteria.\nIt is an inpatient encounter (a hospital admission).\nIt is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\nThe length of stay was at least 1 day and at most 14 days.\nLaboratory tests were performed during the encounter.\nMedications were administered during the encounter.\nThe data contains such attributes as patient number, race, gender, age, admission type, time in hospital, medical specialty of admitting physician, number of lab test performed, HbA1c test result, diagnosis, number of medication, diabetic medications, number of outpatient, inpatient, and emergency visits in the year before the hospitalization, etc.""\nSource\nThe data are submitted on behalf of the Center for Clinical and Translational Research, Virginia Commonwealth University, a recipient of NIH CTSA grant UL1 TR00058 and a recipient of the CERNER data. John Clore (jclore \'@\' vcu.edu), Krzysztof J. Cios (kcios \'@\' vcu.edu), Jon DeShazo (jpdeshazo \'@\' vcu.edu), and Beata Strack (strackb \'@\' vcu.edu). This data is a de-identified abstract of the Health Facts database (Cerner Corporation, Kansas City, MO). Original source of the data set\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\nMotivation\nMotivation behind this solution is following:\n\nTo create a model to predict readmission, so that the patient can get a better treatment.\nDiabetes is a world-wide problem, and we should try to understand the cause & factors of Diabetes.\nThis is a try to implement modelling as well as explanation of the models.\n\nNote: This might not be a perfect solution, as this has been created with limited time and effort, so please don\'t use it for medical purposes, but yes this can be used for educational purposes.\n'], 'url_profile': 'https://github.com/ashish24142', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '35 contributions\n        in the last year', 'description': ['Diabetes-Drug-Prediction\n'], 'url_profile': 'https://github.com/anujaysuyal23', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'Mumbai , India', 'stats_list': [['37', '          followers'], ['41', '          following'], ['14']], 'contributions': '172 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anushka-2001', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'Milwaukee, WI', 'stats_list': [['2', '          followers'], ['1', '          following'], ['7']], 'contributions': '35 contributions\n        in the last year', 'description': ['Cookbooks\nPersonal example data science recipies.\nData\nPima Diabetes Data\n'], 'url_profile': 'https://github.com/scottadams26', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}","{'location': 'The Great Pacific Northwest', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '227 contributions\n        in the last year', 'description': ['Dash Template\nInstructions\n'], 'url_profile': 'https://github.com/nusc2016', 'info_list': ['1', 'HTML', 'Updated Oct 15, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Sep 7, 2020', 'Jupyter Notebook', 'Updated May 27, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Python', 'Updated May 30, 2020', 'Python', 'Apache-2.0 license', 'Updated May 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 27, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/evsantor', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '90 contributions\n        in the last year', 'description': ['diabetes-prediction-using-machine-learning\nDiabetes prediction using machine learning pycaret library\n'], 'url_profile': 'https://github.com/nizznizzy', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '52 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Machine-Learning\n'], 'url_profile': 'https://github.com/ArshdeepKaurJaggi', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '50 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/haritejap', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '35 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sraj-git', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'JABALPUR', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '137 contributions\n        in the last year', 'description': ['Diabetes-Classification-Machine-Learning-in-Health-\nPredict whether a person is suffering from diabetes or not using K-Nearest Neighbors Algorithm.\nk-nearest neighbors algorithm\nThe k-nearest neighbors (KNN) algorithm is a simple, supervised machine learning algorithm that can be used to solve both classification and regression problems. It is mostly used to classifies a data point based on how its neighbours are classified.\nIn pattern recognition, the k-nearest neighbors algorithm (k-NN) is a non-parametric method used for classification and regression. In both cases, the input consists of the k closest training examples in the feature space. The output depends on whether k-NN is used for classification or regression:\na) In k-NN classification, the output is a class membership. An object is classified by a plurality vote of its neighbors, with the object being assigned to the class most common among its k nearest neighbors (k is a positive integer, typically small). If k = 1, then the object is simply assigned to the class of that single nearest neighbor.\nb) In k-NN regression, the output is the property value for the object. This value is the average of the values of k nearest neighbors.\n\n\nA small value of k means that noise will have a higher influence on the result and a large value make it computationally expensive.\n\n\nData scientists usually choose as an odd number if the number of classes is 2 and another simple approach to select k is set k=sqrt(n).\n\n\nclassifies the new data or case based on a similarity measure.\n\n\n‘k’ in KNN is a parameter that refers to the number of nearest neighbours to include in the majority of the voting process.\n\n\nuse euclidean distance. (For categorical variables, the hamming distance must be used.)\n\n\ncan be used to solve both classification and regression problems.\n\n\nprerequisite\n\ninstall jupyter notebook (or you can use any other python platform also)\ninstall numpy, pandas & matplotlib on it.\n\nDescription of repository:\n\nDiabetes_XTrain.csv, Diabetes_YTrain.csv & Diabetes_Xtest.csv are given data set.\ncode.ipynb is code in python to implement K-Nearest Neighbors Algorithm.\noutput.csv is the final result.\n\nPros of KNN\n\n\nSimple to implement\n\n\nFlexible to feature/distance choices\n\n\nNaturally handles multi-class cases\n\n\nThe algorithm is versatile. It can be used for classification, regression, and search.\n\n\nCan do well in practice with enough representative data\n\n\nCons of KNN\n\n\nNeed to determine the value of parameter K (number of nearest neighbors)\n\n\nComputation cost is quite high because we need to compute the distance of each query instance to all training samples.\n\n\nStorage of data\n\n\nMust know we have a meaningful distance function.\n\n\nK-NN is also a lazy learner because it doesn’t learn a discriminative function from the training data but “memorizes” the training dataset instead.\n'], 'url_profile': 'https://github.com/ABHISHEKVISHWAKARMA80', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '30 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Vaishali04581', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Vadodara, Gujarat', 'stats_list': [['1', '          follower'], ['6', '          following'], ['1']], 'contributions': '54 contributions\n        in the last year', 'description': [""Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to set up your Anaconda environment to get started!\nDependencies\nUsing Anaconda consists of the following:\n\nInstall miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nCreate and activate * a new conda environment.\n\n* Each time you wish to work on any exercises, activate your conda environment!\n\n1. Installation\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2. Create and Activate the Environment\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nGit and version control\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\nIf you'd like to learn more about version control and using git from the command line, take a look at our free course: Version Control with Git.\nNow, we're ready to create our local environment!\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/udacity/nd320-c1-emr-data-starter.git\ncd nd320-c1-emr-data-starter\n\n\n\nCreate (and activate) a new environment, named udacity-ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\nconda create -n udacity-ehr-env python=3.7\nsource activate udacity-ehr-env\n\n\nWindows:\n\nconda create --name udacity-ehr-env python=3.7\nactivate udacity-ehr-env\n\nAt this point your command line should look something like: (udacity-ehr-env) <User>:USER_DIR <user>$. The (udacity-ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there.\n\n\npip install -r requirements.txt\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md\n""], 'url_profile': 'https://github.com/Harshit4199', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '89 contributions\n        in the last year', 'description': ['Pima\nForecasting the Onset of Diabetes Milletus among Pima Indian women.\n'], 'url_profile': 'https://github.com/girishji', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['6', '          following'], ['0']], 'contributions': '34 contributions\n        in the last year', 'description': ['Dicision-Tree-\nDiabetes Data set Prediction Using Decision tree and Random Forest\n'], 'url_profile': 'https://github.com/Mshan19', 'info_list': ['Jupyter Notebook', 'Updated May 26, 2020', 'Jupyter Notebook', 'Updated Jul 13, 2020', 'Jupyter Notebook', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', '1', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated Oct 30, 2020', 'Jupyter Notebook', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Updated Jun 5, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['7']], 'contributions': '92 contributions\n        in the last year', 'description': ['CNN_Pima_indian_classification\nClassify Pima indian dataset with Keras (testing for comparing extracting information with informal method using CNN as tested)\npre-processing\n\nmean impution on each category\nBaggedLOF\nSMOTE\n\nModel-pre-process_input_output\nCNN - Deep learning needed input into format as (instance, row, col, channels)\n\npadding (length = 9)\nreshape (max_lenght, 3, 3, 1)\ntransform output into category.\n\nModel-CNN\n\nfirst layer : input_size = (3,3,1)\nsecond layer : Convolunation 2 dimension with 64 filters and 2 kernel\nthrid layer : Convolunation 2 dimension with 32 filters and 2 kernel\nfourth layer : Max pool size = 1\nFlatten\ncreate 2 hidden layer with 100 nodes (fully connected)\noutput 2\n\nThe model is interesting in the coverage of learning rate.\nNeed to be improve.\n'], 'url_profile': 'https://github.com/wissanu', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '13 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Framework-using-Two-level-Classification-Process\nDiabetes Mellitus is popularly known as one of the top most ailment with highest kill rate. Currently, there are more than 465 million patients worldwide suffering from this disease, majority of which fall under the type 2 diabetic status. India can be labelled the diabetic capital of the world with the second largest population of diabetic patients. Diabetes has a very high mortality rate due to the fact that majority of the patients do not get their diagnosis in time. In fact, one of two diabetes patients realize the status of their disease a little too late. This delay in diagnosis can be caused by one or more of the factors such as lack of information about the disease, cumbersome and time-consuming diagnosis procedure, lack of funds for diagnosis and low reliability of some doctors. With this project, the aim is to build a web application that can provide end-to-end service for such patients. This application ensures high accuracy of prediction, is free of charge and easily accessible over the internet at all times. Diabetex application will not only predict whether a patient has diabetes, but also give them a detailed report of the diagnosis, educate them about diabetes, help them get in touch with doctors for treatment, give feedback about the application etc. The backend of the application is built on the UCI’s PIDD (Pima Indian Diabetes Database) and uses Python, SQL, PHP, Flask and HTML5 as its base technology. The classifier is a special two-level system where various classifiers at level one is assigned weightage and fed into the ensemble classifier at level two to increase accuracy and mimic real-life diagnosis environment. This system is compared to various other approaches for novelty and better results.\n'], 'url_profile': 'https://github.com/Nikita-Negi', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'San Francisco, United States', 'stats_list': [['33', '          followers'], ['2', '          following'], ['75']], 'contributions': '709 contributions\n        in the last year', 'description': ['Novel Diabetic cluster identification using sagemaker\nDiabetes classification based on the paper Novel subgroups of adult-onset diabetes and their association with outcomes: a data-driven cluster analysis of six variables. We use sagemaker to cluster the data based on the following variables:\n\nglutamate decarboxylase antibodies (GAD),\nage at diagnosis,\nBMI\nHbA1c\nhomoeostatic model assessment estimates of insulin resistance\nhomoeostatic model assessment estimates of β-cell function\n\nThis will allow us to place the patients in 5 finely defined clusters as opposed to generic 2 clusters (Type 1 and Type 2). This will allow healthcare providers to provide more targetted care to patients.\nArchitecture diagram\n\nInstructions\n\nData generation - You can generate dummy data using data_generator.py . This file generates 10,000 records. You can use this to build a model for testing. Once the file is generated place it in a bucket in s3\nmain.ipynb , preprocessing.py - Copy these 2 files in your sagmeaker notebook. This will help you preprocess the data, train the model and deploy the model.\ninference.py - You can use either of these to run inference on generated model\n\n'], 'url_profile': 'https://github.com/prabhatsharma', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'Macomb, Illinois', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['Diabetes-130-US-hospitals-for-years-1999-2008\n'], 'url_profile': 'https://github.com/PrashansaCh', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['21', '          following'], ['13']], 'contributions': '182 contributions\n        in the last year', 'description': ['gluco-monitor\nMini aplicación para registrar los niveles de glucosa en la sangre de personas con diabetes.\n'], 'url_profile': 'https://github.com/pahoalapizco', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'Stockholm', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '79 contributions\n        in the last year', 'description': ['T1D-lipidome\nIntroduction\nThis is the living database of lipidomic aberrations during the pathogenesis of type 1 diabetes (T1D).\nThe database has been collected from scientific publications that report abnormalities related to the onset of T1D. In practice, this either means:\n\nlipids that are aberrated in blood samples collected from persons, who are later known to have been diagnosed with T1D, or\nlipids that are associated with the deterioration of insulin secretion in blood samples collected from persons recently diagnosed with T1D.\n\nCitation\nThis database is described in the following publication. Please cite the publication, if you use the database or related code:\nTommi Suvitaival. Lipidomic Abnormalities During the Pathogenesis of Type 1 Diabetes: a Quantitative Review. Current Diabetes Reports. 20, 46 (2020). http://dx.doi.org/10.1007/s11892-020-01326-8\nDatabase of the Publication\nThe database that was used in the publication was collected from eight scientific publications.\n\nThe database can be found at data/T1D-lipidome-database.tsv.\nThe analysis code along with output can be found at the scripts folder.\n\nLiving Database\nThe database is also being updated, when new publications appear in the field.\n\nThe updated database can be found at data-updated/T1D-lipidome-database-updated.tsv.\nThe analysis code along with updated output can be found at the scripts-updated folder.\n\nIf you know of a new publication in the field and the publication reports direct lipid-specific associtions to the onset or progression of T1D, you are welcome to inform the author of the database, Tommi Suvitaival, about it. Most easily, this can be done by posting an issue to this Github repository or, alternatively, via email.\n'], 'url_profile': 'https://github.com/tommi-s', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['4', '          following'], ['0']], 'contributions': '55 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/leodann', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '35 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shweta2411', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'Toronto', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/khashayarebra', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}","{'location': 'Chicago, IL', 'stats_list': [['12', '          followers'], ['20', '          following'], ['89']], 'contributions': '1,118 contributions\n        in the last year', 'description': [""ML: Decision Tree Learning and Random Forest & Bagging.\nDecision Tree\nDecision tree learning is a predictive modelling and primitive supervised machine learning techniues. The decision tree starts from observation (sunny or rainy) to conclusion about the item's target value (represented in leaves.) A tree models where target variable can take a discrete value are classification trees - leaves represent class labels and branches conjuctions of features. Decision trees where the target variable can take continuous values are called regression trees. In this repo are implementation of both trees on two different datasets.\n\n\n\n\nDecision tree learning algorithm is applied on Pima diabetes and win quality datasets.\nOn the 'code' folder are two python scripts that implements a basic decision tree from Scikit to make predictions.\n(1) uses dataset from Pima Indians diabetes for classification. target variable: the presence/absense of diabetes in individuals and\n(2) uses dataset from the quality of red wines rated 1-10 for regression.\nThis code explores several ways to score the predictions and evalute results, including but not limited to different scorers, cross comparing cross-validation to simple test and train sets, as well as looking at the effects of simple feature selection.\nIn classification, an object 'clf' is created and for regression 'rgr'. Methods such as fitting a model to some data are called on using these objects, and access their internal variables such as getting predicted class labels.\n\nRandom Forest and Bagging\nBagging = Bootstrap Aggregating\nHow does random forests work?\nWhen the training set for the current tree is drawn by sampling with replacement, about one-third of the cases are left out of the sample. This oob (out-of-bag) data is used to get a running unbiased estimate of the classification error as trees are added to the forest. It is also used to get estimates of variable importance.\nAfter each tree is built, all of the data are run down the tree, and proximities are computed for each pair of cases. If two cases occupy the same terminal node, their proximity is increased by one. At the end of the run, the proximities are normalized by dividing by the number of trees. Proximities are used in replacing missing data, locating outliers, and producing illuminating low-dimensional views of the data.\n\n\n\n\nFeatures of Random Forest:\n\nIt is unexcelled in accuraccy among current algorithms\nIt runs efficiently on large data bases.\nIt can handle thousands of input variables without variable deletion.\nIt gives estimates of what variables are important in the classification.\nIt generates an internal unbiased estimate of the generalization error as the forest building progresses.\nIt has an effective method for estimating missing data and maintains accuracy when a large proportion of the data are missing.\nIt has methods for balancing error in class population unbalanced data sets.\nGenerated forests can be saved for future use on other data.\nPrototypes are computed that give information about the relation between the variables and the classification.\nIt computes proximities between pairs of cases that can be used in clustering, locating outliers, or (by scaling) give interesting views of the data.\nThe capabilities of the above can be extended to unlabeled data, leading to unsupervised clustering, data views and outlier detection.\nIt offers an experimental method for detecting variable interactions.\n\nMore about RF: https://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm#intro\n\nReview these Scikit API links for more information on how they are implemented.\nSVM Classifier: https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html\nSVM Regressor: https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html\nLDA Classifier: https://scikitlearn.org/stable/modules/generated/sklearn.discriminant_analysis.LinearDiscriminantAnalysis.html\n""], 'url_profile': 'https://github.com/SansBasnet', 'info_list': ['Python', 'Updated Aug 21, 2020', 'PHP', 'Updated May 29, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'JavaScript', 'Updated Jun 15, 2020', 'GPL-3.0 license', 'Updated Aug 17, 2020', 'Java', 'Updated Jun 3, 2020', 'Updated May 28, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'HTML', 'Updated Jan 2, 2021']}"
