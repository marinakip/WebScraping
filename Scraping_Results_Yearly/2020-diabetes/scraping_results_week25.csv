"{'location': 'Kolkata, West Bengal, India', 'stats_list': [['14', '          followers'], ['2', '          following'], ['2']], 'contributions': '203 contributions\n        in the last year', 'description': [""Genre\nTo predict if the person is suffering from diabetes or not on the basis of information entered.\nMovie Genre Prediction:\nTable of Content\n\nDemo\nOverview\nInstallation\nDeployment on Heroku\n\nDemo\nlink\n\nOverview\nThis is a Web app which will predict diabetes.\nInstallation\nThe Code is written in Python 3.6.10. If you don't have Python installed you can find it here. If you are using a lower version of Python you can upgrade using the pip package, ensuring you have the latest version of pip. To install the required packages and libraries, run this command in the project directory after cloning the repository:\npip install -r requirements.txt\nDeployment on Heroku\nLogin or signup in order to create virtual app. You can either connect your github profile or download ctl to manually deploy this project.\n\nOur next step would be to follow the instruction given on Heroku Documentation to deploy a web app.\nTechnologies Used\n\n  \n""], 'url_profile': 'https://github.com/ANJALIAGARWAL-IT', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'Mangaluru,India', 'stats_list': [['38', '          followers'], ['31', '          following'], ['73']], 'contributions': '558 contributions\n        in the last year', 'description': [""Instructions to be followed\nInstall the below required packages:\ndjango - (pip install django)\ntensorflow - (pip install tensorflow)\npillow - (pip install pillow || pip install PIL)\nnumpy (pip install numpy)\n===================================================\nConfiguration to be made:\nInside diabetic_retinopathy -> settings.py at last you have to put your local path to output directory currently it is my local path\n===================================================\nNote:\nCurrently the models have been trained using tesnsorflow keras you can find the models inside diab_retina_app -> model folder\n===================================================\nTo execute the project run the below command:\npython manage.py runserver\n===================================================\nInput:\nchoose the test image from the test directory given inside the project ie; diab_retina_app->test\nTraining images are not included in the folder since it's a large collection\nThe same images you have sent have been used for training\n===================================================\nYou are free to edit the front-end/processing logic as per your need\n===================================================\n""], 'url_profile': 'https://github.com/thealoneprogrammer', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/education454', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'Houston, Texas', 'stats_list': [['80', '          followers'], ['0', '          following'], ['27']], 'contributions': '61 contributions\n        in the last year', 'description': ['Patient Selection for Diabetes Drug Testing\nI built a model that predicts the expected days of hospitalization time, which determines whether the patient is selected for the clinical trial. In clinical trials, the drug is often administered over a few days in the hospital with frequent monitoring/testing. Therefore, the target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering the drug and monitoring after discharge.\nDataset\nI used a modified dataset from UC Irvine.\nDependencies\nUsing Anaconda consists of the following:\n1.Install miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2.Create and activate a new conda environment.\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\n3.Create local environment\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/iDataist/Patient-Selection-for-Diabetes-Drug-Testing.git\ncd Downloads\n\n\n\nCreate (and activate) a new environment, named ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\n conda create -n ehr-env python=3.7\n source activate ehr-env\n\n\nWindows:\n\n conda create --name ehr-env python=3.7\n activate ehr-env\n\nAt this point your command line should look something like: (ehr-env) <User>:USER_DIR <user>$. The (ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there.\n\n\npip install -r requirements.txt\nipython3 kernel install --name ehr-env --user\n\n\n'], 'url_profile': 'https://github.com/iDataist', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kishankalariya19', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/lorron548', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SwatantraManandhar', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/paavanyadav', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '23 contributions\n        in the last year', 'description': ['IRIS_DATA\nIRIS Data set prediction using machine learning and make web app using Flask and deploy into Heroku\nCheck out live demo :- https://irisdata-api.herokuapp.com/\n'], 'url_profile': 'https://github.com/Ashishdeshmukh007', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '24 contributions\n        in the last year', 'description': ['By taking intital parameters like blood pressure etc my model can predict whether the person is suffering from diabetes or not.\n'], 'url_profile': 'https://github.com/akshat-01', 'info_list': ['4', 'Jupyter Notebook', 'Updated Jul 22, 2020', '11', 'Python', 'Updated Jun 17, 2020', '1', 'Updated Aug 11, 2020', '4', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/BorseGaurav95', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'Ellensburg, WA', 'stats_list': [['6', '          followers'], ['8', '          following'], ['3']], 'contributions': '83 contributions\n        in the last year', 'description': ['DiabetesCalculator\nReact Application that calculates the amount of insulin needed for a given meal.\n'], 'url_profile': 'https://github.com/msolwold', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'Chittagong,Bangladesh', 'stats_list': [['15', '          followers'], ['0', '          following'], ['5']], 'contributions': '87 contributions\n        in the last year', 'description': ['DiabetesPrediction\n'], 'url_profile': 'https://github.com/Chando0185', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['4']], 'contributions': '105 contributions\n        in the last year', 'description': ['Classification-Algorithm\nDiabetes Dataset\nApply Classifier algorithm on diabetes dataset and distinguised apt alogorithm.\n'], 'url_profile': 'https://github.com/ankitadasadia', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '38 contributions\n        in the last year', 'description': ['DiabetesPresentation\nPart of Principal of Data Science Course Project\n'], 'url_profile': 'https://github.com/RobinAhmedRobi', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['2', '          following'], ['2']], 'contributions': '715 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Prediction\n'], 'url_profile': 'https://github.com/anupkumar08', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['19']], 'contributions': '7 contributions\n        in the last year', 'description': ['glucose-forecasting\nPlaying around with BG monitoring data from FreestyleLibre\n'], 'url_profile': 'https://github.com/jessefh', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['1']], 'contributions': '35 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Using-Logistic-Regression\nUsed Kaggle Pima Indians Diabetes Database to predict diabetes\nDataset - https://www.kaggle.com/uciml/pima-indians-diabetes-database/kernels\nReference - https://www.datacamp.com/community/tutorials/understanding-logistic-regression-python\n'], 'url_profile': 'https://github.com/dreamerbasa', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['7', '          following'], ['4']], 'contributions': '26 contributions\n        in the last year', 'description': ['Diabetes_predictor_for_women\nDemo link:\nhttps://diabetes-predictor-for-women.herokuapp.com/\n'], 'url_profile': 'https://github.com/sushantmakadia', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'TypeScript', 'Updated Aug 14, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'R', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/willythl', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '21 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nDiabetes prediction using Logistic Regression\n'], 'url_profile': 'https://github.com/rohkhk', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'Kolkata, India', 'stats_list': [['19', '          followers'], ['12', '          following'], ['64']], 'contributions': '465 contributions\n        in the last year', 'description': [""Diabetes-Prediction\n\nThis Notebook will help predict the chances of a women having Diabetes based on input provided.\n\nData Information:\n\nDownloaded from Kaggle\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration over 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)2)\nDiabetesPedigreeFunction: Diabetes pedigree function (a function which scores likelihood of diabetes based on family history)\nAge: Age (years)\nOutcome: Class variable (0 if non-diabetic, 1 if diabetic)\n\n\nEDA(Exploratory Data Analysis)\n\nSkinthichkness was replaced from 0 to 5mm, as minimal checkpoint\nAll the values with pregency value greater than 10 was coverted to 10.\nOnly Glucode value greater than 0 was taken into account\nBMI values were changed to 10 as minimal value since many had BMI=0\nInsulin Values was converted to mean, as many values were between 0-10\n\n\nObservation\n\n\nRelation between various parameters of the dataset.\n\n\n\nWomen with lesser number of pregrenancy have less chances of getting Diabetes\n\n\n\nWomen who have high DiabetesPedigreeFunction are more likely to have Diabetes\nWith less DiabetesPedigreeFunction, the chances are very low (i.e when the value is less than 0.4)\n\n\n\nElderly woman are more likely to have Diabetes.\n\n\nMachine Learning Algorithm\n\nTrain and Test sizes were 70% and 30% each.\nML model Multiple Logistic Regression gives us an accuracy of 82.09%\nDecision Tree Classifier gives an accuracy_score of 71.16%\nRandomForestClassifier gives us an accuracy_score of 76.84%\n\n\nPrediction\n\nPrediction model was built and deployed.\n\n\n\nThe output '1' predicts the chances of having diabtes and '0' predicts the chances are very less\n\n""], 'url_profile': 'https://github.com/Lokeshrathi', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '52 contributions\n        in the last year', 'description': ['""# diabetes-heroku""\n'], 'url_profile': 'https://github.com/Tesmic', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'Bangalore', 'stats_list': [['22', '          followers'], ['7', '          following'], ['19']], 'contributions': '164 contributions\n        in the last year', 'description': ['diabetes-healthcare\nA care management organisation called WeCare wants to identify among its diabetic patients, the ones that are at high risk of getting re-admitted to the hospital.\nThey wish to intervene by providing some incentive to these patients that will help them improve their health. As the star analyst of this organisation, your job is to identify high-risk diabetic patients through risk stratification. This will help the payer to decide what are the right intervention programs for these patients.\nData preparation:\n\nRemove redundant variables, duplicate rows/columns\nCheck for missing values and treat them accordingly.\nScale numeric attributes and create dummy variables for categorical ones.\nChange the variable \'readmitted\' to binary type by clubbing the values "">30"" and ""<30"" as ""YES"".\nCreate the derived metric \'comorbidity\',\n\nData Exploration\n\nPerform basic data exploration for some categorical attributes\nPerform basic data exploration for some numerical attributes\n\nModel Building\n\nDivide your data into training and testing dataset\nTrain and compare the performance of at least two machine learning algorithms and decide which one to use for predicting risk of readmission for the patient.\nImportant feature for each model is calculated.\nUse trained model to stratify my population into 3 risk buckets:  High risk (Probability of readmission >0.7)  Medium risk (0.3 < Probability of readmission < 0.7)  Low risk (Probability of readmission < 0.3)\n\n'], 'url_profile': 'https://github.com/maddymaster', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'INDIA', 'stats_list': [['0', '          followers'], ['1', '          following'], ['8']], 'contributions': '82 contributions\n        in the last year', 'description': ['Diabetes Prediction Using Machine Learning\nObjective\nTechniques Used\n\nData Cleaning\nData Visualization\nMachine Learning Modeling\n\nAlgortihms Used\n\nMLP Classifier\n\nModel Evaluation Methods Used\n\nConfusion Matrix\n\nGuide Lines\nPackages and Tools Required:\nPandas \nMatplotlib\nSeaborn\nScikit Learn\nJupyter Notebook\n\nPackage Installation\npip install numpy\npip install pandas\npip install seaborn\npip install scikit-learn\npip install matplotlib\n\nJupyter Notebook Installation Guide  https://jupyter.org/install\n'], 'url_profile': 'https://github.com/ksudhanshu348', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abdevilliers', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'Mumbai', 'stats_list': [['2', '          followers'], ['10', '          following'], ['3']], 'contributions': '147 contributions\n        in the last year', 'description': ['Diabetes_Prediction\n'], 'url_profile': 'https://github.com/JaykumarDagli', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/N3UR0NS', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}","{'location': 'Bay Area, CA, USA', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['Diabetes-prediction\nThis project uses ML classification models to predict someone might have diabetes or not given certain inputs\n'], 'url_profile': 'https://github.com/somhalder', 'info_list': ['1', 'R', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Python', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'HTML', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', 'Updated Jun 16, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '73 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/parimal213', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/N3UR0NS', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'Uthukottai', 'stats_list': [['5', '          followers'], ['4', '          following'], ['10']], 'contributions': '24 contributions\n        in the last year', 'description': ['This is a dibetes prediction application !!!\nDEMO : https://diabetes-cheker.herokuapp.com/\n!!!ENJOY!!\nDONE BY : MANOJ V & KAVITHA S\n'], 'url_profile': 'https://github.com/manojvelmurugan', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '57 contributions\n        in the last year', 'description': ['diabetes prediction\n'], 'url_profile': 'https://github.com/vishwa1924', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'Kolkata', 'stats_list': [['0', '          followers'], ['7', '          following'], ['2']], 'contributions': '87 contributions\n        in the last year', 'description': ['Diabetes Prediction - Deployment in Heroku\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• Please do ⭐ the repository, if it helped you in anyway\n• If you want to view the deployed model, click on the following link:\nDeployed at: http://diabetespredictionmyapp.herokuapp.com/\n'], 'url_profile': 'https://github.com/Adhirajmajumder', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'Palwal,  Haryana,  India', 'stats_list': [['1', '          follower'], ['2', '          following'], ['9']], 'contributions': '94 contributions\n        in the last year', 'description': ['Diabetes Prediction\ndiabetes Prediction using different Machine Learning algorithms.\n'], 'url_profile': 'https://github.com/vijay5158', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'delhi', 'stats_list': [['2', '          followers'], ['0', '          following'], ['2']], 'contributions': '36 contributions\n        in the last year', 'description': ['diabetes_prediction\n'], 'url_profile': 'https://github.com/roshniverma21', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['2']], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abdus2812', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['15', '          followers'], ['19', '          following'], ['10']], 'contributions': '52 contributions\n        in the last year', 'description': ['A web app made using flask and machine learning to predict whether a person has diabetes or not\n'], 'url_profile': 'https://github.com/vatsal1999', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['5']], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/radianjs', 'info_list': ['HTML', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'JavaScript', 'Updated Sep 18, 2020', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 20, 2020', '1', 'HTML', 'Updated Jun 17, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020']}"
"{'location': 'Surat,Gujarat,India', 'stats_list': [['0', '          followers'], ['3', '          following'], ['15']], 'contributions': '118 contributions\n        in the last year', 'description': ['diabetes_predictor\nTo run the app, first, you need to set the FLASK_APP environment variable.\nTo set the environment variable from Windows PowerShell, run\n(myenv) PS C:\\myfirstapp> $env:FLASK_APP = ""app.py""\nFrom a Windows Command Prompt, run the set command.\nC:\\myfirstapp> set FLASK_APP=app.py\nTo set FLASK_APP environment variable in Linux\n$ export FLASK_APP=app.py\nYou can then run the application using the flask run in both Windows and Linux.\n(myenv) PS C:\\myfirstapp> flask run\nServing Flask app ""app.py""\nEnvironment: production\nWARNING: This is a development server. Do not use it in a production deployment.\nUse a production WSGI server instead.\nDebug mode: off\nApp.py name = app\nRunning on http://127.0.0.1:5000/ (Press CTRL+C to quit)\nNow, open a web browser and enter the URL http://127.0.0.1:5000/ and you should see the webpage.\nTo stop the application simply press CTRL+C in the terminal where you started the app.\n'], 'url_profile': 'https://github.com/vadodariyakeyur', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['Diabetes-readmissions\nPredicting probability of readmissions within 30 days\n'], 'url_profile': 'https://github.com/navneethnair', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'Faridabad', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Ankush1305', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'Mumbai', 'stats_list': [['17', '          followers'], ['32', '          following'], ['120']], 'contributions': '803 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Prediction from Datasets #Coding Blocks\n\nTraining Data\n\nXTrain\nYTrain\n\nTesting Data\n\nXtest\n\nLIBRARIES USED -\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\nAlgorithm Used -> kNN\nHow to Check the Accuracy of Challange ?\ndf.to_csv(""Solution.csv"",index=False)\nUse this to Export your prediction and then  Upload it on challenge after submitting It will calculate the accuracy\n'], 'url_profile': 'https://github.com/bhargav-joshi', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'delhi', 'stats_list': [['2', '          followers'], ['0', '          following'], ['2']], 'contributions': '36 contributions\n        in the last year', 'description': ['diabetes_predictor\n'], 'url_profile': 'https://github.com/roshniverma21', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['23', '          following'], ['14']], 'contributions': '42 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/naumanjabbar', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'Minneapolis', 'stats_list': [['3', '          followers'], ['4', '          following'], ['0']], 'contributions': '173 contributions\n        in the last year', 'description': ['Exploratory Data Analysis and Prediction on Pima Indians Diabetes Dataset\nThis repository explores the Pima Indians Diabetes Dataset in detail, covering exploratory data analysis, handling of missing data using different techniques and prediction using different classification algorithms.\nMissing data handling:\n\nKNN\nMICE\n\nClassification:\n\nLogistic regression\nSVM\nXGBoost\n\n'], 'url_profile': 'https://github.com/phoenixSP', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '40 contributions\n        in the last year', 'description': ['Diabetes-prediction\nThis project uses Logistic regression and K-Nearest neighbours models of machine learning to predict if a person is diabetic or not.\n'], 'url_profile': 'https://github.com/deepanshu79', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '23 contributions\n        in the last year', 'description': ['diabetes-prediction\n'], 'url_profile': 'https://github.com/thiru2024', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '60 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Pallavi-Sinha-12', 'info_list': ['HTML', 'Updated Aug 24, 2020', 'Updated Jun 15, 2020', 'HTML', 'Updated Jun 15, 2020', 'Python', 'Updated Jul 4, 2020', 'HTML', 'Updated Jun 18, 2020', '1', 'HTML', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 21, 2020', '1', 'Updated Jun 20, 2020', 'HTML', 'Updated Jun 17, 2020']}"
"{'location': 'Plymouth, United Kingdom', 'stats_list': [['2', '          followers'], ['1', '          following'], ['3']], 'contributions': '355 contributions\n        in the last year', 'description': [""Diabetes-Prediction\nA multi-layer perceptron which predicts whether an individual is susceptible to diabetes. The model has been trained on the Pima Indians Diabetes Database, provided by the National Institute of Diabetes and Digestive and Kidney Diseases.\nLibraries Used\nmatplotlib\npandas\nKeras\nNumPy\nseaborn\nscikit-learn\nData Analysis\nHistograms\n\nNote: 'outcome' refers to whether an individual does, or does not, have diabetes\nInsights\n\nVariables are on different scales, and therefore must be standardized\nThe majority of data has been collected from individuals between 20 and 30 years of age\nBMI, Blood Pressure, and Glucose are normally distributed\n\nThis is to be expected when such statistics are collected from a population\n\n\nIt is impossible for for BMI, Blood Pressure, and Glucose to have a value of zero\n\nMissing or incomplete data?\n\n\nCertain individuals have had up to 15 pregnancies\n\nWhile not implausible, this information should still be considered\n\n\nThis data-set suggests that 35% of the population has diabetes (65% do not)\n\nThe World Health Organisation estimates that only 8.5% of the global population suffers from diabetes\n...this data-set is therefore not representative of the global population, which is to be expected due to its nature\n\n\n\nDensity Plots\n\nInsights\n\nGlucose, BMI, and Age appear to be the strongest predicting values for those with diabetes\nBlood Pressure and Skin Thickness do not appear to have a significant correlation with the distribution of diabetic and non-diabetic individuals\n\nData Pre-Processing\nMissing or Incomplete Values\nStatistical Summary\n\n\nThere are a total of 768 entries\nPregnancies, Glucose Concentration, Blood Pressure, Skin Thickness, Insulin, and BMI appear to have a minimum value of zero. This indicates missing values as such values are impossible\n\nNumber of Missing Values\n\n\nThere is a significant number of missing values. Most notably, a large number of entries for Insulin and Skin Thickness are missing\nDue to the fact that missing values have been determined by searching for entries with a value of zero, Pregnancies can be ignored as an individual with zero pregnancies is perfectly valid\nMissing values have been replaced with the mean of non-missing values\n\nData Standardization\nStatistical Summary of Standardized Data\n\n\nThe values for Outcome have been copied from the original dataset as they do not require standardization\n\nData Splits\nThe dataset has been split into training (80%) and testing (20%) splits. The training set has then been further divided into training (80%) and validation (20%) splits.\nResults\nOnce trained, the model was able to achieve 96.74% accuracy on the training set and 70.13% accuracy on the testing set.\nConfusion Matrix\n\n\nIn the case of diabetes prediction, false-negatives are the least desirable outcome as it would result in patients being informed that they will not develop diabetes when in fact they may.\n\nROC Curve\n\n""], 'url_profile': 'https://github.com/Mauzey', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['8']], 'contributions': '506 contributions\n        in the last year', 'description': ['Diabetes_Detection\n'], 'url_profile': 'https://github.com/shatakshisingh24', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '63 contributions\n        in the last year', 'description': ['Diabetes-data\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent\nhe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nAcknowledgements\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\nInspiration\nCan you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\n'], 'url_profile': 'https://github.com/guru-rayala', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'HK', 'stats_list': [['1', '          follower'], ['0', '          following'], ['12']], 'contributions': '73 contributions\n        in the last year', 'description': ['HKU microfluidic paper glucose monitoring App\nSteps\n\nInstall conda, python>=3.6, numpy and related package\nClone this repo\nDownload design.png to your phone, or print it out\ncd to cloned directory of this folder\nRun $ conda run python cam.py\nShow the design.png to the webcam\n\n'], 'url_profile': 'https://github.com/catmasteryip', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'St Louis', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '72 contributions\n        in the last year', 'description': ['Pima Indians Diabetes Database\nPredicting the onset of diabetes based on diagnostic measures\nData: This dataset is originally from the National Institue of Diabetes and Digestive and Kidney Diseases. All patients (768) here are females at least 21 years old of Pima Indian Heritage. The dataset consist of several medical predictor variables and one target.\nIndependent variables\n\nPregnacies (preg): Number of pregnancies the patients\nBody-Mass-Index (BMI) in kg/m^2\nGlucose level (glu): Plasma glucose concentraion a 2 hours in an orgal glucose tolerance test\nBlood Pressure (bp): Diastolic blood pressure in mmHg\nSkin Thickness (skin): Triceps skin fold thicknes in mm\nInsulin level (insulin): 2-hour serum insulin (micro-U/ml)\nDiabetes pedigree function (dpfunc)\nAge (age) in Years\n\nTarget Varibales\n\nOutcome (Y): Class varible (0 or 1)\n\nData source: https://www.kaggle.com/uciml/pima-indians-diabetes-database/home\nHistograms of predictors\n\nSummary Statistics\n\nMissing values can be found in glu, bp, skin, insulin, and bmi, columns as ""0"". Rows with these missing values were assigned NA. The distribution of predictors and their summary statistics are shown in figure-1 and table-1, respectively. Except BMI, BP, glucose, and skin, distributionns of all other predictors are strongly skewed. Mean and median values are found to be very close for bmi (32.3, 32.5), bp (72, 72.4) distributions (figure 1). The distribution of glu is slightly skewed. Log transformation of insulin and dbfunc predictors exhibit histrograms with normal distributions as shwon in figure 2. Skinwness of age variable can be cured taking the reciprocal of age.\n\nMissing Data Imputation with WinBUGS\nData set was partitioned randomly considering 87% data in train set. Any missing row in test set was discared. Missing data in train set (glu, bp, skin, insulin, bmi variables) was considered for imputation with following the following model.\n\nClassification model with WinBUGS\nBayesian Logistic Regression model was built to predict whether a patient is diabetic or not.\n\nModel Evaluation\nConfusion matrix is calculated from real outcome and predicted outcome. Accuracy, precision, sensitivity, and specificity were determined. The Bayesian logistic model can predict the outcome (Y) with 69% accuracy with 61% precision. The specificity of 82% suggests that the model is capable of predicting the patients that do not have diabetes than predicting patients with diabetics. Hence, model sensitivity needs to improved.\n\nhttps://mwickram.github.io/pima-indian-diabetes/\n'], 'url_profile': 'https://github.com/mwickram', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['1']], 'contributions': '150 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/karissawhiting', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['13', '          following'], ['2']], 'contributions': '27 contributions\n        in the last year', 'description': [""Hospital-Readmissions-Diabetes\nTree based models to predict hospital readmissions, using the dataset from:\n\nBeata Strack, Jonathan P. DeShazo, Chris Gennings, Juan L. Olmo, Sebastian Ventura, Krzysztof J. Cios, and John N. Clore, “Impact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records,” BioMed Research International, vol. 2014, Article ID 781670, 11 pages, 2014.\n\nTo download the 'diabetic_data.csv' file, click on download data folder on the UCI Machine Learning Repository\n""], 'url_profile': 'https://github.com/FranciDona', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['diabetes-prediction-using-NN\n'], 'url_profile': 'https://github.com/tejasrisimhadri12', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['1', '          following'], ['9']], 'contributions': '122 contributions\n        in the last year', 'description': ['Diabetes_Predictor_Webapp\nHere i have created one machine learning model for Diabetes Prediction using Flask.\n'], 'url_profile': 'https://github.com/Vaishnavi2392000', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}","{'location': '26.1445° N, 91.7362° E', 'stats_list': [['9', '          followers'], ['55', '          following'], ['37']], 'contributions': '282 contributions\n        in the last year', 'description': ['Diabetes_prediction_using_KNN\n'], 'url_profile': 'https://github.com/kulendu', 'info_list': ['Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Sep 6, 2020', '1', 'Jupyter Notebook', 'Updated Oct 20, 2020', 'Updated Jun 16, 2020', 'HTML', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 16, 2020', '1', 'HTML', 'Updated Jun 18, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '15 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes\n'], 'url_profile': 'https://github.com/sakshi1018', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'Saudi Arabia', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '23 contributions\n        in the last year', 'description': ['imputation-Diabetes-data\n'], 'url_profile': 'https://github.com/maram-ab', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '40 contributions\n        in the last year', 'description': ['Predict-Diabetes-Mellitus-\n'], 'url_profile': 'https://github.com/cupsageorgiana', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'Bengaluru', 'stats_list': [['27', '          followers'], ['41', '          following'], ['97']], 'contributions': '359 contributions\n        in the last year', 'description': ['Diabetes Prediction Model\n\nProblem statement :\nClassify as diabetic(1) or healthy(0)\n\nAt the end of the notebook, that is in the visualisation section we can observe how the following factors affect a person\n\nGlucose\nBMI\nAge\n\nThese factors predict whether a person is diabetic or not. Inorder to check this just scroll on the visualisation to predict!!\n'], 'url_profile': 'https://github.com/bharath-acchu', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '103 contributions\n        in the last year', 'description': ['Diabetes-Prediction--Deployment\n'], 'url_profile': 'https://github.com/suhas004', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '57 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mibdbz', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['13']], 'contributions': '50 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saimaheshkothagulla', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['2', '          following'], ['0']], 'contributions': '71 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/habiburrahmankhan', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'Bangalore, India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['13']], 'contributions': '164 contributions\n        in the last year', 'description': ['Diabetes Prediction - Deployment\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at: Heroku\n• Please do ⭐ the repository, if it helped you in anyway.\n• A glimpse of the web app: Sample Diabetes App\n\nDiabetes Predictor - Deployment.py This file consists of the of the machine learning model and it is saved in the form of pickle file in order to develop the web-app\napp.py  file consists of the flask framework where the web-app is built.\nAnd the templates folder consists of the HTML files and the Static folder consists of the css file required for our web-app.\nAnd there is a requirements.txt file where it contains all the dependencies and the procfile to confirm that it is the web gui.\n\nDeployement on Heroku\nLogin or signup in order to create virtual app. You can either connect your github profile or download ctl to manually deploy this project.\n\nOur next step would be to follow the instruction given on Heroku Documentation to deploy a web app.\n'], 'url_profile': 'https://github.com/VAMSI-datascience', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}","{'location': 'United States', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '21 contributions\n        in the last year', 'description': ['Prediction of diabetes based on diagnostic measurements\nObjective:\nThe objective of the dataset is to predict whether or not a patient has diabetes, based on certain diagnostic measurements. The dataset is taken from Kaggle.com.\nDataset:\nThe dataset has total 768 observations and 8 predictors. We have one target variable (binary variable) which tells us if the patient has diabetes or not.\nProcedure:\nI have designed a fully connected neural network. Input layer has 8 neurons as there are 8 inputs. The first layer has 8 neurons and third layer which is a output layer has 1 neuron. We have used ‘Relu’ as an activation function for the first layer and ‘sigmoid’ as an activation function for the output layer as we have to classify data into 2 classes.\nPARAMETERS CALCULATION:\nnumber of input * no. of neurons + biases (1 per each neuron)\nFor the 1st layer: 88+8=72,\nFor 2nd layer 88+8=72,\nFor 3nd layer 8*1+1=9,\nTotal =153.\nI tried designing a neural network with 2 layers and it is not giving good results, I have added 3 layers to improve the accuracy. Epoch is set to 150. Optimizer is adam. Also, I have standardized the data before feeding it to neural network.\nConclusion:\nFollowing are the results after building 2 layer neural network -\nThe training accuracy is 75%,\nAnd evaluation accuracy is 62%\nWhich shows us that there is a overfitting.\nFollowing are the results after building 3 layer neural network -\nThe training accuracy is 81%,\nAnd evaluation accuracy is 76%\nWhich shows us that the accuracy is close to each other and no need to further redesign the neural network.\n'], 'url_profile': 'https://github.com/suvelibhute', 'info_list': ['Jupyter Notebook', 'Updated Jun 20, 2020', 'R', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 22, 2020', 'Java', 'Updated Jul 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 18, 2020', '1', 'Jupyter Notebook', 'Updated Sep 2, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020']}"
"{'location': 'Kolkata,West Bengal,India', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '44 contributions\n        in the last year', 'description': ['Diabetes Prediction\nTable of Contents\n\nDemo\nOverview\nMotivation\nInstallation\nDeployement on Heroku\n\nDemo\nLink: https://mldiabetesprediction.herokuapp.com/\n\n\nOverview\nThis is a simple Flask web app which predicts whether a patient is having diabetes or not.\nMotivation\nI started to learn Machine Learning model to get most out of it. I always wanted to make an end-to-end project and deploy it to a platform such as heroku.This was my first deployment of a web app on heroku but certainly not the last.\nInstallation\nThe Code is written in Python 3.6.10. If you are using a lower version of Python you can upgrade using the pip package, ensuring you have the latest version of pip. To install the required packages and libraries, run this command in the project directory after cloning the repository:\npip install -r requirements.txt\n\nDeployement on Heroku\nLogin or signup in order to create virtual app. You can either connect your github profile or download manually to deploy this project.\n\n'], 'url_profile': 'https://github.com/Saqlainrocks7', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '30 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nCreated a model that could predict whether the person has diabetes or not by using different classifier algorithms. Initially we used RandomForest. Later we enhance the accuracy by using xgboost classifier. Finally we applied cross validation to further improve the accuracy.\n'], 'url_profile': 'https://github.com/vivekanandan-k', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'Rogers, Arkansas', 'stats_list': [['2', '          followers'], ['0', '          following'], ['1']], 'contributions': '79 contributions\n        in the last year', 'description': [""Machine Learning Classification System\nMachine Learning classification system to determine the level of diabetes in the population of US counties.\nThe ML classification model selected for the classification problem was a SVM. I wrote a blog post explaining the evaluation process I followed to select my model:\nMulti class ML Model Evaluation: https://medium.com/analytics-vidhya/multi-class-ml-models-evaluation-103c9fdadb41\nABOUT THE DATASET\nA total of 820 samples of data with 50 variables containing US counties economic features, demographics, geographic coordinates, weather components & food access were used for the study. Labels were defined as High/Medium/Low based on the percentages of diabetes of each county.\n\nData was extracted by using web scraping, by connecting to different APIs and by downloading datasets directly from a webpage.\nList of data sources with links:\n\nUS Census Bureau: API - https://api.census.gov/data/2018/acs/acs1.json?get=[VARIABLESHERE]&for=county:*\nUS Department of Agriculture:https://www.ers.usda.gov/data-products/food-access-research-atlas/download-the-data/\nCenters for Decease Control and Prevention: https://gis.cdc.gov/grasp/diabetes/DiabetesAtlas.html#\nZillow: https://www.zillow.com/research/data/\nMenuism: https://www.menuism.com/\nNational Centers for Environmental Information: https://www.ncdc.noaa.gov/\nWikipedia: https://en.wikipedia.org/wiki/User:Michael_J/County_table\n\nFILES & FOLDERS\nML_classifDiabetes.ipynb\nThis is the main jupyter notebook. Below are the sections within the notebook:\n  1. Libraries & Functions\n  2. Data Engineering\n  2. Exploratory Data Analysis\n  3. Machine Learning classification algorithms: \n        - Random Forests \n        - SVM \n        - K-NN \n        - AdaBoost and Gradient Boosting classifiers\n  4. Conclusion \n\nMLDiabetes_WebScraping.ipynb\nThis notebook has the step-by-step Web Scrapping process used to collect McDonald's, weather & county coordinates data.\nYou do not have to run this notebook to replicate the results of the main notebook as the web scrapped data was saved to the DATA folder\nFor the McDonald's restaurant count, the web scrapping data quality was checked using Google Maps: Places API. I wrote a couple of blog posts explaining this process:\nWeb Scraping: https://medium.com/swlh/web-scraping-for-data-collection-d41c6505235d\nGoogle Maps: Places API: https://medium.com/swlh/google-maps-places-api-28b8fdf28082\nFolder: DATA\nFolder with files dowloaded from data sources. This folder is called from the ML_classifDiabetes.ipynb, therefore you need to make sure to have this folder and all its files saved to the directory were you run your jupyter notebook.\nData files are stored on this folder. The data was obtained from multiple sources using Web scrapping, connecting to APIs, and downloading it directly from websites.\nML_classifDiabetes.ipynb has an explanation of the data source, data dowload method\nFolder: Shapefile_USA\nThis folder has the shapefiles  to plot data in the US map.\n""], 'url_profile': 'https://github.com/Francismorales', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'MUMBAI', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Using-ML\nUsing various machine learning algorithms to get the best prediction accuracy if possible for the Pima Indians dataset.\nHow To Run :\n1.Download the folder in your machine\n2.Open Anaconda Navigator\n3.Change Directory to Downloaded Folder\n4.Run Python app.py\nI have used all the classification model to predict the value and I nearly got 82% accuracy using Logistic Regression\nTechnologies:\nFront-end : Html and css\nBack-end : Machine Learning\nFrameWork : Flask\n'], 'url_profile': 'https://github.com/shivmishra572', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['6']], 'contributions': '20 contributions\n        in the last year', 'description': ['Документация\nPostman: https://documenter.getpostman.com/view/10128062/SzKTxfH9?version=latest\n'], 'url_profile': 'https://github.com/dusty-springfield', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'Brooklyn, NY', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '135 contributions\n        in the last year', 'description': [""Diabetes_Readmittance_Predictions\nThe goal of this project is to use pipelines and GridSearchCV to optimize a number of supervised learning classification models to predict whether or not diabetic patients would be readmitted in the future following an hospital inpatient encounter.\nThe Data\nThe dataset selected for this project come from the Center for Clinical and Translational Research at Virginia Commonwealth University. Data was sourced from the UC Irvine Machine Learning Repository and can be found here: https://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008. The data represent 10 years (1999 - 2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. The data exhibit encounters that satisfy the following criteria:\n\nIt is an inpatient encounter (a hospital admission).\nIt is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\nThe length of stay was at least 1 day and at most 14 days.\nLaboratory tests were performed during the encounter.\nMedications were administered during the encounter.\n\nA full list of feature descriptions can be found here: https://drive.google.com/file/d/1SSeT_sWLBoluq-24teF5BQ4lwMkWxWHU/view?usp=sharing\nValue ID mapping for the variables admission_type_id, discharge_disposition_id, and admission_source_id can be found here: https://drive.google.com/file/d/19amgd_HmmsoUIr2TCmSpnkD9fWQqVOTE/view?usp=sharing\nAfter cleaning the data, the following features were selected:\nThe final data set contains 59,408 instances and 13 variables/25 features that we are left with include the following:\n\ntime_in_hospital (continuous): a range from 1 to 14 days, measuring the length of the inpatient stay\nnum_lab_procedures (continuous): the number of lab tests performed for the patient during the encounter\nnum_medications (continuous): the number of distinct generic name medicines administered during the encounter\nnumber_outpatient (continuous): the number of outpatient visits the patient had in the year preceding the encounter\nnumber_emergency (continuous): the number of emergency room visits the patient had in the year preceding the encounter\nnumber inpatient (continuous): the number of inpatient visits the patient had in the year preceding the encounter\ndrugchange (continuous): a generated variable that counts the number of changes to any of 24 medications\nage1 (continuous): a generated random age for the patient - a random integer was selected from a 10-year range provided by the original categorical bin from the data set\nrace (categorical): a dummy variable for one of Asian, Caucasian, Hispanic, Other; African American was the dropped dummy variable\nadmission_type_id (categorical): a dummy variable where the option is either '3', representing 'Elective' admission, or not, which would identify the encounter as an 'Emergency' admission\ndischarge_disposition_id (categorical): a dummy variable for either 3, 4, 5, 6; 2 was the dropped dummy variable. 2-6 represent 'Continued Care', 'Expired', 'No additional care', 'Short term care', and 'Hospice' respectively\nA1Cresults (categorical): a dummy variable for test results that show whether a patient's levels of blood glucose over the past 3 months has not changed, remained normal, increased >8%, or increased >7%\nInsulin (categorical): a dummy variable to indicate whether insulin was not prescribed, or whether it was held steady, increased, or decreased\n\nThe target variable will be 'readmitted', which classifies whether the patient was readmitted or there was no record of readmission.\nModeling\nFollowing a Logistic Regression model, following the application of Principal Component Analysis for feature reduction, the GridSearch Cross Validataion process was used to optimize parameters for a number of models including a singular Decision Tree, a Bagging Classifier (bagged decision tree), a Random Forest, an Adaptive Boosted forest, and an XG Boosted forest.\nBecause the cost of a false negative has a different cost than a false positive, I scored the models on their 'ROC_AUC' score and selected the final model on the highest class-weighted F1 score.\nHere are the Python libraries utlized for this analysis:\n\nResults\nThe models had fairly low capability of class separability. The XGBoost Classifier returned a performance that showed model capability of ~64.5%. Roughly two-thirds of patients would be correctly identified as a Readmit or Non-readmit.\nSee the ROC_AUC for the optimized XGBClassifier model here:\n\nWhile this was the overall outcome, the models had different outcomes when we examined the predictions of the individual classes.\n\nThe coding of the target variable was 0: Non-Readmit and 1: Readmit. You can see in the above that the model was much better at predicting patients who were Non-readmits vs those patients who would ultimately be readmitted. This drove up the False Negative rate (Actual Readmits predicted to be Non-readmits), causing recall/sensitivity to suffer. Unfortunately, False Negatives are potentially more costly to hospital's preparedness to handle a large influx of patients or to predict bed availability.\nFinally, we were able to understand which features would push prediction outcomes one way or the other:\n\nAs you can see, the greater the number of inpatient and emergency room visits a patient has had in the year before the observed encounter, the more likely they are to be predicted to Readmit in the future. Patients discharge to Hospice (id_6) are less likely to return (they might likely expire in hospice services).\nConclusion\nAdditional analysis could be conducted by reintroducing the discharge diagnosis codes. Given their variety, they were initally discarded, so some medical expertise could be helpful in bucketing those. We could also search for additional information on these patients to better understand how the type of diabetes affects readmittance rates.\n""], 'url_profile': 'https://github.com/zachzazueta', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '65 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Deployment\n'], 'url_profile': 'https://github.com/alkendrasingh', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['T1D_logistic_lasso_regression_model\nType 1 diabetes (T1D) logistic lasso regression predictor model\nPython 3.7.3\ntsfresh                   0.12.0\npymc3                     3.8\nunzip all the zip files under data/ before running any python scripts.\nSome required data may not be available. Please double check before running the python scripts.\nThis folder contains 7 python scripts for creating and validating the T1D lasso regression preditor developed from our study. The scripts should be run by python directly as 7 sequential steps. All the required files are location in data/ directory. The python_scripts_of_T1D_manuscript/ diectory contains all the text files of commands used for developing the predictor models. They are only used for references. The python_scripts_of_T1D_manuscript/UKBiobank_Test_data/ directory contains the information and scripts for the T1D lasso regression predictor model validation with the UKBio bank derived test data.\nFor using the default files at data/, your should start with B_python_script_split_std_80-20_WTCCC_T1D_weight_matrix.py and skip A_python_script_for_creating_WTCCC_T1D_weighted_matrix.py.\nYou can start with running A_python_script_for_creating_WTCCC_T1D_weighted_matrix.py (optional):\nFor running A_python_script_for_creating_WTCCC_T1D_weighted_matrix.py to create a individual tissue specific eQTL effect table, it is required to have your own individual genetype data contain T1D GWAS SNPs in plink bed format with three files (bed,fam,bin) to be converted to a .raw text file. The pink command is as the following:\nplink -bfile your_genotype_bed_file --recode A  --out individual_genotype_table\nAfter running this command, individual_genotype_table.raw is created and be placed in data/. Due to the data sharing agreements, we could not provide any indiviual genotype data from Wellcome Trust Case and Control Consortium and UK Biobank. Nevertheless, you can go to https://www.wtccc.org.uk/ and https://www.ukbiobank.ac.uk/ for applying their genotype data.\nP.S.: Weighted_eQTL_matrix.txt is the Suppliementary Table 5 in the T1D manuscript.\n'], 'url_profile': 'https://github.com/Genome3d', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'Boston, MA', 'stats_list': [['1', '          follower'], ['0', '          following'], ['4']], 'contributions': '176 contributions\n        in the last year', 'description': [""Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to set up your Anaconda environment to get started!\nDependencies\nUsing Anaconda consists of the following:\n\nInstall miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nCreate and activate * a new conda environment.\n\n* Each time you wish to work on any exercises, activate your conda environment!\n\n1. Installation\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2. Create and Activate the Environment\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nGit and version control\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\nIf you'd like to learn more about version control and using git from the command line, take a look at our free course: Version Control with Git.\nNow, we're ready to create our local environment!\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/udacity/nd320-c1-emr-data-starter.git\ncd nd320-c1-emr-data-starter/project/\n\n\n\nCreate (and activate) a new environment, named udacity-ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\nconda create -n udacity-ehr-env python=3.7\nsource activate udacity-ehr-env\n\n\nWindows:\n\nconda create --name udacity-ehr-env python=3.7\nactivate udacity-ehr-env\n\nAt this point your command line should look something like: (udacity-ehr-env) <User>:USER_DIR <user>$. The (udacity-ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there. I also added a line for installing the environment in your notebook in case this is new for you. You should be able to now look for the environment when you select the kernel.\n\n\npip install -r requirements.txt\nipython3 kernel install --name udacity-ehr-env --user\n\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md\n""], 'url_profile': 'https://github.com/nhatanh81096', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}","{'location': 'Central America', 'stats_list': [['11', '          followers'], ['22', '          following'], ['10']], 'contributions': '743 contributions\n        in the last year', 'description': ['Patient-Selection_for_Diabetes_Drug_Testing\nPatient Selection for Diabetes Drug Testing\n'], 'url_profile': 'https://github.com/rcgonzsv', 'info_list': ['Jupyter Notebook', 'Updated Aug 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Jun 20, 2020', '1', 'Jupyter Notebook', 'Updated Jul 17, 2020', 'CSS', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'HTML', 'GPL-3.0 license', 'Updated Jul 22, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Jun 15, 2020', '1', 'Jupyter Notebook', 'Updated Jun 20, 2020']}"
"{'location': 'NONE', 'stats_list': [['4', '          followers'], ['3', '          following'], ['4']], 'contributions': '82 contributions\n        in the last year', 'description': ['-PIMA-INDIANS-DIABETES-DATASET-CLASSIFICATION \nThis is a basic python notebook consisting of classification of diabetes of the person using PIMA INDIAN diabetes dataset.\nTHE MODELS USED IN THIS CLASSIFICATION ARE-\n1) Logistic Regression(test score=0.73)\n2)SVC (test score=0.715)\n3)Decision Tree Classifier (test score=0.835)\n4)Random Forest Classifier (test score=0.875) #Best Among All the Classifier \n5)Xgboost Classifier (test score=0.78)\n'], 'url_profile': 'https://github.com/IMUK23', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'Tiruppur, india', 'stats_list': [['5', '          followers'], ['14', '          following'], ['1']], 'contributions': '161 contributions\n        in the last year', 'description': [""Diabetes-prediction-deployed-in-Heruko\nTable of content\n\nDemo\nOverview\nTechnical Aspect\nInstallation\nRun\n\nDemo\nLink :https://diabetespredict-api.herokuapp.com/\n\nOverview\nThis is a Diabetes prediction  Streamlit app this  was a machine learning model takes input  and predict output the person have\nDiabetes or Not\nTechnical Aspect\nThis project is divided into two part:\n\n\nTraining the model using machine learning.\n\n\nBuilding and hosting a Streamlit web app on Heroku\n\nUser have to enter their details  in the input area.\nAfter entered  the review displayed the person have Diabetes or Not.\n\n\n\nInstallation\nThe Code is written in Python 3.7. If you don't have Python installed you can find it here. If you are using a lower version of Python you can upgrade using the pip package, ensuring you have the latest version of pip. To install the required packages and libraries, run this command.\n   pip install -r requirements.txt\n\nRun\nTO run this model In Linux/Mac open Terminal.If you are  Windows user open your command prompt.Run the command\nstreamlit run app.py\n\n""], 'url_profile': 'https://github.com/Riopradheep007', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '21 contributions\n        in the last year', 'description': ['Diabetes-Prediction-with-Machine-Learning\nRun the app with following command:\n$cd ProjectDirectory\n$streamlit run mldiabetesprediction.py\nFind the WebApp at: http://diabetes-prediction-ml.herokuapp.com/\n'], 'url_profile': 'https://github.com/VIKASREDDY6', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '63 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/susvicky', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'New Delhi', 'stats_list': [['6', '          followers'], ['9', '          following'], ['5']], 'contributions': '129 contributions\n        in the last year', 'description': [""Daibetes-Prediction-Using-KNN-Algorithm\nDiabetes is a condition that impairs the body's ability to process blood glucose, otherwise known as blood sugar. In the United States, the estimated number of people over 18 years of age with diagnosed and undiagnosed diabetes is 30.2 million. The figure represents between 27.9 and 32.7 percent of the population.\nWithout ongoing, careful management, diabetes can lead to a buildup of sugars in the blood, which can increase the risk of dangerous complications, including stroke and heart disease.\nDifferent kinds of diabetes can occur, and managing the condition depends on the type. Not all forms of diabetes stem from a person being overweight or leading an inactive lifestyle. In fact, some are present from childhood.\nWe are using Dataset consisting  consisting of following features -\n['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome']\nand predict whether a person is suffering from diabetes or not\nAlgorithm I am using is KNN :\nK-nearest neighbors (KNN) algorithm is a type of supervised ML algorithm which can be used for both classification as well as regression predictive problems. However, it is mainly used for classification predictive problems in industry. The following two properties would define KNN well −\nLazy learning algorithm − KNN is a lazy learning algorithm because it does not have a specialized training phase and uses all the data for training while classification.\nNon-parametric learning algorithm − KNN is also a non-parametric learning algorithm because it doesn’t assume anything about the underlying data.\nLibraries used are:\nnumpy - for mathematical calculations\nmatplotlib - for visualisation\npandas - for reading csv files\ntkinter - for creating a user interface\n""], 'url_profile': 'https://github.com/AjitVerma15', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['14']], 'contributions': '99 contributions\n        in the last year', 'description': [""Diabetes_Classification\nIn this problem you are given a Diabetes Data set consisting of following features -\n['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome']\nand we have to predict whether a person is suffering from diabetes or not (Binary Classification)\n""], 'url_profile': 'https://github.com/varunsh20', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '46 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/himanshumaurya09876', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'Palam Vihar, Delhi NCR', 'stats_list': [['5', '          followers'], ['10', '          following'], ['0']], 'contributions': '23 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rupalitaneja', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['0', '          following'], ['1']], 'contributions': '53 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pj35134', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}","{'location': 'El Jadida, Morocco ', 'stats_list': [['2', '          followers'], ['7', '          following'], ['2']], 'contributions': '59 contributions\n        in the last year', 'description': ['Predicting-Diabetes-with-Maching-and-Algorithms\nSupport Vector Classifier\nKNN Classifier\nNaive Classifier\nRandom Forest Classifier\nPredicting Diabetes with TensorFlow\nLinear Classifier with TF\nDNN Classifier with TF\n'], 'url_profile': 'https://github.com/HankarM88', 'info_list': ['Jupyter Notebook', 'Updated Jun 19, 2020', '1', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jun 17, 2020', 'HTML', 'Updated Jun 17, 2020', 'Python', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'Jupyter Notebook', 'Updated Jun 19, 2020']}"
"{'location': 'Milpitas, CA', 'stats_list': [['3', '          followers'], ['12', '          following'], ['3']], 'contributions': '239 contributions\n        in the last year', 'description': [""Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to set up your Anaconda environment to get started!\nDependencies\nUsing Anaconda consists of the following:\n\nInstall miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nCreate and activate * a new conda environment.\n\n* Each time you wish to work on any exercises, activate your conda environment!\n\n1. Installation\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2. Create and Activate the Environment\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nGit and version control\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\nIf you'd like to learn more about version control and using git from the command line, take a look at our free course: Version Control with Git.\nNow, we're ready to create our local environment!\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/udacity/nd320-c1-emr-data-starter.git\ncd nd320-c1-emr-data-starter\n\n\n\nCreate (and activate) a new environment, named udacity-ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\nconda create -n udacity-ehr-env python=3.7\nsource activate udacity-ehr-env\n\n\nWindows:\n\nconda create --name udacity-ehr-env python=3.7\nactivate udacity-ehr-env\n\nAt this point your command line should look something like: (udacity-ehr-env) <User>:USER_DIR <user>$. The (udacity-ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there.\n\n\npip install -r requirements.txt\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md\n""], 'url_profile': 'https://github.com/JingxianLin', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '55 contributions\n        in the last year', 'description': ['mlp_in_the_diagnosis_of_diabetes\nAuthors:      Maria Sulińska, Krzysztof Basior\nDescription:  A multilayer perceptron (backpropagation algorithm) used to classify diabetics in the Pima tribe\n'], 'url_profile': 'https://github.com/KrzysztofDamianBasior', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/KousalyaGanesan', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '30 contributions\n        in the last year', 'description': ['Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to meet the dependencies to get started!\nDependencies\npip install -r requirements.txt\n\n'], 'url_profile': 'https://github.com/FrancoisMasson1990', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '44 contributions\n        in the last year', 'description': ['Linear-Risk-Model-for-Retinopathy-in-Diabetes\nThis repository shows a risk score model for retinopathy in diabetic patients using logistic regression.\n'], 'url_profile': 'https://github.com/Shub-hamburger', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['2']], 'contributions': '12 contributions\n        in the last year', 'description': ['This project was bootstrapped with Create React App.\nAvailable Scripts\nIn the project directory, you can run:\nyarn start\nRuns the app in the development mode.\nOpen http://localhost:3000 to view it in the browser.\nThe page will reload if you make edits.\nYou will also see any lint errors in the console.\nyarn test\nLaunches the test runner in the interactive watch mode.\nSee the section about running tests for more information.\nyarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed!\nSee the section about deployment for more information.\nyarn eject\nNote: this is a one-way operation. Once you eject, you can’t go back!\nIf you aren’t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\nYou don’t have to ever use eject. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\nLearn More\nYou can learn more in the Create React App documentation.\nTo learn React, check out the React documentation.\nCode Splitting\nThis section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting\nAnalyzing the Bundle Size\nThis section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size\nMaking a Progressive Web App\nThis section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nAdvanced Configuration\nThis section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration\nDeployment\nThis section has moved here: https://facebook.github.io/create-react-app/docs/deployment\nyarn build fails to minify\nThis section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify\n'], 'url_profile': 'https://github.com/Panikos', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AviralSharma1', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['5']], 'contributions': '122 contributions\n        in the last year', 'description': ['My-classification-and-regression-models\nUsing classification for predicting whether a person tests positive for diabetes.\nUsing regression models to estimate salary of an employee\n'], 'url_profile': 'https://github.com/shreyaspj20', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'Bangalore', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '112 contributions\n        in the last year', 'description': ['ML-basic-model\nA machine learning model to accurately classify whether or not the patients in the dataset have diabetes or not?\nCode contains\n\nMissing data handling\nData Preprocessing (with an explanation of why you are doing that particular step).\nExploratory Data Analysis\nFeatures Extraction\nModel building & Perfomance Evaluation\n\n'], 'url_profile': 'https://github.com/Dhvani-Katkoria', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}","{'location': 'Mumbai', 'stats_list': [['8', '          followers'], ['14', '          following'], ['7']], 'contributions': '63 contributions\n        in the last year', 'description': ['Healthcare-Capstone-\nProblem Statement NIDDK (National Institute of Diabetes and Digestive and Kidney Diseases) research creates knowledge about and treatments for the most chronic, costly, and consequential diseases. The dataset used in this project is originally from NIDDK. The objective is to predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Build a model to accurately predict whether the patients in the dataset have diabetes or not.\nProject Task: Week 1\nData Exploration:\n\nPerform descriptive analysis. Understand the variables and their corresponding values. On the columns below, a value of zero does not make sense and thus indicates missing value:\n\n• Glucose\n• BloodPressure\n• SkinThickness\n• Insulin\n• BMI\n\n\nVisually explore these variables using histograms. Treat the missing values accordingly.\n\n\nThere are integer and float data type variables in this dataset. Create a count (frequency) plot describing the data types and the count of variables.\n\n\nProject Task: Week 2\nData Exploration:\n\n\nCheck the balance of the data by plotting the count of outcomes by their value. Describe your findings and plan future course of action.\n\n\nCreate scatter charts between the pair of variables to understand the relationships. Describe your findings.\n\n\nPerform correlation analysis. Visually explore it using a heat map.\n\n\nProject Task: Week 3\nData Modeling:\n\n\nDevise strategies for model building. It is important to decide the right validation framework. Express your thought process.\n\n\nApply an appropriate classification algorithm to build a model. Compare various models with the results from KNN algorithm.\n\n\nProject Task: Week 4\nData Modeling:\n\nCreate a classification report by analyzing sensitivity, specificity, AUC (ROC curve), etc. Please be descriptive to explain what values of these parameter you have used.\n\nData Reporting:\n\nCreate a dashboard in tableau by choosing appropriate chart types and metrics useful for the business. The dashboard must entail the following:\n\na. Pie chart to describe the diabetic or non-diabetic population\nb. Scatter charts between relevant variables to analyze the relationships\nc. Histogram or frequency charts to analyze the distribution of the data\nd. Heatmap of correlation analysis among the relevant variables\ne. Create bins of these age values: 20-25, 25-30, 30-35, etc. Analyze different variables for these age brackets using a bubble chart.\n'], 'url_profile': 'https://github.com/AbirKhan96', 'info_list': ['HTML', 'MIT license', 'Updated Jun 18, 2020', 'MATLAB', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Jupyter Notebook', 'Updated Jul 20, 2020', 'Jupyter Notebook', 'Updated Jun 17, 2020', 'JavaScript', 'Updated Jun 21, 2020', 'Python', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 18, 2020', 'Python', 'Updated Jun 20, 2020', 'Jupyter Notebook', 'Updated Jun 16, 2020']}"
"{'location': 'Bengaluru', 'stats_list': [['4', '          followers'], ['1', '          following'], ['7']], 'contributions': '97 contributions\n        in the last year', 'description': ['Demo for deploying  diabetices-prediction-using-heroku\nBuilt an app for diabetices prediction and depolyed using heroku\n\nresource for flask\n\n[""https://towardsdatascience.com/productionize-a-machine-learning-model-with-flask-and-heroku-8201260503d2]\n\nlink for app using heroku\n\n[""https://diabeticesprediction.herokuapp.com/]\nsteps for deployment in Heroku\n\n1)Train the model using the past data\n\n2)create web app using flask\n\n3)commit the code in github\n\n4)create an account in the Heroku\n\n5)Link the github to heroku\n\n6)Deploye the model\n\n7)Web app is ready\n\n![](diabetes-predictor-web-app.gif)\n'], 'url_profile': 'https://github.com/saikiran1828', 'info_list': ['Jupyter Notebook', 'Updated Jun 15, 2020', 'Python', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bhakta001', 'info_list': ['Jupyter Notebook', 'Updated Jun 15, 2020', 'Python', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 20, 2020']}","{'location': 'vit vellore', 'stats_list': [['19', '          followers'], ['12', '          following'], ['18']], 'contributions': '679 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/subhrapaladhi', 'info_list': ['Jupyter Notebook', 'Updated Jun 15, 2020', 'Python', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['Blood-Balance-Advanced-Formula\nThe lack of dosage is a problem. Nutrition Hacks cites studies supporting the ingredients in Blood Balance Advanced Formula. However, these studies use different dosages than what’s used in the formula.Nutrition Hacks cites one study where people took white mulberry extract three times a day for four weeks, for example, and decreased fasting blood sugar levels by 27% compared to an 8% decrease using a diabetes drug. However, the dosage used in this study seems much larger than the dosage used in Blood Balance Advanced Formula.Click Here https://apnews.com/d680adc632091138ed9fd09659e15dc9\n'], 'url_profile': 'https://github.com/blodformula', 'info_list': ['Jupyter Notebook', 'Updated Jun 15, 2020', 'Python', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 20, 2020']}","{'location': 'Fortaleza - CE', 'stats_list': [['1', '          follower'], ['7', '          following'], ['0']], 'contributions': '16 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/jucielcm', 'info_list': ['Jupyter Notebook', 'Updated Jun 15, 2020', 'Python', 'Updated Jun 16, 2020', '1', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated Jun 20, 2020', 'Java', 'Updated Jun 20, 2020']}",,,,,
