"{'location': 'India', 'stats_list': [['5', '          followers'], ['8', '          following'], ['78']], 'contributions': '6,073 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nn this project we used different types of machine learning algorithm, and predicted that a person will be having diabetes in the future or not. And how much is it accurate given the responses that the person has diabetes.\nUsing the Decision Tree, the accuracy obtained is 87.1794% and Average precision-recall score obtained is 0.66\n'], 'url_profile': 'https://github.com/malhotrabhavyajot', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['diabetes_app\nA new Flutter project.\nGetting Started\nThis project is a starting point for a Flutter application.\nA few resources to get you started if this is your first Flutter project:\n\nLab: Write your first Flutter app\nCookbook: Useful Flutter samples\n\nFor help getting started with Flutter, view our\nonline documentation, which offers tutorials,\nsamples, guidance on mobile development, and a full API reference.\n'], 'url_profile': 'https://github.com/sergardli', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/dangnhh92', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rick28a', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'Jodhpur', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['Diabetes-prediction\n'], 'url_profile': 'https://github.com/pankaj-iitj', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'Charlottesville', 'stats_list': [['6', '          followers'], ['23', '          following'], ['18']], 'contributions': '47 contributions\n        in the last year', 'description': ['This repository contains scripts and supplemental data from ""Fine-mapping, trans-ancestral and genomic analyses identify causal variants, cells, genes and drug targets for type 1 diabetes"" (Robertson, Inshaw, et al 2020)\nPlease see the scripts directory for a detailed description of the analysis pipeline and subdirectories for code used to implement analyses.\nResults from fine-mapping T1D-associated ImmunoChip regions using the software GUESSFM are in the supplemental data directory. For easy access to the image files, we recommend cloning the repository to your local computer, which will allow you to open any image (.png) files with your preferred desktop image viewer.\nYou can do so by running the following command in your terminal:\ngit clone https://github.com/ccrobertson/t1d-immunochip-2020\n\n'], 'url_profile': 'https://github.com/ccrobertson', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '5 contributions\n        in the last year', 'description': ['Diabetes-Recommendation-System\n'], 'url_profile': 'https://github.com/priya17mishra', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '4 contributions\n        in the last year', 'description': [""my-first-project-of-linear-regression-\nLinear Regression on Diabetes Dataset\nImport some Libraries\nimport pandas as pd\nimport numpy as np\nimport csv\nimport pandas\nfrom sklearn import dataset\nLoad the Dataset\nfrom sklearn.datasets import load_diabetes\ndiabetes_data = load_diabetes()\ndf = pd.DataFrame(data=diabetes_data['data'], columns=diabetes_data['feature_names'])\ndf['target'] = diabetes_data['target']\nprint(df.shape)\nprint(df.head())\ndefining our x and y variables\nx= df.iloc[:,:-1].values\ny= df.iloc[:,-1].values\nm ,n = x.shape\nprint('x[0]={},y[0]={}'.format(x[0],y[0]))\n#Appending column of ones to make it for intercept term\nz= np.ones(m)\nz= z.reshape(m,1)\nx = np.append(z,x , axis =1)\nprint('x[0]={} ,y[0]={}'.format(x[0],y[0]))\nDeclaring values of Theta\nm,n = x.shape\ntheta = np.zeros(n)\ntheta = theta.reshape(n,1)\ny = y.reshape(-1,1)\n#computing the cost\ndef computeCost(x, y, theta):\ntemp = np.dot(x, theta) - y\nreturn np.sum(np.power(temp, 2)) / (2*m)\nJ = computeCost(x, y, theta)\nprint(J)\nFinding the optimal parameters using Gradient Descent\niterations = 50000\nalpha = 0.01\ndef gradientDescent(x, y, theta, alpha, iterations):\nfor _ in range(iterations):\ntemp = np.dot(x, theta) - y\ntemp = np.dot(x.T, temp)\ntheta = theta - (alpha / m) * temp\nreturn theta\ntheta = gradientDescent(x, y, theta, alpha, iterations)\nprint(theta)\nWe now have optimized values of Thetas (intercept and slope ). so we can find minimum cost\nJ = computeCost(x, y, theta)\nprint(J)\n""], 'url_profile': 'https://github.com/ujavaid123', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}","{'location': 'Hyderabad', 'stats_list': [['5', '          followers'], ['15', '          following'], ['2']], 'contributions': '104 contributions\n        in the last year', 'description': ['Diabetes  Prediction\nObjective\nOriginal dataset    :  https://archive.ics.uci.edu/ml/datasets/diabetes\nKaggle Competitions :  https://www.kaggle.com/uciml/pima-indians-diabetes-database\nOverview\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nTechniques Used\n\nData Cleaning\nData Visualization\nMachine Learning Modeling\n\nAlgortihms Used\n\nLogistic Regression\nKNN\nSupport Vector Machine\nNaivye Bayes\nRandom Forest Classifier\nDecision Tree\nXGboost\n\nAccuracy We got\n\nLogistic Regression\t\t: 77.92%\nKNN\t\t\t\t\t\t: 74.92%\nSupport Vector Machine\t: 78.57%\nNaivye Bayes\t\t\t\t: 77.27%\nRandom Forest Classifier\t: 80.52%\nDecision Tree\t\t\t: 79.22%\nXGboost\t\t\t\t\t: 75.32%\n\nScreenshot\n\nInstallation\n\n\nClone this repository and unzip it.\n\n\nAfter downloading, cd into the Deployment directory.\n\n\nBegin a new virtual environment with Python 3 and activate it.\n\n\nInstall the required packages using\npip install -r requirements.txt\n\n\nExecute the command:\npython manage.py runserver\n\n\nOpen http://127.0.0.1:8000/ in your browser.\n\n\nGuide Lines\nPackages and Tools Required:\nPandas \nMatplotlib\nSeaborn\nScikit Learn\nJupyter Notebook\nDjango\n\nPackage Installation\npip3 install -r requirements.txt\n\n'], 'url_profile': 'https://github.com/khushaljethava', 'info_list': ['4', 'Python', 'Updated Sep 8, 2020', 'Dart', 'Updated Apr 28, 2020', 'Updated Apr 22, 2020', 'Updated Apr 20, 2020', 'Python', 'Updated Apr 22, 2020', '1', 'R', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Apr 28, 2020', 'HTML', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'HTML', 'Updated Nov 18, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['Diabetes_Prediction using Random Forest Alogrithm\n'], 'url_profile': 'https://github.com/kaviarasanmani', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'San Francisco', 'stats_list': [], 'contributions': '31 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes is one of the deadliest and chronic diseases. About one in seven U.S.\nadults has diabetes now. By 2050, as many as one in three may become diabetic.\nMany complications occur if diabetes remains untreated and unidentified.\nIdentifying patients who are at high-risk of becoming diabetic allows early medical\ninterventions.\nIn this project we are -\n\nBuilding three types of models - Logistic Regression , Support Vetor Machines, Random Forest Classification and comparing their performance\nTuning the hyperparameters of random forest model using grid search\nGenerating insights on how should the patients be targeted\n\n'], 'url_profile': 'https://github.com/Swati2793', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['USA-mapping\nTo run this code, you only need the requirements listed in requirements.txt and you can install them by running pip install -r requirements.txt in your working directory. Running testing.py should plot the USA choropleth map.\nSource for diabetes data: US Diabetes Surveillance System; www.cdc.gov/diabetes/data; Division of Diabetes Translation - Centers for Disease Control and Prevention.\nSource for chloropleth help: https://plotly.com/python/choropleth-maps/\n\n'], 'url_profile': 'https://github.com/arielleisaacs', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'delhi', 'stats_list': [['0', '          followers'], ['2', '          following'], ['3']], 'contributions': '32 contributions\n        in the last year', 'description': ['diabetes_prediction\n'], 'url_profile': 'https://github.com/Aman7Rathore', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '52 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes prediction using K-means clustering + Logistic Regression on PIMA Indians Diabetes dataset.\n'], 'url_profile': 'https://github.com/annjc', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'Guatemala', 'stats_list': [['12', '          followers'], ['10', '          following'], ['1']], 'contributions': '173 contributions\n        in the last year', 'description': [""Diabetes AI\nDiagnosing diabetes mellitus based on patient's conditions with machine learning.\n\n\n\nDiabetes is a disease that occurs when your blood glucose is too high. Blood glucose is your main source of energy and comes from the food you eat. Insulin helps glucose, from food, get into your cells to be used for energy. Sometimes your body doesn’t make enough insulin or doesn’t use insulin well. Glucose then stays in your blood and doesn’t reach your cells.\nThus, a machine learning approach to diagnose diabetes mellitus was made. DD AI provides a friendly, yet profesional, user interface designed to aid health centers/clinics.\nInputs\n\n\n\nInput\nDescription\n\n\n\n\nPregnancies\nNumber of times pregnant\n\n\nGlucose\nPlasma glucose concentration in an oral glucose tolerance test\n\n\nBlood Pressure\nDiastolic blood pressure (mmHg)\n\n\nSkin Thickness\nTriceps skin fold thickness (mm)\n\n\nInsulin\n2-Hour serum insulin (mu U/ml)\n\n\nBMI\nBody mass index\n\n\nAge\nAge (years)\n\n\n\nAlgorithm\nBased on preliminary data analisis made with Klas, KNN (k=13) and SVM (Linear) machine learning algorithms were selected, as they demonstrated to fit best for the dataset. Aditionaly, an artificial neural network was trained. Based on these 3 models, DiabetesClassifier was created as an ensamble learning algorithm to predict whether a patient has diabetes.\nRequirements\n\npython 3.x\nNumpy\nPandas\nMatplotlib\nSklearn\nKeras\nTensorFlow\n\nUsage\npython3 diabetesAI.py\n\n""], 'url_profile': 'https://github.com/Lfquezada', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'New Delhi', 'stats_list': [['3', '          followers'], ['3', '          following'], ['0']], 'contributions': '285 contributions\n        in the last year', 'description': [""DIABETES-PREDICTION\nPrediction of diabetes - Type 2 (Mellitus)\nThis is a machine learning project based on the prediction of type 2 diabetes, with a given data. It uses logistic regression to classify the diabetic outcomes of each person's record.The diabetes is growing threat nowadays, one of the reasons being that there is no perfect cure for it. There are actually two types of diabetes, namely\nType 1\nType 2\nThe type 2 diabetes is commonly called diabetes mellitus. It can be defined as a chronic condition that affects the way the body processes blood sugar (glucose). We consider the mellitus here. After several researches we found that, some parameters are directly responsible for the mellitus to occur. By using the data of the people with diabetes and without diabetes, a dataset has been build. We use that dataset to classify the people who are in the risk of getting diabetes.\nThe dataset: Diabetes.csv\nAccuracy achieved: 75%+\n""], 'url_profile': 'https://github.com/vasu-the-sharma', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pchandu1310', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/amandawang-dev', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['8', '          following'], ['2']], 'contributions': '89 contributions\n        in the last year', 'description': ['Diabetes_Classification\nThis project is to trying predict patient who potentially get diabet, based on medical record\nthat they had.\nUsing Desicion tree Algorithm and Multi Layer Perceptron to perform this task, and compare that two algorithm who perform better\n'], 'url_profile': 'https://github.com/joshuapanjaitan', 'info_list': ['Jupyter Notebook', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated May 25, 2020', 'Python', 'Updated Apr 23, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Python', 'Updated Feb 16, 2021', 'Jupyter Notebook', 'Updated May 18, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', '1', 'Jupyter Notebook', 'Updated May 12, 2020', 'Updated Apr 22, 2020', 'Python', 'Updated Nov 19, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '52 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bernardo310', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'New York', 'stats_list': [['0', '          followers'], ['0', '          following'], ['8']], 'contributions': '309 contributions\n        in the last year', 'description': ['diabetes-readmission\nA project to examine readmission rates for diabetes patients in R.\nSubmitted in Fall 2019 for the course E6690: Statistical Learning in Bio & Information Systems.\n'], 'url_profile': 'https://github.com/mythrandire', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['20', '          following'], ['12']], 'contributions': '137 contributions\n        in the last year', 'description': ['Diabetes-Detection\nThe python notebook uses machine learning algorithms like Support Vector Classifier, Random Forest and\nXGBoost while using RandomizedSearchCV approach for finding the best set of parameters for the above ML models.\nAlso used Permutation importance to gain an insight on what features have the most influence in the prediction.\nUsed the eli5 library for using permutation importance.\nThe link to the dataset is : https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/CapedCrusader03', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['1']], 'contributions': '69 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/chadgavin', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '22 contributions\n        in the last year', 'description': ['Diabetes-Prediction-ML\nDiabetes Prediction model based on ML.\nDataset used Pima Diabetes dataset(downloaded from kaggle).\nThe model predicts if a person has diabetes or not based on various input parameters like Glucose,BMI.BP,etc.\nTHe classifier used is Random forest Classifier (Accuray-72 %)\nXboost gives a better accuray of(74%)\n'], 'url_profile': 'https://github.com/p-a-l-a-k29', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'Ahmedabad', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '53 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bhavesh51', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/RonaldSikwese', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'Noida', 'stats_list': [['4', '          followers'], ['4', '          following'], ['3']], 'contributions': '158 contributions\n        in the last year', 'description': ['Readmission-status-for-Diabetes\nStep1:Data is preprocessed for further analysis. You will find the data(cleaned_data.csv) after preprocessed.\n'], 'url_profile': 'https://github.com/umairnsr87', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '16 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes\nMachine Learning algorithms are well known in the medical field for predicting diseases. This study was conducted using three different ML algorithms including Logistic  regression, Decision Tree, and the Naïve Bayes to predict if a particular observation is at a risk of developing diabetes. Moreover, K-means clustering and data mining is used to discover the grouping structures inherent in data.\nThe following steps was performed on the dataset:\n\nData Preparation\nPredictive Modeling/Classification:\na. Classification using Decision Tree\nb. Classification using Naive Bayes\nc. Classification using Logistic Regression\nd. Comparing the results of the 3 techniques\nPost-prediction Analysis\na. Applying cluster analysis and association rule mining on the results of the classification to provide customized   recommendations to the organization for its customers.\nConclusions and Recommendations\n\nSoftware used: R and Weka\n'], 'url_profile': 'https://github.com/psoleymani', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}","{'location': 'Chennai', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '68 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Web-Interface\nThis is a diabetes prediction Web Interface based on PIMA diabetes dataset. The model has been trained several times on various ML algorithms like KNN, Random forests, and XGBclassifier. The Final prediction has been done on XGBclassifier because of better accuracy on training. The final model has been deployed to the web interface using Flask Framework and it is ready to use.\nHow to run in the local machine:\n\nclone the whole folder.\nDownload to the local machine.\nGo to terminal or PowerShell and change the directory to to the one where the app.py file is present.\nType the command: python app.py and press enter\nA local server url will be generated. Copy it, open browser, paste url and run.\n\nNote: Only run files with .py extensions supported by local server and flask.\n'], 'url_profile': 'https://github.com/rathoresubham99', 'info_list': ['Python', 'Updated May 9, 2020', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Jun 14, 2020', 'Python', 'Updated Oct 12, 2018', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 26, 2020', 'HTML', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated May 4, 2020', 'LGPL-3.0 license', 'Updated Apr 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Apr 24, 2020']}"
"{'location': 'Buea, Cameroon', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '388 contributions\n        in the last year', 'description': ['backend-diabetes-prediction\nBack End for School Project, Diabetes Prediction. Implemented using flask\nRead Me will be updated\n'], 'url_profile': 'https://github.com/cliffordten', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '64 contributions\n        in the last year', 'description': ['pima-indians-diabetes\nExploratory Data Analytics on the Pima India Diabetes Dataset with a trained model\n'], 'url_profile': 'https://github.com/imaginarycoder', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['7', '          following'], ['6']], 'contributions': '45 contributions\n        in the last year', 'description': ['Diabetes_Prediction-Pima-Indians-\n'], 'url_profile': 'https://github.com/parasharaditi', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '89 contributions\n        in the last year', 'description': ['diabetes_knn_R\nData source: https://www.kaggle.com/rahulsah06/machine-learning-for-diabetes-with-python\nObjectives: Apply K Nearest Neighbors method to predict wheter people have diabetes\nWhat did I do in this file?\nData Preprocessing\n\nDetect & deal with missing value\nNormalize data\nFind optimal k\n\nSeparate data into train and test\nFit data into model\nMeasure performance of model\n'], 'url_profile': 'https://github.com/yiling-huang', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'Mumbai, India', 'stats_list': [['23', '          followers'], ['50', '          following'], ['30']], 'contributions': '351 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Database\nMy first attempt to predict the onset of diabetes based on diagnostic measures. This is the dataset used.\nThis problem is broken down into two sections -\n1. Data Pre-processing\n\nHandling missing values\nAdding extra features\nDealing with outliers\n\n2. Model Building\nApply different Machine Learning algorithms to solve the classification problem.\n\nLogistic Regression\nRandom Forest Classifier\nXGBoost Classifier\n\nConclusion\nAccuracy of the three models -\n\nLogistic Regression = 0.801\nRandom Forest Classifier = 0.819\nXGBClassifier = 0.8108\n\nThis blog describes my approach to solve the problem.\n'], 'url_profile': 'https://github.com/devanshu125', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/supingling', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'Denmark', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '170 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bassexplorer', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'Mumbai, India', 'stats_list': [['23', '          followers'], ['50', '          following'], ['30']], 'contributions': '351 contributions\n        in the last year', 'description': ['pima-diabetes-predictor\nDeploying my model which was made from Pima Indians Diabetes Database on Kaggle.\nYou can check it out here.\n'], 'url_profile': 'https://github.com/devanshu125', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'Jaipur,Rajasthan', 'stats_list': [['3', '          followers'], ['6', '          following'], ['28']], 'contributions': '80 contributions\n        in the last year', 'description': ['diabetes_prediction_with_knn\n'], 'url_profile': 'https://github.com/shishir7654', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}","{'location': 'Australia', 'stats_list': [], 'contributions': '43 contributions\n        in the last year', 'description': ['Diabates_Analaysis\nCreated by Junwen Zheng\n'], 'url_profile': 'https://github.com/Junwen-Zheng', 'info_list': ['Python', 'Updated Jul 23, 2020', 'Jupyter Notebook', 'Updated Apr 20, 2020', 'Updated Apr 22, 2020', 'Updated Apr 24, 2020', 'Jupyter Notebook', 'Updated Apr 24, 2020', 'Updated Apr 21, 2020', 'HTML', 'Updated Aug 15, 2020', 'CSS', 'Updated Apr 26, 2020', '1', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020']}"
"{'location': 'Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '11 contributions\n        in the last year', 'description': ['diabetes_prediction_using_ensemble\nTo determine whether person is suffering with Diabetes or not  by using Ensemble techniques.\n\nTo download data use this link (https://www.kaggle.com/uciml/pima-indians-diabetes-database)\n\n'], 'url_profile': 'https://github.com/screddy1313', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'Denver, CO', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['Proposal: Diabetes Data Analysis\nPracticum II\nIntroduction: I want to dive into a dataset that allows me to explore some healthcare issues. I wanted to have one that gave the platform to analyze this issue in my home country, Ghana. My search did not yield the desired result. The dataset I settled on has significance to a growing concern in my home country and have close relatives who need to medicate and regulate this disease. My mother, father-in-law, sister in law have diabetes. My wife Gloria was placed on high alert during a pregnancy for gestational diabetes. Given that this disease hits close to home for me, I have chosen this as my project for practicum II.\nPurpose of project: Showcase skills in data manipulation and engineering, exploratory data analysis, visualizations and Machine leaning.\nThe problems to solve are:\n\nWhat factors are best for predicting that someone has diabetes?\nWhich machine learning tool is best for predicting the outcome?\n\nFinding a Dataset: My dataset is from Kaggle.com. “https://www.kaggle.com/rahulsah06/machine-learning-for-diabetes-with-python”\nDescription: The Diabetes is a dataset hosted on Kaggle primarily for learning machine leaning tools. The dataset contains 9 characteristics for 768 individuals the categories are:\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsulin\nBMI\nDiabetesPedigreeFunction\nAge\nOutcome\nAnalysis: To account for level of difficulty and creativity and showcase basic data science skills. I will do most of my analysis using Python.\nTimeline:\nWeek 1 - Choose project\nWeek 2 – Research and Data Preprocessing\nWeek 3 – Explore Data in Multiple Formats (EDA part 1): Data munging and engineering\nWeek 4 - Explore Data in Multiple Formats (EDA part 2): visualization\nWeek 5 – Understanding the disease research – gestational diabetes\nWeek 6 – Machine learning\nWeek 7 – GitHub, PowerPoint presentation\nWeek 8 – Finalize deliverables and Submit Results\nFuture Work\nAdditional ideas I would like to pursue are:\nExplore other Machine learning Models to see if there are others that may predict the outcome better\nThe effects, if any, of using different associated rand_interger ranges\nExplore using other SVM linear ""C"" and ""kennel"" parameters to test accurage or further optimize model\n\n'], 'url_profile': 'https://github.com/sylvesterbrown', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '93 contributions\n        in the last year', 'description': ['Diabetes-Monitoring-System-Python-user-interface\n'], 'url_profile': 'https://github.com/Safnaazsheikh', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '66 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nandan-pattanayak', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['2']], 'contributions': '69 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/RushikeshN19', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '22 contributions\n        in the last year', 'description': ['253Hullstein\nfinal project to analyze patient readmission data for diabetes\n'], 'url_profile': 'https://github.com/hlhull', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': '3514 Fiske Ter Silver Spring MD 20906', 'stats_list': [['115', '          followers'], ['232', '          following'], ['23']], 'contributions': '1,445 contributions\n        in the last year', 'description': [""utl-max-diabetes-and-hypertension-values-by-patient-dow\nMax diabetes and hypertension values by patient DOW\nMax diabetes and hypertension values by patient DOW\ngithub\nhttps://tinyurl.com/y87h8ofe\nhttps://github.com/rogerjdeangelis/utl-max-diabetes-and-hypertension-values-by-patient-dow\n\nSAS Forum\nhttps://tinyurl.com/y7q7wpj9\nhttps://communities.sas.com/t5/Statistical-Procedures/Long-to-wide-format/m-p/641808\n\n*_                   _\n(_)_ __  _ __  _   _| |_\n| | '_ \\| '_ \\| | | | __|\n| | | | | |_) | |_| | |_\n|_|_| |_| .__/ \\__,_|\\__|\n        |_|\n;\n\n data have;\n      input pt_id diabetes hypertension;\n      datalines;\n1 0 0\n1 1 0\n1 1 0\n1 0 1\n2 0 0\n2 0 0\n2 0 0\n2 0 0\n3 1 1\n3 0 1\n3 0 1\n;\nrun;\n\n\nUp to 40 obs from HAVE total obs=11\n\nObs    PT_ID    DIABETES    HYPERTENSION\n\n  1      1          0             0\n  2      1          1             0\n  3      1          1             0\n  4      1          0             0   For patient 1 max diabetes=1 and max hyoertension=0\n\n  5      2          0             0\n  6      2          0             0\n  7      2          0             0\n  8      2          0             0\n  9      3          1             1\n 10      3          0             1\n 11      3          0             1\n\n*            _               _\n  ___  _   _| |_ _ __  _   _| |_\n / _ \\| | | | __| '_ \\| | | | __|\n| (_) | |_| | |_| |_) | |_| | |_\n \\___/ \\__,_|\\__| .__/ \\__,_|\\__|\n                |_|\n;\n\nWORK.WANT total obs=3\n\nObs    PT_ID    _DIABETES    _HYPERTENSION\n\n 1       1          1              0\n 2       2          0              0\n 3       3          1              1\n\n*\n _ __  _ __ ___   ___ ___  ___ ___\n| '_ \\| '__/ _ \\ / __/ _ \\/ __/ __|\n| |_) | | | (_) | (_|  __/\\__ \\__ \\\n| .__/|_|  \\___/ \\___\\___||___/___/\n|_|\n;\n\ndata want;\n\n  do until (last.pt_id);\n     set have;\n     by pt_id;\n     _diabetes     = _diabetes     <> diabetes;\n     _hypertension = _hypertension< >h ypertension;\n  end;\n\n  output;\n  _diabetes=.; _hypertension=.;\n  keep _: pt_id;\n\nrun;quit;\n\n""], 'url_profile': 'https://github.com/rogerjdeangelis', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7,590 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/NumtraCG', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['MicroarrayAnalysis_Type2Diabetes_pancreaticBetaCells\n'], 'url_profile': 'https://github.com/laurapauner', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}","{'location': 'Wales, UK', 'stats_list': [['839', '          followers'], ['2', '          following'], ['57']], 'contributions': '2,457 contributions\n        in the last year', 'description': ['Ingreedy Data\nCode for preparing data for Ingreedy.\nInstallation:\npython3 -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n1. Turn food databases into CSV and JSON files\nMcCance and Widdowson\'s \'composition of foods integrated dataset\' (CoFID)\nDownload from https://www.gov.uk/government/publications/composition-of-foods-integrated-dataset-cofid.\nOpen in Libre Office then save the ""Proximates"" sheet as a CSV file in data/raw.\nThen run this to generate a CSV and JSON with just the food nutrient data we need:\npython build_db_mccance.py\necho -n ""const mccance = "" | cat - data/processed/mccance.json > data/processed/mccance_def.js\nprintf ""\\nmodule.exports = mccance\\n"" >> data/processed/mccance_def.js\nAustralian Food Composition Database\nDownload from https://www.foodstandards.gov.au/science/monitoringnutrients/afcd/Pages/default.aspx\nOpen in Libre Office then save the ""All solids & liquids per 100g"" sheet as a CSV file in data/raw.\nThen run this to generate a CSV and JSON with just the food nutrient data we need:\npython build_db_afcd.py\necho -n ""const afcd = "" | cat - data/processed/afcd.json > data/processed/afcd_def.js\nprintf ""\\nmodule.exports = afcd\\n"" >> data/processed/afcd_def.js\nUS FoodData Central\nDownload CSVs for SR Legacy from https://fdc.nal.usda.gov/download-datasets.html and save in data/raw.\nThen run this to generate a CSV and JSON with just the food nutrient data we need:\npython build_db_usfdc.py\necho -n ""const usfdc = "" | cat - data/processed/usfdc.json > data/processed/usfdc_def.js\nprintf ""\\nmodule.exports = usfdc\\n"" >> data/processed/usfdc_def.js\n2. Normalize NYT ingredient food names\n(Note: it would be better to do this in Javascript, so we are sure the normalization is identical.)\npython normalize_nyt_food_names.py\n3. Manually map food names to database food entries\nThis is done by going through each food name and assigning it to a food in the database.\nSee https://docs.google.com/spreadsheets/d/1wEZqp9394Bobxl4W8__99i2OcAxBt2pARnoG-3j0u8E/edit#gid=582435857\n4. Build the foodmap file\nDownload the ""foodmap"" sheet as a CSV file and save in data/processed\nmv ~/Downloads/""foodmap - foodmap.csv"" data/processed/\npython build_foodmap.py\necho -n ""const foods = "" | cat - data/processed/foodmap.json > data/processed/foodmap_def.js\nprintf ""\\nmodule.exports = foods\\n"" >> data/processed/foodmap_def.js\n5. Build the measures file\nDownload the ""measures"" sheet as a CSV file and save in data/processed\nmv ~/Downloads/""foodmap - measures.csv"" data/processed/\npython build_measures.py\necho -n ""const foodMeasures = "" | cat - data/processed/measures.json > data/processed/measures_def.js\nprintf ""\\nmodule.exports = foodMeasures\\n"" >> data/processed/measures_def.js\n6. Copy everything for use in Ingreedy\ncp data/processed/*_def.js ../ingreedy-js/src\n'], 'url_profile': 'https://github.com/tomwhite', 'info_list': ['Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated May 2, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Apr 22, 2020', 'Jupyter Notebook', 'Updated Apr 21, 2020', 'HTML', 'Updated May 6, 2020', 'SAS', 'MIT license', 'Updated Apr 23, 2020', 'Python', 'Updated Apr 22, 2020', 'HTML', 'Updated Apr 26, 2020', 'Python', 'Apache-2.0 license', 'Updated Jul 24, 2020']}"
"{'location': 'Ottawa', 'stats_list': [['2', '          followers'], ['4', '          following'], ['0']], 'contributions': '244 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/li000611', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '14 contributions\n        in the last year', 'description': ['This is my first, basic neural network. Started in January 2020.\nWebsite guide:\nhttps://machinelearningmastery.com/tutorial-first-neural-network-python-keras/\nSoftware configuration guide:\nhttps://machinelearningmastery.com/setup-python-environment-machine-learning-deep-learning-anaconda/\nInstalled in virtualenv:\npip install scipy numpy matplotlib pandas statsmodels sklearn pymc3 theano tensorflow-gpu==2.0 keras\nNote: using tensorflow 2.0.0 ($ pip install tensorflow-gpu==2.0), since 2.1 was giving lots of errors.\nNote: theano is giving me this warning (WARNING (theano.tensor.blas): Using NumPy C-API based implementation for BLAS functions.), so I installed pymc3 and mkl, but no luck. It seems to just make things slower, so I ignored it and everything works just fine.\nRun:\npython keras_first_network.py\n'], 'url_profile': 'https://github.com/Leotzu', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'India', 'stats_list': [['5', '          followers'], ['17', '          following'], ['3']], 'contributions': '779 contributions\n        in the last year', 'description': ['Building a risk score model for retinopathy in diabetes patients using logistic regression.\nSteps\n\nData preprocessing\n\nLog transformations\nStandardization\n\n\nBasic Risk Models\n\nLogistic Regression\nC-index\nInteractions Terms\n\n\n\nDiabetic Retinopathy\nRetinopathy is an eye condition that causes changes to the blood vessels in the part of the eye called the retina.\nThis often leads to vision changes or blindness.\nDiabetic patients are known to be at high risk for retinopathy.\nLogistic Regression\nLogistic regression is used for predicting the probability of a binary outcome. In our case, this would be the probability of having or not having diabetic retinopathy.\nWe see that the model is less confident in its prediction with the interaction term than without (the prediction value is lower when including the interaction term). With the interaction term, the model has adjusted for the fact that the effect of high cholesterol becomes less important for older patients compared to younger patients.\ncredits: coursera Ai in medicine course\n'], 'url_profile': 'https://github.com/kirankamatmgm', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '16 contributions\n        in the last year', 'description': ['Diabetes-prediction-using-ML-and-comparing-the-performace-on-different-algorithms\nUsing R\nComparing the accuracy of diabetes prediction on different machine learning algorithms.\n'], 'url_profile': 'https://github.com/Sivatharshen', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '59 contributions\n        in the last year', 'description': ['type2beat\n1  in every 6 Australian senior citizens age above 65 years suffers from diabetes and 90% percent of them have diabetes type 2. There are several factors that contribute to thrive diabetes type 2 but bad eating habits especially high sugar intake and less physical activities  are the major contributing factors.\n'], 'url_profile': 'https://github.com/princeDogra', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'New York, NY', 'stats_list': [['0', '          followers'], ['1', '          following'], ['8']], 'contributions': '214 contributions\n        in the last year', 'description': ['braf_implementation\nImplementation of the Biased Random Forest Machine Learning Algorithm in dealing with class imbalance on the Pima Dataset.\nRequirements:\n\nThe following python 3.7 modules are used in the execution of this file, non-standard library packages are bolded and version number is given:\n\npython 3.7\nsys\nos\ncollections\nmath\nrandom (1.1)\nmatplotlib (3.1.3)\nconcurrent\narpgarse\npandas (1.0.2)\nnumpy (1.18.1)\nscipy (1.4.1)\nseaborn (0.10)\nThe requirements.txt file contains the non-standard library python modules that need to be installed into the virtual environment.\n\nOne needs to have the Pima diabetes dataset in the same directory that the main file is present.\n\nLaunching the Program:\nEnter the following into the command line:\npython main.py -f diabetes.csv -K 10 -s 100 -p .7\nIf you desire to run the program with the optional arguments, the format is as followed:\npython main.py -f diabetes.csv -K 10 -s 100 -p .7 -imp random -stdev 3.5 -exp True\nInput:\nThere are two seven-supplied inputs to the program doc_parser.py:\n\n\n-f [file]: This string is the dataset that you wish to run the model on, in this case, should always be diabetes.csv which should be present in the same directory as main().\n\n\n-K [number of folds]: This is an integer number that specifies the number of folds you would like to divide your training data into for the purposes on K-fold cross validation.\n\n\n-s [forest size] – This integer is the parameter that sets the number of decision trees to generate while creating the random forest.\n\n\n-p [proportion of critically sampled data] – This float parameter tells that program what proportion of the training data to sample from the critical dataset for purposes of training the model in the braf algorithm.\n\n\n-imp [(Optional) imputation_method] – This string parameter tells that program the method you wish to use to impute values for missing data in the diabetes.csv dataset, the default is ‘random’ where a random number is assigned to the missing values in the dataset that are sampled from the gaussian distribution generated from the mean and std. deviation of the column that missing data is located in. Other valid arguments are ‘mean’, where the mean value of that column is imputed to all the missing values, and ‘median’, where the median value of that column is imputed onto the missing values.\n\n\n-stdev [(Optional) standard deviation to keep] – This float parameter tells the program how many standard deviations of each feature to keep in dealing with removal of outliers. Default is 3.5.\n\n\n-exp [(Optional) explore data] – This boolean value tells the program whether the user desires to view correlational charts and histograms related to the distributions and correlations of the features. Default is set to False.\n\n\nOutput:\n\n\nThere will be a list of precision and recall values from every run of the K-fold cross validation, precision and recall values from the test data, AUROC, AUPRC values printed to the console, and either seven .png files generated (if -exp is set to True), or four .png files generated (if -exp is not passed or set to False) in the working directory with the following titles.\n\n\nfeature_correlations.png – (Generated if -exp set to True) This file displays a correlational heatmap of every feature and the degree of correlation with every other feature.\n\n\nOutcome_1_histograms.png – (Generated if -exp set to True) This file displays the distributions of all features for which the outcome = 1 in the dataset.\n\n\nOutcome_0_histograms.png – (Generated if -exp set to True) This file displays the distributions of all features for which the outcome = 0 in the dataset.\n\n\nPRC_Training Data.png – This file displays the PRC curve, along with the AUPRC for the training data across all K-Folds of the K-Fold cross validation.\n\n\nROC_Training Data.png – This file displays the ROC curve, along with the AUROC for the training data across all K-folds of the K-fold cross validation.\n\n\nPRC_Testing Data.png - This file displays the PRC curve, along with the AUPRC for the testing data.\n\n\nROC_Testing Data.png – This file displays the ROC curve, along with the AUROC for the testing data.\n\n\n'], 'url_profile': 'https://github.com/utamhank1', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['What-are-the-advantages-of-Keto-Blaze-Xtreme-Diet-Pills-\nWhen you wear an outfit, one concern constantly revolves around your mind. ""Just how do you search in this outfit""? It in fact takes place for everyone since everyone wish for a fit and also slim body. But because of excessive weight, the majority of people enter into depression. Lots of people have numerous problems with their health. Actually, a lot of them are patients with diabetes mellitus issues. The factor behind all the above issue is weight problems just. Keto Blaze Xtreme Diet is so valuable https://www.marketwatch.com/press-release/keto-blaze-xtreme-reviews-price-where-to-buy-keto-blaze-extreme-2020-04-11\n'], 'url_profile': 'https://github.com/blasetreme', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}","{'location': 'vijayawada,india', 'stats_list': [['2', '          followers'], ['3', '          following'], ['0']], 'contributions': '94 contributions\n        in the last year', 'description': ['Nutrition Analysis Using Image Classification\nDescription :\nIn the current age, people are more conscious about their food and diet to avoid either upcoming or existing diseases.In order to properly assess dietary intake, accurate estimation of calorie value of food is of paramount importance.Due to the advances in various technologies used in smart phones, their computational power has also increased.They are capable of processing real-time multi-media information with their computational power. Since the present smart phones can handle the high-quality images too, research on food classification is focused on developing real-time applications which capture images and train the machine learning models instantly.It helps to take prevention to avoid diseases such as diabetes, blood pressure and so on.\nSolution :\nHere effort has been made to classify the images of food for further diet monitoring applications using convolution neural networks (CNNs). Since the CNNs are capable of handling a large amount of data and can estimate the features automatically, they have been utilised for the task of food classification. The standard Fruits dataset has been  selected as the working database for this approach. After the classification is done a Nutrition API is called to get the calorie count and protein content. A Web application is built and CNN model is deployed to use this application.\nTools : Python,Python Web Frame Works,CNN,MongoDB\n'], 'url_profile': 'https://github.com/Gouthamcric', 'info_list': ['Updated Apr 26, 2020', 'Python', 'Updated Apr 20, 2020', 'Jupyter Notebook', 'Updated Jun 4, 2020', 'R', 'MIT license', 'Updated Apr 23, 2020', 'JavaScript', 'Updated Jun 7, 2020', '1', 'Python', 'Updated May 13, 2020', 'Updated Apr 22, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020']}",,
