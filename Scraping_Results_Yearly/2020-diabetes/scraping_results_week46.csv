"{'location': 'Jakarta', 'stats_list': [['2', '          followers'], ['4', '          following'], ['1']], 'contributions': '278 contributions\n        in the last year', 'description': ['Program Diagnosa Diabetes\nKelompok 5\n\nMentari Ramadhana S - 41519120002\nM Ayub - 41518110106\nAgung Hallman - 41518110241\nArga Hutama - 41518110070\nAlfarel Rizqi I - 41518110205\nAditya pradana - 41518110158\nAndriansyah Kamahiza - 41518110082\nM Dzaki Hilmi - 41518110109\nMuhammad Sandi Pratama - 41518110113\nNofri Suharnada - 41518110108\nMuhammad Rizky - 41518110114\n\nInstall requirements\n$ pip install -r requirements.txt\nJalankan\n$ py app.py\n'], 'url_profile': 'https://github.com/alfarelrizky', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'Seoul', 'stats_list': [['3', '          followers'], ['5', '          following'], ['27']], 'contributions': '265 contributions\n        in the last year', 'description': ['Diabetes-Analysis\n21년 한국통신학회 동계 학술종합발표회 투고 논문(17E-54) ""XGBoost 기반 당뇨병 예측 알고리즘 연구:국민건강영양조사 2016~2018을 이용하여""의 Open Source Repository 입니다.(ISSN:2383-8302(Online) Vol.74)본 레포는 \'다양한 관점에서의 보건영양데이터\'를 주제로, 제7기 2018 국민 보건영양조사의 데이터를 이용했습니다.본 연구에서의 핵심 목표는 당뇨병 예측모델 개발 이며 본 Repository에서는 프로젝트의 아키텍쳐, 코드, 결과 그래프 등이 포함되어 있습니다.연구 전반의 기록과 과정을 노션 페이지에서도 확인할 수 있습니다.\nhttps://www.notion.so/hobbeskim/XGBoost-20-2-2740a0d75839481b8cbefa7cdab69466\nArchitecture\n\nModel Evaluation\n\n\nFiles Description\n\n./Data : 실제로 연구에 이용한 데이터 파일, 국민건강영양조사 데이터 가공\n./Data EDA : 데이터를 분석하고 시각화 한 과정의 자료가 존재\n./Data Processing : 모델 학습과 예측을 위해 전처리를 수행한 과정의 파일 존재\n./Etc : 기타 개발과정의 오류나 산출물 등\n./Results : 결과 그래프 원본 이미지\nFOLD_EVALUATION.ipynb : 가공된 데이터 -> 최종 결과 수행 시퀀스\n\n향후 도전과제\n\n시계열 추적 연구에 기반한 보다 사전적인 예측이 가능한 Data Set과 모델이 필요\n선별된 변수와 훈련된 모델로 사용자에게 입력을 받아 당뇨병 유병 여부, 확률 등을 예측하는 Web App 개발\n당뇨병의 유병 여부 및 사전 진단에 사용 가능한 생체 지표 발굴 중요성 시사\n\nKeyword\nML,XGBOOST, VIF, Corelation, diabetes, Classifier, 당뇨병 예측, 국민건강영양조사, 알고리즘\nAcknowledgement\n\n본 연구는 과학기술정보통신부 및 정보통신기획평가원의 대학ICT연구센터지원사업의 연구 결과로 수행되었음 (IITP-2021- 2020-0-01789)\n본 연구는 과학기술정보통신부 및 정보통신기획평가원의 SW중심대학지원사업의 연구결과로 수행되었음(2016-0-00017)\n\n'], 'url_profile': 'https://github.com/easthobb', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '166 contributions\n        in the last year', 'description': ['first-app \n'], 'url_profile': 'https://github.com/amirmbhd', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['6', '          following'], ['8']], 'contributions': '548 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/spiftire', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '35 contributions\n        in the last year', 'description': [""Early Detection of Diabetes Using Classification\nIntroduction\nThe dataset contains 520 observations of patients' age, gender, signs, symptoms, and diagnosis of diabetes. The aim of this project is to develop a model for early prediction of diabetes using the dataset. I will train the model using a random sample of 80% of observations from the dataset and validate the trained model using the other 20% of observations. I will use two classification methods, logistic regression and random forest, and evaluate both models using the receiver operating characteristic (ROC) curve.\nAttribute Information:\n\nAge: 16-90\nGender: Male, Female\nPolyuria: Yes, No\nPolydipsia: Yes, No\nSudden weight loss: Yes, No\nWeakness: Yes, No\nPolyphagia: Yes, No\nGenital thrush: Yes, No\nVisual blurring: Yes, No\nItching: Yes, No\nIrritability: Yes, No\nDelayed healing: Yes, No\nPartial paresis: Yes, No\nMuscle stiffness: Yes, No\nAlopecia: Yes, No\nObesity: Yes, No\nClass: Positive, Negative\n\nExploratory Data Analysis\n\n\n61.5% of total patients tested positive.\n38.5% of total patients tested negative.\n\n\n\nMost non-diabetic patients between their mid 30's and mid 50's do not have diabetes.\nMost diabetic patients between their late 30's and early 60's have diabetes.\nThe median age of diabetic patients is higher than that of non-diabetic patients.\n\n\n\nFemales have a significantly higher proportion of positive diagoses than that of males.\nThose who experienced polyuria, polydipsia, sudden weight loss, irritability, and partial paresis had a significantly high proportion of positive diagnoses.\nThose who experienced weakness, polyphagia, genital thrush, visual blurring, muscle stiffness, and obesity had a moderately high proportion of positive diagnoses.\n\nLogistic Regression\nThe logistic regression model will predict the probability of a patient developing diabetes, where Positive = 1, Negative = 0.\nThe dependent variable is denoted by y, and the independent variables are denoted by x.\nLogisic Response Function:\n\nThen,\n\nWe can also use the odds to rewrite the equation:\n\n\nThen the log odds or Logit function is:\n\nModel Summary:\n\n\n\n\nObservations\n\n\n423\n\n\n\n\nDependent variable\n\n\nclass\n\n\n\n\nType\n\n\nGeneralized linear model\n\n\n\n\nFamily\n\n\nbinomial\n\n\n\n\nLink\n\n\nlogit\n\n\n\n\n\n\n\n\nX²(5)\n\n\n415.94\n\n\n\n\nPseudo-R² (Cragg-Uhler)\n\n\n0.85\n\n\n\n\nPseudo-R² (McFadden)\n\n\n0.74\n\n\n\n\nAIC\n\n\n159.08\n\n\n\n\nBIC\n\n\n183.36\n\n\n\n\n\n\n\n\n\n\nEst.\n\n\nS.E.\n\n\nz val.\n\n\np\n\n\n\n\n\n\n(Intercept)\n\n\n2.12\n\n\n0.57\n\n\n3.72\n\n\n0.00\n\n\n\n\nGenderMale\n\n\n-4.76\n\n\n0.68\n\n\n-6.99\n\n\n0.00\n\n\n\n\nPolyuriaYes\n\n\n5.17\n\n\n0.73\n\n\n7.12\n\n\n0.00\n\n\n\n\nPolydipsiaYes\n\n\n5.32\n\n\n0.82\n\n\n6.51\n\n\n0.00\n\n\n\n\nItchingYes\n\n\n-3.15\n\n\n0.63\n\n\n-5.01\n\n\n0.00\n\n\n\n\nIrritabilityYes\n\n\n2.01\n\n\n0.55\n\n\n3.66\n\n\n0.00\n\n\n\n\n\n\n Standard errors: MLE\n\n\n\n\n\nGender, Polyuria, Polydipsia, Itching, and Irritability are very significant.\nPolydipsia, Polyruia, and Gender are important variables in predicting diabetes.\n\nOdds Ratio Plot With 95% Confidence Interval\n\n\nThose who experienced polyuria or polydipsia were much more likely to have diabetes than those who did not experience these symptoms.\xa0\n\nConfusion Matrix\nWe visualize the performance of our model using a confusion matrix. The selected threshold is 0.5.\xa0\n\nIf Prediction <= 0.5, then it will be Class 0 (Negative).\nIf Prediction > 0.5, then it will be Class 1 (Positive).\n\n\n\nAccuracy = 87.6%\nMisclassification rate = 12.4%\n92.1% of all non-diabetic patients were correctly classified.\n84.7% of all diabetic patients were correctly classified.\n\nROC Curve\nNext, we look at the ROC curve, which summarizes the confusion matrices that each threshold produces. The y-axis shows the True Positive Rate (Sensitivity) and the x-axis shows the False Positive Rate (1-Specificity).\n\n\nThe area under the ROC curve measures the performance across all thresholds. A high AUC indicates that the model accurately distinguishes between diabetic and non-diabetic patients.\n\n\nThe area under the curve is high (0.946), indicating high accuracy.\nThere is a trade-off for changing the threshold:\n\nIncreasing the threshold would decrease the true positive rate and decrease the false positive rate.\nDecreasing the threshold would increase the true positive rate and increase the false positive rate.\n\n\n\nRandom Forest\nThe random forest algorithm creates a forest with a collection of decision trees, where in each decision tree a random subset of features is chosen at each split and a random sample of training data is used. Then, each tree casts a vote for a prediction, and the algorithm chooses the classification with the most votes.\nBelow is a plot of one tree:\n\nIt works like this:\nStarting at node 1, if a patient has polyuria, we go to node 2. Next, if a patient has polydipsia, we go to node 8, the decision node, which shows the probabilities of the response variable.\nIn the decision node, a decision is made based on a sample of 164 patients who have been in that situation. The dark rectangle shows the probability of the patient having a positive diagnosis. We see that the probability is about 1, or about 100% chance that the patient has diabetes, so this tree predicts that the patient has diabetes.\nModel Summary\nHere are the results of 500 trees and 4 variables at each split:\n## Type of random forest: classification\n## Number of trees: 500\n## No. of variables tried at each split: 4\n## \n##         OOB estimate of  error rate: 2.6%\n## Confusion matrix:\n##          Negative Positive class.error\n## Negative      156        6  0.03703704\n## Positive        5      256  0.01915709\n\n\nOut of bag error rate is 2.6%, which is low (about 97.4% accuracy).\nPredictions for Negative and Positive are both good.\nErrors for positive predictions are slightly lower than that of negative predictions.\n\n3.7% of the true negative cases were falsely classified as positives.\n1.9% of the true positive cases were falsely classified as negatives.\n\n\n\nHyperparameter Tuning\nThe training data with 500 trees gives the following error plot of Out of Bag (black), Negative (red), and Positive (green):\n\n\nThe error rates decrease as the number of trees increase and stabilizes at around 200 trees.\n\nOOB Error vs mtry\n\n\nOOB error is lowest at mtry = 4, or 4 variables at each split.\n\nHere are the results of 200 trees and 4 variables at each split:\n## Type of random forest: classification\n## Number of trees: 200\n## No. of variables tried at each split: 4\n## \n##         OOB estimate of  error rate: 2.36%\n## Confusion matrix:\n##          Negative Positive class.error\n## Negative      156        6  0.03703704\n## Positive        4      257  0.01532567\n\n\nThe OOB error rate decreased from 2.6% to 2.36%.\nThe error of positive class decreased slightly.\n\nConfusion Matrix\n\n\nAccuracy = 96.9%\nMisclassification rate = 3.1%\n97.4% of all non-diabetic patients were correctly classified.\n96.6% of all diabetic patients were correctly classified.\n\nVariable Importance\nWe use the variable importance plot to see which variables are important. The plots show the average decrease in accuracy and gini impurity (the probability of misclassification) if the variable was removed from the model. A higher mean decrease in accuracy and Gini impurity suggests that the variable is more important.\n\n\nPolyuria, gender, and polydipsia have high contributions to accuracy.\nPolyuria and polydipsia have high contributions to Gini impurity\nMuscle stiffness, genital thrush, obesity, and weakness have very little contributions to accuracy and Gini impurity.\n\nROC Curve\nThe ROC of random forest with 200 trees and 4 variables at each split is plotted:\n\n\nThe area under the ROC curve is very high (0.997), indicating almost perfect accuracy.\n\nDiscussion\nA brief summary of both models:\nLogistic Regression\n\nAccuracy: 87.6%\nSensitivity: 84.7%\nSpecificity: 92.1%\nAUC: 0.946\n\nRandom Forest\n\nAccuracy: 96.9%\nSensitivity: 96.6%\nSpecificity: 97.4%\nAUC: 0.9973\n\nIn the end, I was able to predict both positive and negative cases with good accuracy using logistic regression and random forest. In addition, both models identified polyuria, polydipsia, and gender as powerful predictors. However, the random forest model has higher accuracy, sensitivity, specificity, and area under the ROC curve than those of the logisitic regression model. Thus, the random forest model appears to outperform the logistic regression model.\nSome advantages of logistic regression is that it is computationally efficient, easy to train, and results are easy to interpret. Disadvantages are that it requires the assumption of linearity between the predictors and the log odds of the response variable, and there are more steps to data preparation, such as handling missing values.\nSome advantages of random forest are that it can solve both regression and classification problems, and can detect linear and nonlinear relationships. In addition, it can handle missing values well and parameters can be tuned to alter model performance. Disadvantages of random forest are that it is difficult to interpret, and it is memory-intensive for very large data, which can take the model longer to train and make predictions.\n""], 'url_profile': 'https://github.com/hucindy', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'Northern Virginia', 'stats_list': [['5', '          followers'], ['9', '          following'], ['4']], 'contributions': '169 contributions\n        in the last year', 'description': ['FinalProject\nFinal Project for DS 4001\n'], 'url_profile': 'https://github.com/jasminedogu', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['8', '          following'], ['61']], 'contributions': '165 contributions\n        in the last year', 'description': ['DiabetesTracker\n'], 'url_profile': 'https://github.com/joelvg92', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '14 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Yeo-injun', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '22 contributions\n        in the last year', 'description': ['DiabetesPrediction_KNN\n'], 'url_profile': 'https://github.com/gnr-sreekar', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['8', '          following'], ['61']], 'contributions': '165 contributions\n        in the last year', 'description': ['Diabetes tracker UI application.\n'], 'url_profile': 'https://github.com/joelvg92', 'info_list': ['Python', 'Updated Dec 4, 2020', '6', 'Jupyter Notebook', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Dec 21, 2020', 'HTML', 'Updated Nov 9, 2020', 'R', 'Updated Nov 14, 2020', 'HTML', 'GPL-3.0 license', 'Updated Dec 22, 2020', 'Java', 'Updated Feb 9, 2021', 'Python', 'Updated Nov 22, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'HTML', 'Updated Feb 9, 2021']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '57 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/BartoszOciepka', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '370 contributions\n        in the last year', 'description': [""Diabeties Detection using HRV\nby Pulasthi Ekanayake\nPreprocessing D1NAMO dataset\n\nDownload the dataset from https://zenodo.org/record/1421616/files/D1NAMO.tgz\nExtract the dataset\nLoop through the dataset and find the files ending with “ECG.csv” which contain the ECG data for all subjects. Important! – Each subject has 4 separate ECG recordings. Due to the lack of data each recording was treated as a different subject.\nFor each ECG recording extract 1 min of data starting from the 15th minute ( to allow time for stabilization). From this data, the following parameters were calculated.\nStandard deviation of all NN intervals (SDNN) in seconds,\nSquare root of the mean of the sum of the squares of differences between adjacent NN interval (RMSSD) in milliseconds (ms),\nNumber of adjacent NN intervals differing more than 50 ms. (NN50 count),\nPercentage of difference between adjacent NN intervals differing more than 50 ms. (pNN50%),\nIntegral of sample density distribution of RR intervals divided by the maximum of the density distribution (R- R triangular index)\nBaseline width of the minimum square difference triangular interpolation of the maximum of the sample density distribution of NN intervals in seconds (TINN)\nMean R-R interval in seconds\nMean heart rate\nStandard deviation (STD) of the mean heart rate (per minute)\nThese parameters were used by Ahamed Seyd, P.T; Paul K. Joseph & Jeevamma Jacob in their paper “Automated Diagnosis of Diabetes Using Heart Rate Variability Signals”\nThe processed data was saved to a csv file named “processed_data.csv”. This file contains the columns: 'filename', 'SDNN', 'RMSSD', 'nn_50', 'pNN_50', 'meanHR', 'SDHR', meanRR', 'TINN', 'HRVTriIndex'\n\nProcessing SWELL Dataset\nThe model trained from the D1NAMO dataset had insufficient accuracy (~65%) therefore the SWELL dataset was used. SWELL dataset contains various Heart rate variability parameters which are used for detecting stress.\nOut of the 36 different parameters, the 9 parameters were considered. These were chosen to be similar to the ones used in the D1NAMO model. SDNN, RMSSD, pNN_50, meanHR, mean_RR, MEDIAN_RR , LF, HF, HF_LF was chosen. The parameters MEDIAN_RR, LF , HF , HF_LF was chosen instead of nn_50, SDHR, TINN, HRVIndex, And as raw ECG was not included in the dataset the required parameters could not be calculated.\nThe data was labelled as “no stress”, “time pressure” and “interruption”. These were relabelled as “diabetic”(time pressure, interruption) and “healthy”(no stress). The SWELL dataset contained two files train.csv and test.csv these files were processed and was saved as “swell_training_data.csv” and “swell_testing_data.csv” respectively.\nTechnologies\n• Tensorflow 2.20 and Keras was used for model creation\n• Pandas , numpy libraries were used for data manipulation\n• Jupyter lab with Python 3.8 kernel was used for programming.\nTraining Process\n\nRemove rows containing NAN values from the dataset\nNormalize the data and binary encode the labels as healthy – 1, diabetic – 0\nTrain the neural network for 20 epochs.\nExport the model as diabetesHRV.h5\n\nThe neural network architecture used in the “Automated Diagnosis of Diabetes Using Heart Rate Variability Signals” was used with minor modifications.\n\nAdam optimiser was used instead of backward propagation with momentum.\nRELU activation function was used instead of sigmoid for the hidden layer\nBinary cross entropy loss function was used\n\nModel Evaluation\n\nLoad the model “diabetesHRV.h5”\nRead the test data in swell_testing_data.csv to a pandas dataframe\nNormalize the data and encode labels. Normalizing is done using statistical parameters of the training dataset (model_stats.csv)\nUse model.evaluate function to obtain accuracy.\n\n""], 'url_profile': 'https://github.com/pulasthieka', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['Diabetes_prediction\nDiabetes_Prediction with KNN\n'], 'url_profile': 'https://github.com/Manikanta5815', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['5', '          following'], ['7']], 'contributions': '26 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/aastha628', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'Italy', 'stats_list': [], 'contributions': '32 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/antoniofurioso', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'Harrisburg, PA', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/Tolani07', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['5']], 'contributions': '65 contributions\n        in the last year', 'description': ['Diabetespred_19\nA Simple Machine Learning App that predicts whether the person is diabetic or not, based on Pima Indians Diabetes Dataset given on kaggle\nDiabetes Prediction\n• This repository consists of files required to deploy a Machine Learning Web App created with Django on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at: https://diabetespred19.herokuapp.com/\n• Please do ⭐ the repository, if it helped you in anyway\n'], 'url_profile': 'https://github.com/dhruven-god', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['20', '          followers'], ['58', '          following'], ['8']], 'contributions': '841 contributions\n        in the last year', 'description': [""Diabetes_predict\nNeste Projeto são utilizados todos os módulos apresentados durante o bootcamp de desenvolvedor Python do IGTI. Módulos como o scikit-learn, pandas, numpy e flask são empregados para realizar o “deploy” de um modelo de machine learning. O deploy de um modelo consiste em colocá-lo “em produção”. Desse modo é possível que diferentes usuários possam interagir com a aplicação através do envio de dados e recebimento de informação. Para a solução deste desafio, você deve construir e treinar um modelo de aprendizado de máquina que consiga prever se um determinado indivíduo desenvolverá ou não diabetes. Após os ajustes necessários, você deve construir uma interface, utilizando o flask, que possibilite ao usuário introduzir os dados necessários para que o modelo possa indicar se as características fornecidas sugerem ou não o desenvolvimento de um quadro de diabetes.\nLocalização do Deploy\n\nhttps://diabetespredictravellys.herokuapp.com/\n\n🗃 Histórico de lançamentos\n\n11/14/2020 Criação do Projeto\n\n📋 Meta\nLucas Ravelllys – Portifólio\nDistribuído sob a licença MIT. Veja LICENSE para mais informações.\n🚀 Contribuições\n\nFaça o fork do projeto (https://github.com/ravellys/crud-cliente/fork)\nCrie uma branch para sua modificação (git checkout -b feature/fooBar)\nFaça o commit (git commit -am 'Add some fooBar')\nPush (git push origin feature/fooBar)\nCrie um novo Pull Request\n\n""], 'url_profile': 'https://github.com/ravellys', 'info_list': ['C#', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020', '2', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Updated Nov 9, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 12, 2020', 'JavaScript', 'Updated Nov 15, 2020']}"
"{'location': 'Seattle, Washington', 'stats_list': [['14', '          followers'], ['5', '          following'], ['4']], 'contributions': '108 contributions\n        in the last year', 'description': ['R code for analyzing AACT/clinicaltrials.gov database for diabetes related trials""\nThis is the R code to parse ClinicalTrials.gov data compiled by AACT. Running the file ""diabetesTrials_automated.RR"" will reproduce the figures and perform the statistics.\nThe source directory/working directory should be set to wherever this R file is saved.\nBefore running the ""diabetesTrials_automated.RR"" script, an individual must make an account with the\nAACT website via the following link.\nhttps://aact.ctti-clinicaltrials.org/users/sign_up\nWithin the R script ""diabetesTrials_automated.RR"" are several variables that should be set before running the script.\nsavePlot - this variable is boolean (TRUE/FALSE), and determines whether the plots generated will be saved in the working directory.\nsaveData - this variable is boolean (TRUE/FALSE), and determines whether the data generated will be saved in the working directory.\nuserAACT - this variable needs to be set as a string to whatever user name the user has setup with the above link. e.g. ""user_name"".\npasswordAACT - this variable needs to be set as a string to whatever password the user has setup with the above link. e.g. ""user_name"".\n\nR Packages required for running this analysis.\ntidyr\nRPostgreSQL\ndplyr\nplyr\nstringr\nlubridate\nggplot2\nggsci\ngridExtra\ncowplot\nhere\nemmeans\nsjPlot\ncoin\nnnet\nstargazer\neasyPubMed\nInstall with install.packges(\'packageName\')\n\nBSD-3 License\nDavid Caldwell, on behalf of the coauthors\n'], 'url_profile': 'https://github.com/davidjuliancaldwell', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'Bangalore', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '76 contributions\n        in the last year', 'description': [""\nlogin\t\t[Username, password]\nlogout\nregister \t\t[use same fields but table should be name as (admin)]\nedit profile \t[update the admin table]\n'Diabetes' \t- \t[view all records in tabular form (table_csv) 'update' operation can perform]\n'Users' \t-\t[view all user profiles and edit/delete operation can perform]\n'patients Record' \t[view all record how many patients have been saved their data - can see who is diabetic and who is safe]\n\nif not running then use:\nStep1: pip3 install -r requirements.txt\nstep2: python3 Driver.py migrate\nstep3: streamlit run Driver.py\nif any attribute error: use this command; pip3 install --upgrade protobuf\nif getting any Nomodule error use this command; pip3 install -U scikit-learn scipy matplotlib\n""], 'url_profile': 'https://github.com/ethicalabhi', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'Ireland', 'stats_list': [['3', '          followers'], ['7', '          following'], ['7']], 'contributions': '124 contributions\n        in the last year', 'description': ['Diabetes_prediction\nDeveloped a machine learning model to predict diabetes taking into account essential features using Pyspark.\n'], 'url_profile': 'https://github.com/Vishalbhat10', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'Bandung', 'stats_list': [['7', '          followers'], ['7', '          following'], ['6']], 'contributions': '135 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mayathidup88', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'Guwahati, Assam', 'stats_list': [['2', '          followers'], ['4', '          following'], ['3']], 'contributions': '80 contributions\n        in the last year', 'description': ['diabetes_prediction\nThis project is created to predict whether a person has diabetes or not.\n'], 'url_profile': 'https://github.com/porky5191', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'India, Maharashtra', 'stats_list': [], 'contributions': '56 contributions\n        in the last year', 'description': [""Diabetes Predictor\nOverview\nWebApp made using Flask API deployed on Heroku cloud platform. The Dataset taken for this task is from Kaggle's Diabetes dataset which got certain parameters on basis of which one can be able to decide if patient is diabetic or not.\nMotivation\nCreating user friendly UI with which users can easily interact and can see whether they are diabetes patient or not. This deployed project can further be taken to large scale and can be bought in production with more enhancements and advancements. The following project can be considered as the beta or sample version of Diabetes Predictor.\nDemo\n\nLink: https://diab-prediction.herokuapp.com/\nDataset: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n\nScreenshots\n\nInstallation\nWhile making this project I used python 3.7. If you are using any lower variant of python then I recommend you to upgrade your python to the latest version by using pip. Once you clone this repository just type this command in the cloned project directory in order to install all the required packages:\npip install -r requirements.txt\n\nTo Run the Project\nOnce you clone the directory and install all the requirements, simply open terminal in the folder where your project is saved and run the following command:\npython app.py\n\nTechnologies and Frameworks used\n\nMade with  ♥️  in India 🇮🇳\n""], 'url_profile': 'https://github.com/TStud', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['12', '          following'], ['1']], 'contributions': '64 contributions\n        in the last year', 'description': ['Pima-Diabetes\nThis project uses Logistic Regression to diagnostically predict whether or not a patient has diabetes,\nbased on certain diagnostic measurements included in the dataset.\nSeveral constraints were placed on the selection of these instances from a larger database.\nAll patients here are females at least 21 years old of Pima Indian heritage.\nThe dataset is originally from the National Institute of Diabetes and Digestive and Kidney  Diseases.\n'], 'url_profile': 'https://github.com/chrpkorir', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['1', '          following'], ['2']], 'contributions': '133 contributions\n        in the last year', 'description': ['Diabetes_Project\n'], 'url_profile': 'https://github.com/PandeKalyani95', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': ['Diabetes Prediction\npredicts whether a person has diabetes or not\n'], 'url_profile': 'https://github.com/SnehithReddy04', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['R', 'Updated Jan 12, 2021', 'Python', 'Updated Feb 2, 2021', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 16, 2020', 'Jupyter Notebook', 'Updated Nov 17, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'MATLAB', 'Updated Nov 10, 2020', 'Updated Nov 23, 2020']}"
"{'location': 'NONE', 'stats_list': [['5', '          followers'], ['5', '          following'], ['3']], 'contributions': '177 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shivanijain1', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'Bangalore', 'stats_list': [['20', '          followers'], ['5', '          following'], ['0']], 'contributions': '47 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/student-shriman', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['diabetes-chatbot\nThis is an example project that can be used as a starting point to create your own Vaadin application with Spring Boot.\nIt contains all the necessary configuration and some placeholder files to get you started.\nThe project is a standard Maven project, so you can import it to your IDE of choice. Read more how to set up a development environment for Vaadin projects (Windows, Linux, macOS).\nThis project was created from https://start.vaadin.com.\nRunning the Application\nThere are two ways to run the application:\n\nTo run from the command line, use mvn and open http://localhost:8080 in your browser.\nAnother way is to to run the Application class directly from your IDE.\n\nIntellij IDEA\n\nOn the right side of the window, select Maven --> Plugins--> spring-boot --> spring-boot:run goal\nOptionally, you can disable tests by clicking on a Skip Tests mode blue button.\n\nClicking on the green run button will start the application.\nAfter the application has started, you can view your it at http://localhost:8080/ in your browser.\nEclipse\n\nRight click on a project folder and select Run As --> Maven build.. . After that a configuration window is opened.\nIn the window set the value of the Goals field to spring-boot:run\nYou can optionally select Skip tests checkbox\nAll the other settings can be left to default\n\nOnce configurations are set clicking Run will start the application\nProject structure\n\nMainView.java in src/main/java contains the navigation setup. It uses App Layout.\nviews package in src/main/java contains the server-side Java views of your application.\nviews folder in frontend/src/ contains the client-side JavaScript views of your application.\n\nWhat next?\nvaadin.com has lots of material to help you get you started:\n\nFollow the tutorials in vaadin.com/tutorials. Especially vaadin.com/tutorials/getting-started-with-flow is good for getting a grasp of the basic Vaadin concepts.\nRead the documentation in vaadin.com/docs.\nFor a bigger Vaadin application example, check out the Full Stack App starter from vaadin.com/start.\n\n'], 'url_profile': 'https://github.com/domagojbozic', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'Banglore, India', 'stats_list': [], 'contributions': '42 contributions\n        in the last year', 'description': ['FEATURE EXTRACTION FOR HYPOGLYCEMIC EVENTS DETECTION BASED ON ECG USING TRANSFER LEARNING\nHypoglycemia is a condition that occurs when sugar levels in the blood are low. The blood glucose level is considered low when it drops below 3.3mmol / L [1]. Hypoglycemia affects the electrophysiology of the heart. Hence, monitoring blood glucose levels is vital for healthy subjects and crucial for patients suffering from diabetes. The current study used Artificial Intelligence (AI) to extract high-level features from raw electrocardiogram (ECG) signals to automatically detect hypoglycemic events\nINTRODUCTION\nHypoglycemia is one of the most important complications of diabetes treatment [2]. The pervasiveness of diabetes has reached high proportions in most parts of the world. According to the World Health Organization (WHO), nearly 220 million people are diagnosed with diabetes. Epidemiologic evidence insinuates that unless preventive measures are carried out, the global prevalence will continue to shoot [3]. Various glucose monitoring systems are available in the market to measure blood glucose concentration. However, such systems have many drawbacks in terms of functionality and reliability. A study has been conducted to detect hypoglycemia by monitoring changes in ECG and skin conductance using sensors [4]. A robust real-time monitoring system utilizing Continuous Glucose Monitoring Devices (CGMs) was developed in paper [5]. However, the system was not developed commercially due to low efficiency and lack of sensitivity in the detection of unrecognized hypoglycemia. The main drawback of many methods that utilize deep learning is the lack of data available.\nRecent performances achieved by deep learning models in pattern recognition tasks have motivated researchers to implement techniques such as transfer learning in medical image and signal processing to overcome the problem of inadequate data. In this regard, deep learning models have produced accurate results in the ECG domain using Recurrent Neural Networks (RNN), specifically Long Short Term Memory Networks (LSTM) [6] and Convolutional Neural Network (CNN)  [7]. The main advantage of using deep learning is the fact that deep neural networks can identify high-level features, therefore eliminating the need to extract features manually. Utilizing this merit helps us develop robust systems that can take ECG signals as input and output glucose levels for the detection of hypoglycemia.\nIn paper [8], it was shown that a personalized medicinal approach and AI could be used to detect nocturnal hypoglycemia using a few heartbeats of raw ECG signal recorded using wearable devices for 14 consecutive days. Additionally, the paper presents a visualization technique to identify which part of the ECG signal is associated with hypoglycemia events.\nThe study proposed in this paper aims at developing a method to extracts high-level features from ECG excerpts for the automatic detection of low levels of glucose in practical settings. To the best of the author’s knowledge, the proposed study is a novel approach providing reliable results and overcoming the limitations of the lack of data available by incorporating transfer learning from the 2-dimensional domain. The image classification and object detection domains consist of immense amounts of data in contrast to the ECG signal domain when the amount of data available are significantly small. These domains contain enough data to train and classify images and find high-level feature maps that can represent complex image patterns. The features that are learnt from such classifiers can be transferred to the ECG domain if the 1-D ECG signal is transformed into a 2-D spectrogram [9].\nBACKGROUND\nThe challenge of Hypoglycemia detection\nThe most prevalent method for glucose level detection in the blood is consist of analyzing blood droplets resulted from a finger prick. However, this method does not monitor glucose levels continuously. Moreover, this method is cumbersome, expensive, and inaccurate. As an alternative, CGMs are used to monitor glucose levels continuously based on glucose in the interstitial fluid. While these devices provide relatively accurate results, they are highly expensive and unattractive for pre-diabetic patients. Moreover, most CGMs require finger prick calibration, which is not very reliable.\nThe details that need to be analyzed in an ECG signal are fine-grained and identical; therefore, have patterns that are hard to detect. This problem could be solved with the availability of large datasets. However, the datasets existing in the ECG domain contain a small amount of data. When a small amount of data is used for training, the model is susceptible to overfitting and may fail to generalize and detect patterns in unseen data.\nTherefore, the amount of data available, validation accuracy and reliability of hypoglycemic events on unseen data propose a challenge in training a deep neural network. However, for the same reasons, we incorporate a technique known as “Transfer Learning” and “Off-the-Shelf CNN Features” for accurate detection of hypoglycemia on previously unseen data.\nTransfer Learning\nKnowledge learnt from a pattern in one domain is transferable to another domain. The Transfer learning technique enables us to transfer this knowledge from one domain to another and used in the latter domain for classification. A deep CNN is used for automatic feature extraction. The layers inside the network consist of feature maps that are learnt during the training on the original dataset. Moreover, these feature maps hold information regarding the patterns in that dataset. These feature maps can be used to extract feature in another dataset. These off-the-shelf features are strong enough to extract features in another domain [10].\nIn this study, we incorporate a Deep Neural Network, DenseNet that learn from millions of images via the ImageNet dataset. The knowledge learnt from this large dataset is transferred to the ECG domain and is used for feature extraction. Consequently, these high-level features can be used to detect hypoglycemic events.\nDenseNet\nA DenseNet is a deep feed-forward neural network in which each layer is connected to every other layer [11]. This type of model architecture helps reduce the problem of vanishing-gradient. The state-of-the-art DenseNet model performs highly accurate object detection tasks. The DenseNet consists of 4 dense blocks of variable length. In our study, we incorporate a pre-trained DenseNet which has 161 convolutional layers and analyze the output of these layers for feature extraction.\nMETHODOLOGY\nMethod Overview\nTo detect hypoglycemic events using ECG excerpts, we first cut the ECG signal recordings based on the glucose levels recorded by CGMs. Our model was evaluated on 5-minutes ECG excerpts. The first 200 beats in the given excerpt were considered as input to the DenseNet. This is considered as one data instance. Each instance of data is transformed into an image using spectrograms. These images are fed into the DenseNet model, and high-level features are extracted by analyzing the output of 12 convolutional layers.\nDataset\nThe dataset used in our study is extracted from the open D1NAMO dataset [12]. The dataset was acquired on 20 healthy subjects and 9 subjects diagnosed with Type-1 diabetes. The data is collected in a practical setting with the Zephyr BioHarness 3 wearable device. The device can measure ECG, breathing and accelerometer signals. Additionally, the dataset contains glucose measurements and annotated food pictures. The device also measures additional metrics such as Hearth Rate (HR), Breathing Rate BR, activity level, posture, etc. The device measures ECG at a rate of 250\u202fHz and up to 54.89\u202fmV.\nData selection\nECG excerpts of 5 minutes were annotated with the help of CGM readings. A glucose concentration lower than 4 mmol/L is considered to be ‘lower glucose level’, and a glucose concentration between 4 mmol/L and 7.5 mmol/L is considered ‘normal glucose level’. Heartbeats corresponding to the extracted ECG signals are considered for training.\nSignal Transformation\nSince we incorporate a pre-trained deep neural network which is trained on images and used as a feature extractor for ECG signals, every instance of data must be transformed into an image. We use spectrograms to carry out this transformation. Spectrograms apprehend variations in the power of the signals in every image by taking the Fourier Transform (FT) of each partition of the ECG signal\nFeature selection\nFeature extraction is carried out by examining the output of convolutional layers inside the DenseNet model. The extracted features are considered as feature vectors. We select 12 layers and extract feature vectors from the output of each convolutional layer. This is evident as each layer contains different feature maps which are activated due to unique patterns.\nCONCLUSION\nThe study advances the feasibility of a real-time, non-invasive system to detect hypoglycemia using short excerpts of ECG signals and the technique of transfer learning. Efforts have been made to incorporate a deep neural network, pre-trained on millions of images, is used as a feature extractor on the ECG signals. Transfer learning helps us overcome the problem of the lack of data available in the ECG domain. Hence, the features maps learnt from the ImageNet dataset is powerful enough to represent the spectrograms of ECG signals. These high-level features can be utilized to detect low levels of glucose in the blood using a few raw ECG-signals recorded using a wearable device.\nREFERENCES\n[1] \tD. M. Nathan, ""The Diabetes Control and Complications Trial/Epidemiology of Diabetes Interventions and Complications Study at 30 Years: Overview,"" Diabetes Care, pp. 9-16, 2013.\n[2] \tM. M.-T. M. P. a. B. L. Gita Shafiee, ""The importance of hypoglycemia in diabetic patients,"" Journal of Diabetes & Metabolic Disorders , pp. 11-17, 2012.\n[3] \tP. Z. J. S. K G M M Alberti, ""International Diabetes Federation: a consensus on Type 2 diabetes prevention,"" Diabetic Medicine , pp. 451-463, 2007.\n[4] \tB. W. Carlos Eduardo Ferrante do Amaral, ""Current development in non-invasive glucose monitoring,"" Medical Engineering & Physics, pp. 541-549, 2008.\n[5] \tD. R. I. C. N. (. S. Group, ""Evaluation of Factors Affecting CGMS Calibration,"" Diabetes Technology & Therapeutics, vol. 8, no. 3, 2006.\n[6] \tÖ. Yildirim, ""A novel wavelet sequence based on deep bidirectional LSTM network model for ECG signal classification,"" Computers in Biology and Medicine , pp. 189-202, 2018.\n[7] \tA. Y. H. M. H. C. B. A. Y. N. Pranav Rajpurkar, ""Cardiologist-Level Arrhythmia Detection with Convolutional Neural Networks,"" Computer Vision and Pattern Recognition, 2017.\n[8] \tS. S. A. P. &. L. P. Mihaela Porumb, ""Precision Medicine and Artificial Intelligence: A Pilot Study on Deep Learning for Hypoglycemic Events Detection based on ECG,"" Scientific Reports , 2020.\n[9] \tS. T. J.-S. Y. Milad Salem, ""ECG Arrhythmia Classification Using Transfer Learning from 2-Dimensional Deep CNN Features,"" in IEEE Biomedical Circuits and Systems (BIOCAS), 2018.\n[10] \tH. A. J. S. S. C. Ali Sharif Razavian, ""CNN Features off-the-shelf: an Astounding Baseline for Recognition,"" Computer Vision and Pattern Recognition, 2014.\n[11] \tG. Huang, Z. Liu, L. V. D. Maaten and K. Q. Weinberger, ""Densely Connected Convolutional Networks,"" in Conference on Computer Vision and Pattern Recognition (CVPR), 2017.\n[12] \tJ.-E. R. S. B. J.-P. C. J. R. M. S. Fabien Dubosson, ""The open D1NAMO dataset: A multi-modal dataset for research on non-invasive type 1 diabetes management,"" Informatics in Medicine Unlocked, vol. 13, pp. 92-100, 2018.\n'], 'url_profile': 'https://github.com/pratyaksh10', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes-Database\n'], 'url_profile': 'https://github.com/Omar-Nali', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '42 contributions\n        in the last year', 'description': ['pima indian diabetes dataset is from the national institute of diabetes and digestive and kidney disease.\nthe objective of this project is to predict whether or not a patient has diabetes based on this dataset\n'], 'url_profile': 'https://github.com/anandalmanac', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'Bandung', 'stats_list': [['7', '          followers'], ['7', '          following'], ['6']], 'contributions': '135 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mayathidup88', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['30']], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Herculesisdead', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '75 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/gaikwadvarun707', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}","{'location': 'NONE', 'stats_list': [['22', '          followers'], ['29', '          following'], ['19']], 'contributions': '305 contributions\n        in the last year', 'description': ['Flask Decision Tree Diabetes\nA Decision Tree Classifier with Cross Validation for Diabetes dataset, using Flask and Machine Learning libraries (Scikit, pandas, etc)\nInstallation\nInstall with pip:\n$ pip install -r requirements.txt\n\nRunning Apps\nMake sure you already have Flask installed\n$ flask run\n\nFlask default port is\nhttp://127.0.0.1:5000/\nDemo\nHosted on Heroku\n'], 'url_profile': 'https://github.com/Falskim', 'info_list': ['Jupyter Notebook', 'Updated Nov 9, 2020', 'Jupyter Notebook', 'Updated Nov 12, 2020', 'Java', 'Updated Jan 6, 2021', 'Apache-2.0 license', 'Updated Nov 16, 2020', 'Updated Nov 13, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', '1', 'Python', 'Updated Nov 17, 2020']}"
"{'location': 'Aalborg, Denmark', 'stats_list': [['5', '          followers'], ['7', '          following'], ['5']], 'contributions': '729 contributions\n        in the last year', 'description': ['P3_Diabetes\n'], 'url_profile': 'https://github.com/theodor349', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'Kolkata, West Bengal, India', 'stats_list': [['16', '          followers'], ['23', '          following'], ['38']], 'contributions': '493 contributions\n        in the last year', 'description': ['Diabetes-Prediction-XGBoost\nDiabetes prediction in Indians using XgBoost classifier sklearn.\n'], 'url_profile': 'https://github.com/projjal1', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'Kenya', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '22 contributions\n        in the last year', 'description': ['Diabetes-prediction-model\n'], 'url_profile': 'https://github.com/Betty1999Kamanthe', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['10']], 'contributions': '57 contributions\n        in the last year', 'description': [""Diabetes-Classification-using-KNN\nDiabetes is a condition that impairs the body's ability to process blood glucose, otherwise known as blood sugar. In the United States, the estimated number of people over 18 years of age with diagnosed and undiagnosed diabetes is 30.2 million. The figure represents between 27.9 and 32.7 percent of the population.\nWithout ongoing, careful management, diabetes can lead to a buildup of sugars in the blood, which can increase the risk of dangerous complications, including stroke and heart disease.\nDifferent kinds of diabetes can occur, and managing the condition depends on the type. Not all forms of diabetes stem from a person being overweight or leading an inactive lifestyle. In fact, some are present from childhood.\nDiabetes Data set consisting of following features -\n['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome']\nand our task is to predict whether a person is suffering from diabetes or not.\n""], 'url_profile': 'https://github.com/xxxxsd', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MaryamBagdady', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'Hyderabad', 'stats_list': [['4', '          followers'], ['4', '          following'], ['0']], 'contributions': '30 contributions\n        in the last year', 'description': ['#Final Conclusion:\nFor this Machine-learning_Diabetes_Dataset i had applied three models (Logisticregression, Knn, Decision tree)\n: Maximum accuracy achieved is 0.91 for Decision Tree  out of Logistic Regression, Decision Tree and KNN algorithm\n'], 'url_profile': 'https://github.com/ramkishna1233', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '4 contributions\n        in the last year', 'description': ['Getting Started with Create React App\nThis project was bootstrapped with Create React App.\nAvailable Scripts\nIn the project directory, you can run:\nyarn start\nRuns the app in the development mode.\nOpen http://localhost:3000 to view it in the browser.\nThe page will reload if you make edits.\nYou will also see any lint errors in the console.\nyarn test\nLaunches the test runner in the interactive watch mode.\nSee the section about running tests for more information.\nyarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed!\nSee the section about deployment for more information.\nyarn eject\nNote: this is a one-way operation. Once you eject, you can’t go back!\nIf you aren’t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\nYou don’t have to ever use eject. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\nLearn More\nYou can learn more in the Create React App documentation.\nTo learn React, check out the React documentation.\nCode Splitting\nThis section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting\nAnalyzing the Bundle Size\nThis section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size\nMaking a Progressive Web App\nThis section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nAdvanced Configuration\nThis section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration\nDeployment\nThis section has moved here: https://facebook.github.io/create-react-app/docs/deployment\nyarn build fails to minify\nThis section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify\n'], 'url_profile': 'https://github.com/PhaseTommy', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['22', '          followers'], ['29', '          following'], ['19']], 'contributions': '305 contributions\n        in the last year', 'description': ['datamining-decisiontree-diabetes\n'], 'url_profile': 'https://github.com/Falskim', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['Diabetes_NEW_2\n'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '34 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nMachine Learning Web App created with Flask on Heroku platform.\nDeployed at: https://diaap.herokuapp.com/\nCredit @Anuj-Vyas\n'], 'url_profile': 'https://github.com/DataDecoder', 'info_list': ['C#', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', '1', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', '1', 'JavaScript', 'Updated Dec 17, 2020', 'Jupyter Notebook', 'Updated Nov 15, 2020', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['Diabetes_NEW_2\n'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'Lagos, Nigeria', 'stats_list': [['0', '          followers'], ['1', '          following'], ['15']], 'contributions': '29 contributions\n        in the last year', 'description': ['smartMed\nA Medical tool for diabetes patients\n'], 'url_profile': 'https://github.com/Barkty', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '19 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pruthvirajcyn', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '16 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-decision-tree\n'], 'url_profile': 'https://github.com/tanushaayer', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['7']], 'contributions': '41 contributions\n        in the last year', 'description': ['Early-diagnosis-of-diabetes-mellitus\nThis is my Final Assignment for the course ""Data Science Methodology""\n'], 'url_profile': 'https://github.com/katyno', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['WEB-APPLICATION-TO-PREDICT-DIABETES-DISEASE [ML-ALGORITHM AND FLASK]\nPROJECT: DIABETIC-PREDICTION-WEB-APP*\nDATA ANALYSIS:\nIn  this  project,  3  ML algorithms  are  used   i.e  SVM, LOGISTIC  and  KNN  is  used  and  the  accuracy  of  the  model  is  calculated  and\nthen  the  3 algorithms are  stacked together and  find out  accuracy  of  the  model .  After  the  analysis, I  have found out  that\nLogistic  Regression  have  bettter  accuracy[83%]  and  this  trained  model  is  used  in  my  web-app.\nThese  trained  model [logistic-regression] is  deployed  in  my  web  app  and  whenever  user  enter the  data , these data  is  sent  to  the  model  using  FLASK  SERVER.\nFlask is  a  web  framework  written  in  Python.  The  data  entered  in  the  webpage  is  given  to  the  trained  model  in  the  web-page  and  the model  predicts\neither 0  or  1  based  on  the  data  entered  by  the  user.\nRESULT\n\n0  means : NON-DIABETIC\n1  means : DIABETIC\nTHE  RESULT  IS  DISPLAYED   IN  THE  WEB-PAGE\n'], 'url_profile': 'https://github.com/ALBIN-THOMAS-24', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '23 contributions\n        in the last year', 'description': [""Diabetes-prediction-model-and-scoring-accuracy\nHi Everyone,\nIn this file I will create a diabetes prediction model using logistic regression from sk-learn and include an accuracy scoring model.\nThe dataset consists of the following factors on pregnancies,\tglucose, blood pressure, skin thickness, insulin,\tBMI,\tdiabetes pedigree function,\tage, and outcome (1 if they have diabetes, and 0 if they don't have diabetes).\nIt also includes a chart showing the correlation of each factor and diabetes prevalence. Lastly, it includes a few graphs showing comparinig type 1 and type 2 errors as well as the f1 score.\n""], 'url_profile': 'https://github.com/Anthonyhsu555', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'Chicago, IL, US', 'stats_list': [['4', '          followers'], ['4', '          following'], ['13']], 'contributions': '369 contributions\n        in the last year', 'description': ['Statistical Analysis of factors influencing life expectancy\nThere have been studies on factors that affect life expectancy like gender, ethnicity, etc., but\nthere hasn’t been much study done on factors like immunization, which can matter a lot as there are countries where the awareness for immunization is less which may lead to lower life\nexpectancy. Other factors can also play a role like the GDP of that country, etc.\nIn this project, we do a study that puts focus on factors like immunization, social, economic and other health related factors and see if there is any correlation among these factors and predict what can be the life expectancy of an individual who is from a particular country with all the above mentioned factors provided.\nData Source:\nFor this kind of study, accuracy of information is a must. The dataset related to life expectancy, health factors for 193 countries has been collected from the same WHO data repository website\nand its corresponding economic data were collected from the United Nation website. The sample is globally representative. Among all categories of health-related factors, only those critical factors were chosen which are more representative. For example, we have immunization related factors , mortality factors, economic and social factors.\nContributors:\n\nRahul Nair[https://github.com/rahulmnair1997]\nCheng Jiang [https://github.com/okcheng0504mm]\nYurun Liu [https://github.com/yurunliu66]\n\n'], 'url_profile': 'https://github.com/rahulmnair1997', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}","{'location': 'New Jersey', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vinayrajeshgor', 'info_list': ['Updated Nov 10, 2020', 'HTML', 'Updated Nov 12, 2020', 'Jupyter Notebook', 'Updated Nov 10, 2020', 'Jupyter Notebook', 'Updated Nov 9, 2020', 'Updated Nov 17, 2020', 'Updated Nov 11, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'Updated Dec 17, 2020', '1', 'Jupyter Notebook', 'Updated Dec 7, 2020', 'Python', 'Updated Nov 15, 2020']}"
"{'location': 'Bangalore', 'stats_list': [['0', '          followers'], ['3', '          following'], ['2']], 'contributions': '103 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Manjubn777', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '32 contributions\n        in the last year', 'description': ['Diabetes_prediction_with_machine_learning_algorithm_using_R\nDiabetes prediction using logistic regression and decision tree algorithm on PIMA indian dataset. Here R programming language is used.\n'], 'url_profile': 'https://github.com/jobeda16c', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'FRANCE', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['DiaSmart\nA smart application that helps you manage your diabetes day to day\n'], 'url_profile': 'https://github.com/abenjelloun1989', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'New Jersey', 'stats_list': [['18', '          followers'], ['15', '          following'], ['17']], 'contributions': '396 contributions\n        in the last year', 'description': ['Readmission Prediction of Diabetic Patients\nAuthors \nYung Han Jeong\nMalcolm Katzenbach\n\nOverview\nThis project will create classification models to predict hospital readmissions regarding patients with diabetes through data provided by Virginia Commonwealth University (downloaded from kaggle) from 1999-2008 with 130 U.S. hospitals. Predicting high risk patients will provide valuable information to the careproviders to better prepare future care needs of diabetic patients.\nBusiness Problem\nDetermining treatment effectiveness within diabetic pateints is an ardous process. Therefore, predicting readmission possibility of patients would allow care-providers to determine treatment qaulity, effectiveness, and prepare further treatment plans if necessary. Also, classifying high risk patients would determine ineffective or errorneous treatments, reducing treatment risks in the future. This prediction model will provide insight to treatment effecitiveness, cost reduction method, and reduced medical risks to careproviders. Hospitals and insurance angency can utilize this model to increase logistical and financial support for highly effective treatments and high risk patients.\nData\nThe data provided by Virginia Commonwealth University collected from 130 U.S. hospitals over the years of 1999-2008 on diabetic pateints. The data is separated by unique patient ID and provides features such as number of medications, hospital stays, and sex. The readmission status was defined as ""No"", no readmission in that year, ""<30"", readmitted within 30 days of last visit, and "">30"", readmitted after 30 days period.\nA supporting documetion, description.pdf, Impatct of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Databse Patient Records was also provided as reference.\nMethods\n\nClean data set by creating dummy variables for categorical data\n\nDiagnosis categorized per ICD9 code group defined by related study refere to decription.pdf page 5 table 2.\nDropped irrelevant or largely missing data columns such as pateint ID and weight.\n\n\nPerform EDA on cleaned data to gain understanding of statistical significance for feature engineering. Also create data visualizatoin of statistically signifiant features.\nCreate baseline models for iterative improvements using recall as the scoring metric.\nSelect best perfomring model and crate final prediction for model performance analysis.\nCompare feature weights and ranks among the best performing model to determine significant indicators of readmission prediction.\n\nExploratory Data Analysis\nThe predictant, readmitted, displays class imbalance with no readmission dominating the class, followed by greater 30 days, then less than 30 days.\nsome graph about data spread\nThe age category of patients were skewed towards the older (>50) patients.\n\nSome of the significant features of readmission predictions were following:\nThe probability of readmission was directly related to the number of diagnoses of the patient during the visit.\n\nThe number of inpatient visits were a significant factor in determining readmission possibilities.\n\nModel Evaluation\n\nDecision Tree and Random Forest models were selected for modeling for their out of the box performance and heavy presence of categorical data. Both models were hypertuned with grid search cross validation method, which increase model performance and decreased overfitting. Recall metric was selected as scoring method to reduce false negatives, because it is better for care providers to be over prepared than caught unawares. d\nThe Decision Tree model was hypertuned second time with only features with significant importance (Decision Tree - SF) from the first hypertuning. This model saw great improvements in performance compared to the first model.\nRandom Forest model performed best overall and was selected as the recommended model for care provider usage.\n\nThe random forest model predicted each class proportionally to their class presence. The greatest error was predicting "">30"" class as ""not readmitted"" class.\nSummary\nCare providers can utilize the random forest model to predict future readmission possibility of a patient. This will allow the hosptials to idenify high risk patients and predict readmission patient count to plan treatment and logistic necessities accordingly. All features indentified in EDA process were ranked high in feature importance of all models. Number of inpatients visits, diagnoses, and medication were among the highest in all models. It is recommeded that care providers also utilize these metrics in determining patient care.\nFuture Steps\n\nCreate more interpretable models to aid treatment process for care providers.\nObtain more recent data and check for relevant performance.\n\nRepository Structure\n.\n├── data                                                # contains all data used\n|    ├── ICM9_reference                                 # ICM9 code for reference\n├── image                                               # contains all visualization and local images\n├── model                                               # conatain all final models and feature info\n├── source                                              # all functions used for data cleaning\n├── notebooks                                           # contains all work notebooks\n|    ├── data_preparation.ipynb                         # data clean and feature engineering\n|    ├── diabetes_readmission_model.ipynb               # model building and tuning\n|    ├── diabetes_readmission_eda.ipynb                 # EDA and visulization\n├── diabetes_readmission_prediction.ipynb               # Notebook summarizing all processes\n├── Diabetes Readmission Prediction Presentation.pdf    # Slide deck\n└── README.md\n\n'], 'url_profile': 'https://github.com/yunghanjeong', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['5']], 'contributions': '34 contributions\n        in the last year', 'description': ['2020-iHMP-disease-corr\nusing iHMP data to look at omic correlations with preterm birth and type 2 diabetes mellitus\n'], 'url_profile': 'https://github.com/hehouts', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [['19', '          followers'], ['0', '          following'], ['2']], 'contributions': '2 contributions\n        in the last year', 'description': ['Closed-Loop System for Type 1 diabetes\nThis repository contains all the projects needed to build a \nwearable closed-loop system for type 1 diabetes that uses a new\nalgorithm to estimate the basal insulin needs of the patient and\nperform the control using temporary basal rates.\n\nDisclaimer\nThis software and information is designed for educational purposes only \nand should NEVER be used on real patients.\n\nThis information is provided \'as is\' and in no event shall the \nprovider be liable for any damages, including, without \nlimitation, damages resulting from lost data or lost profits or \nrevenue, the costs of recovering such data, the costs of substitute \ndata, claims by third parties or for other similar costs, or any \nspecial, incidental, or consequential damages arising out of use or\nmisuse of this data. The accuracy or reliability of the data is not \nguaranteed or warranted in any way and the provider disclaim \nliability of any kind whatsoever, including, without limitation, \nliability for quality, performance, merchantability and fitness \nfor a particular purpose arising out of the use, or inability \nto use the data. Information obtained via this software MUST\nNEVER BE USED to take medical decisions.\n\nLicense - GPL V2\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation version 2 of the License.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nContents\nThis repository containts the following information in their corresponding\nfolder:\n\n\nDemo - Contains a time-lapse video of a demo system connected to Nightscout and controlling a patient\'s glycaemia.\n\n\nFirmware - Contains the project files needed to compile the platform\'s CC1111 firmware using IAR Embedded Workbench (the trial version should be enough). The code for the CC2540 processor is not included since the project should be downloaded directly from TI\'s website.\n\n\nPlatform - Contains the information to build two different platforms:\n\nPrototype - It\'s a PCB in which some commercial off-the-self boards can be soldered and provides the needed interconnections for the system.\nFinal - Final version of the wearable system.\n\n\n\nPublications - Publications related to this work.\n\n\nSimulation - Contains a modified version of the simglucose simulator along with a controller that behaves like the ""real"" version of the controller.\n\n\nUploader - Contains the xCode project for an really simple iOS uploader for Nightscout. This software allows the platform to upload data to Nightscout using an iOS device.\n\n\nThanks\nNone of this would be possible without all the hard work of my colleagues Ignacio Bravo, Alfredo Gardel and Jose Luis Lazaro.\nSergio Hernandez, thank you very much for your countless hours of hardware designing.\nAnd thank you Jinyu Xie for developing such excellent software (simglucose) and allow us to build upon it.\n'], 'url_profile': 'https://github.com/jberian', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'Guwahati, Assam, India', 'stats_list': [['5', '          followers'], ['6', '          following'], ['22']], 'contributions': '638 contributions\n        in the last year', 'description': ['Medical Diagnostics\n'], 'url_profile': 'https://github.com/rekib0023', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'Chennai', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '61 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Sasi5526', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nico1644', 'info_list': ['Jupyter Notebook', 'Updated Nov 13, 2020', 'R', 'Updated Nov 11, 2020', 'C#', 'GPL-3.0 license', 'Updated Dec 6, 2020', '1', 'Rich Text Format', 'Updated Nov 16, 2020', 'Python', 'Updated Jan 22, 2021', 'HTML', 'LGPL-3.0 license', 'Updated Nov 20, 2020', 'Jupyter Notebook', 'Updated Nov 14, 2020', 'Python', 'Updated Nov 11, 2020', 'Updated Nov 9, 2020']}",
