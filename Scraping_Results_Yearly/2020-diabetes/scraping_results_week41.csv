"{'location': 'Kota', 'stats_list': [['0', '          followers'], ['1', '          following'], ['4']], 'contributions': '18 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/deepu97nagar98', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['10', '          following'], ['0']], 'contributions': '142 contributions\n        in the last year', 'description': [""Diabetes Prediction\n\nTable of Content\nOverview-\nGoals -\nMotivation and Background -\nData -\nProject Info\nOverview\nThis project is to see if we can predict diabetes based on 8 different factors by using Logistic Regression model and Decision Tree model, and finding out which factor affects the outcome the most.\nExecutive Code  : Executive Notebook  \n\nPresentation    : Presentation Preview \n\nYouTube Presentation: Video Link  \n\nGoals\n\nData Preparation     : Cleaning data, and creating visualizations for deeper understanding of the dataset.\nClassification Model : Logistic regression model and Decision Tree model used and evaluated to find the highest accuracy in predicting diabetes.\n\nMotivation and Background\n\nAccording to CDC's National Diabetes Statistics Report, 10.5% (34.2 million people) of USA's total population had diabetes in 2018's records. When looking at the reports over the years, it is clear that the rate is increasing yearly. In 2000, the percentage of people with diabetes was 4.4%, which means that is has more than doubled over 18 years. This caught my attention and encouraged me to look into data about diabetes. I will be looking at the different health factors and see which influences a patient to have diabetes, along with predicting diabetes with the different factors.\nData\nThe dataset is obtained from Kaggle (diabetes dataset), originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient (female, over age 20) has diabetes, based on certain diagnostic measurements included in the dataset. It includes 2000 observations, each representing an individual.\nThere are 9 Columns:\n\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1)\n\nProject Info\nSoftware Requirements\nLanguage/Tool: Python (Anaconda)\nLibraries: pandas, seaborn, numpy, matplotlib, sklearn, scipy\n\nRelated Studies\n\n1. Center of Disease Control and Prevention (CDC). (2020). National Diabetes Statistics Report, 2020 . \nRetrieved from US department of Health and Human Services website:\nhttps://www.cdc.gov/diabetes/pdfs/data/statistics/national-diabetes-statistics-report.pdf Link\n\n\n2. Sisodia, D., & Sisodia, D. S. (2018). Prediction of diabetes using classification algorithms. \nProcedia Computer Science, 132, 1578-1585. doi:10.1016/j.procs.2018.05.122 Link\n\n3. Smith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). \nUsing the ADAP learning algorithm to forecast the onset of diabetes mellitus. \nIn Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). \nIEEE Computer Society Press. Link\n\n\nContributors : Sooyeon Choi\n\nDuration     : October 2020\nLast Update  : 10.13.2020\n\n""], 'url_profile': 'https://github.com/schoi15-umbc', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tallin4576', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['6']], 'contributions': '17 contributions\n        in the last year', 'description': ['Diabetes\nThis repository examines the classification of patients with diabetes being readmitted. The data and project is based on the UCI Diabetes dataset.\n'], 'url_profile': 'https://github.com/tk27182', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '65 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/GabrielleZeti', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['4']], 'contributions': '25 contributions\n        in the last year', 'description': ['Diabetes-prediction\nDiabetes-prediction\nThis is all about my project on machine learning\n'], 'url_profile': 'https://github.com/kumar1707', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '132 contributions\n        in the last year', 'description': ['Captstone_Design2\nDiabetes prediction project\n'], 'url_profile': 'https://github.com/Natural-Goldfish', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'Perú', 'stats_list': [['11', '          followers'], ['16', '          following'], ['51']], 'contributions': '3,187 contributions\n        in the last year', 'description': ['Estudio comparativo de modelos de clasificación para identificar pacientes con diabetes\nResumen\nEn este trabajo se pretende explorar la capacidad de los algoritmos de clasificación para predecir pacientes con diabetes. El estudio comparativo comprende el desarrollo y evaluación de 04 modelos de clasificación:\n* Modelo Regresión Logística Binomial\n* Modelo Probit\n* Modelo Logit\n* Modelo CLogLog\n\nSe utilizó el coeficiente de sensibilidad como indicador de probabilidad para seleccionar el mejor modelo.\n'], 'url_profile': 'https://github.com/gchacaltana', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'Thessaloniki, Greece', 'stats_list': [['2', '          followers'], ['6', '          following'], ['0']], 'contributions': '979 contributions\n        in the last year', 'description': ['Software Engineering Bootcamp\nJava & Angular\npowered by Pfizer\nSacchon\nA Diabetes Management\nWeb Application\nSoftware Requirements Specification Document\nSeptember 2020\nAbstract\nThe final deliverable in the Software Engineering Bootcamp is the group project\nsoftware, Sacchon, a diabetes management web application. Each team will create\ntheir own implementation based on a Software Requirements Specification (SRS)\ndocument. The SRS is common to all, but each team can follow their own\nassumptions and approaches. Sacchon is divided into two distinct subsystems, the\nSacchon Rest-API which is the backend and the Sacchon Angular App, which is\nthe frontend. To the end user, the web app consists of three major components:\nthe Repository of Medical Data (MediDataRepo), the Doctor Advice Services\nSystem (DoctorAdvice), and the Reporting Services (Reporter).\nMediDataRepo keeps track of the users’ blood glucose level, daily consumed\ncarbohydrates, and medication intake. In the DoctorAdvice section a team of\ndoctors provide advice to patients on a per-call basis. Reporter provides a series\nof aggregation operations for creating tables and charts. Further details on the\nbusiness requirements of each component will be discussed in the class.\nTable of Contents\n\n1 Introduction\n2 Project scope\n3 Deliverables\n4 Functional Requirements\n\n4.1 Overview\n4.2 MediDataRepo\n4.3 DoctorAdvice\n4.4 Reporter\n\n\n5 Non-Functional Requirements\n\n5.1 Sacchon app\n\nPerformance\nVersion control\nMicrodesign\n\n\n5.2 Sacchon application code\n\nDevelopment environment\nSoftware interfaces\nTesting\nLogging\nException handling\nDeliverables\n\n\n\n\n\n1 Introduction\nThis Software Requirements Specification (SRS) document gives an overview of\nSacchon, a diabetes management web application. It names what is required to be\nanalyzed, designed, implemented, tested, and presented. It also describes the\nhigh-level requirements of the stakeholders based on their needs and\nexpectations, i.e. the desired product features.\n2 Project scope\nThe project aim is to develop the Sacchon app and deliver it ready to be released.\nThe requirements are given by the Sacchon Consulting Enterprise (a fictional\ncompany).\nThe information system must contain\n\nA User Interface to submit and view medical data by the patients and\ndoctors.\nAn Administration Console with user management, monitoring, and\nreporting capabilities of the system usage.\n\nFor the above features to be considered complete, the following functionality must\nbe provided\n\nFrom the backend view, a corresponding call with a valid JSON object\ncontaining all needed information must be available, according to the\nspecification of each case.\nFrom the frontend view, a corresponding page consuming the service from\nthe backend and presenting the suitable information must be available.\n\n3 Deliverables\nThe deliverable of this project is the integrated platform of the back and the front\nsystem of the Sacchon. This means that the following three subsystems must be\ndelivered:\n\nMediDataRepo, the Repository of Medical Data)\nDoctorAdvice, the Doctor Advice Services System\nReporter, the Reporting Services\n\nIn the following sections, all needed functionality for each subsystem is defined.\n4 Functional Requirements\n4.1 Overview\nThe patient uses the system to store their data at any time. After a month of data\nrecording has elapsed, a doctor can review this data and provide advice to the\npatient for the next month. This process is repeated until the patient or the doctor\nunregisters from the system.\nThe Chief Doctor is an officer who can view reports which monitor the activity of\npatients and doctors in the system.\nThe following sections list the functionality needed to be present for the system to\nbe considered complete.\n4.2 MediDataRepo\nThe patient can\nmanage their account\nsign up for an account\nremove the account\nstore their data\nblood glucose level (date, time, measured in mg/dL)\ncarb intake (measured in grams)\nview\ntheir average daily blood glucose level over a user- specified period\ntheir average carb intake over a user-specified period\nthe current and past consultations from doctors\nupdate\nmodify incorrect submitted data\ndelete incorrect submitted data\n4.3 DoctorAdvice\nThe doctor can\nmanage their account\nsign up for an account\nremove the account\nview patient record\nbrowse the data for a single patient (patient data and\nconsultations)\nsearch\nfind patients that have not had a consultation in the last month\nconsult\nprovide advice to a patient for the upcoming month (name of\nmedication and dosage)\nupdate\nmodify a consultation to a patient\nInitially a patient has not doctor consulting them. As soon as a month of data\nrecording has passed, the patient is ready to be consulted by a doctor.\nDoctors search for patients for which advice is pending. Each doctor can see all\nthe patients that they consult and the patients that are new in the system.\nDoctors cannot see patients that are consulted by other doctors. All doctors can\nsee the new patients.\nWhen a doctor selects to consult a new patient, the patient becomes managed by\nthis doctor exclusively.\nWhen a doctor leaves the system, their patients become available again for other\ndoctors to consult. Past consultations of these patients continue to refer to the\ndoctor who is leaving the system.\nIf a doctor modifies a consultation, the patient must see a warning as soon as\nthey enter the system, so that they know that some important information must\nbe reviewed.\nA month is the period from the day of consultation to the same date next month\n(say, from the 15th of June to the 14th of July). It is not a calendar month. The\nnext month for a patient starts as soon as a doctor has provided a consultation.\nUntil the new consultation arrives, the previous one is considered valid.\n4.4 Reporter\nThis section is available only to the Chief Doctors in the application. The reports\navailable are:\n\nThe information submissions (personal monitor data) of a patient over a\ntime range\nThe information submissions (consultations) of a doctor over a time\nrange\nThe list of the patients who are waiting for a consultation and the time\nelapsed since they needed to have one\nThe list of the patients with no activity over a time range\nThe list of the doctors with no activity over a time range\n\n5 Non-Functional Requirements\n5.1 Sacchon app\nThe Sacchon app must be able to run in any current major web browser.\nPerformance\nTo guarantee a good user experience, all calls to the backend must have a\nmaximum response time of 1 second (excluding network response time).\nVersion control\nAll code must make use of the Git version control system. Each team must create\nits own single GitHub code repository.\nUser interface\nA basic UI design with open source images will be used.\n5.2 Sacchon application code\nDevelopment environment\nThe following set up is required:\n\nThe backend part of the system must be developed in Java 8 or greater.\nAny IDE can be used for the implementation; JetBrains IntelliJ IDEA is\npreferred (but not required).\nThe frontend will be developed using the Angular Framework.\nThe underlying database system must be the Microsoft SQL Server\nDeveloper Edition.\nMaven must be the tool to manage dependencies and the software\ndevelopment lifecycle.\n\nSoftware interfaces\nAll functionality must be implemented by using HTTP calls returning information\nin JSON format.\nA software interface document must be created. This is to be read by external\nsoftware developers who may want to interface with the system. The document\nmust provide the following information:\n\nGive the list of communications including the description of the data that is\nbeing exchanged.\nSpecify any constraints.\nDescribe application or other software interface characteristics, including\ncomponent names and versions, databases, operating systems, libraries,\ntools, etc. that must be known to the developers.\n\nTesting\nThe system must be fully backed up by unit tests.\nFor testing the REST calls, a third-party tool should be utilized. Postman\n(https://www.getpostman.com) is recommended as a commonly-used tool in this\narea. Swagger can also interface with the deliverable for testing. Automating REST\ncalls testing is highly recommended.\nLogging\nA well-defined logging policy maintaining all information produced by the\nsoftware when running is mandatory. The logging policy must be documented\n(e.g. name the specific log files, directories, the rotation policy etc.).\nException handling\nWhen handling software exceptions, every call must be guaranteed to return a\nvalid JSON document. This includes the cases where something went wrong in the\nbackend execution due to either development bugs or system causes. The end-\nuser must never see default error pages on the web browser. Depending on the\ntype of the call (the various CRUD actions), the proper HTTP code must be always\nreturned from the backend for further processing up front.\nDeliverables\nThe application code must be delivered in a single project repository on GitHub,\non the master branch of the project. The required software interface document\nmust be included as project documentation in the same repository.\n'], 'url_profile': 'https://github.com/atsianis', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 14, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Python', 'Updated Dec 20, 2020', 'R', 'Updated Dec 26, 2020', 'Java', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '45 contributions\n        in the last year', 'description': ['diabetes_diagnosis\nPREDICTING OF THE DIABETES BASED ON HEALTH BEHAVIOR WITH MACHINE LEARNING TECHNIQUES\nWe are developing a method to diagnose diabetes with the help of machine learning algorithms and tools. The proposed method utilizes the power of machine learning to create a model that can predict diabetes based on the health behaviors of the patient. The model makes use of the relationship between a healthy lifestyle and diabetes, a healthy lifestyle helps prevent diabetes and the opposite holds true. This relationship has been supported by many studies. Our goal is to build a machine learning model with adequate accuracy to predict diabetes which will help significantly in easing and speed up the diagnosing procedure of diabetes. We used relatively new machine learning algorithms to build the model namely: the top three Gradient Boosting algorithms XGBoost, LightGBM, CatBoost, and Artificial Neural Networks.\nDataset\nThe dataset that we will use is been collected from 6 waves of the National Health and Nutrition Examination Survey: 2007-2008, 2009-2010, 2011-2012, 2013-2014, 2015-2016, and 2017-2018.\nhttps://wwwn.cdc.gov/nchs/nhanes/Default.aspx\nThe combined dataset is consisting of 30 features and 55939 observations and all values of the dataset have been coded in numerical form.\n'], 'url_profile': 'https://github.com/haithamalshari', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shahjahan-iu', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '46 contributions\n        in the last year', 'description': ['Diabetes-Predeiction\n'], 'url_profile': 'https://github.com/soumikpaul006', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'manipal', 'stats_list': [], 'contributions': '105 contributions\n        in the last year', 'description': ['Diabetes-Classification\nAnalysis of relationship between outcome on diabetes vs different factors of human health.\nPredicting outcome of a diabetes patient based on different factors affecting diabetes using logistic regression.\n'], 'url_profile': 'https://github.com/imnidhi', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'kolkata', 'stats_list': [['15', '          followers'], ['28', '          following'], ['3']], 'contributions': '503 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/Ankit152', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['14', '          following'], ['0']], 'contributions': '219 contributions\n        in the last year', 'description': [' Exploring risk factors of Diabetes\n Contrubuter  : Sandeep Bansal\n\nLanguages: Python\nTools/IDE: Anaconda\nLibraries: pandas, matplotlib, numpy, sklearn, seaborn\n\nAssignment Submitted: October 2020\n\n\nProject Overview\n\nData - Two datasets were used for modeling and reference. The raw dataset can be found on the Kaggle website, here. The Maryland Dataset can be found here\nResearch\n\nEmma Wilmot Department of Diabetes & Endocrinology & Iskandar Idris Royal Derby Hospital and Division of Medical Sciences & Graduate Entry Medicine, University   of Nottingham Title: ""Early onset type 2 diabetes: risk factors, clinical impact and management"" can be found\nhere\nIf you are unfamiliar with Diabetes and its disease process please check out my Diabetes Pathophysiology video which can be found here\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\n\n\n\nBuisness Objective \n\nUsing Logistic Regression can a machine learning model accurately predict whether or not the patients in the dataset have diabetes or not?\n\n\nAbstract and Introduction:\n\nThe worldwide prevalence of DM has risen dramatically over the past two decades, from an estimated 30 million cases in 1985 to 415 million in 2017. According to the article titled ""Early onset of type 2 diabetes: risk factorsm clinical impact and management"", statistics state the Global estimate for Diabetes Mellitus is approximatly 415 million in 2017. Regional estimates of the number of individuals with diabetes (20–79 years of age) are shown (2017).Based on current trends, the IDF projects that 642 million individuals will have diabetes by the year 2040.\n\n \n\nMotivation:\n\nApproximately 623,041 people in Maryland, or 12.6% of the adult population, have diabetes. Of these, an estimated 156,000 have diabetes butare unaware of it, greatly increasing their health risk. In addition, 1,634,000 people in Maryland, 36.9% of the adult population, have prediabetes with blood glucose levels higher than normal but not yet high enough to be diagnosed as diabetes.\n\n \n\nProposed Methodology of Modeling:\n\nLogistic regression is one such regression algorithm which can be used for performing classification problems. It calculates the probability that a given value belongs to a specific class. If the probability is more than 50%, it assigns the value in that particular class else if the probability is less than 50%, the value is assigned to the other class. Therefore, we can say that logistic regression acts as a binary classifier.\nFor this project we will calculate the probability that a patient has diabetes which will be labeled the dependent variable. 0 = Not Diabetic, 1 = Patient is Diabetic\n\n\nResults and Primary Findings:\n\n\n\n\nModel\nEvaluation\n\n\n\n\nAccuracy\n0.75\n\n\nPrecision\n0.89\n\n\nF1_Score\n0.82\n\n\nRecall\n0.76\n\n\n\n\nAccuracy: Help us determine or predict the true diabetic person out of the population. It is the fraction of predicted diabetic patients that the model got right.\nPrecision: ssists to determine what are the relevant positive diabetic patients out of entire positive diabetic predictions.If what you have predicted and actual are matching. )\nF1_Score: Harmonic mean of precision and recall. We consider F1_score because it balances between precision and recall.\nRecall: Fraction of actual diabetic patients to the number of diabetic patients retrieved from population.\n\n \n\nMeasure of model and how it can distinguish two seperate groups under the target variable. The more area under the curve the better the model.\n\n\nLimitations and Future work:\n\nAccording to the article ""Early onset type 2 diabetes: risk factors, clinical impact and management"" Author Emma Wilmot indicates that to determine prognosis of patients with diabetes its important to catch it at an early stage. If patients are young adults typically between 18-30 years old, patients are likely to have Type 1 Diabetes, patients over the age of 40 are more likely to be diagnosed with Type-II-Diabetes.Therefore the primary limitation in this dataset is the lack of age of these individuals in the dataset. If provided with the age we would be able to further our analysis between Type I and Type II diabetes.\nIn future analysis I would add more features. I would add more of a variety in ages of individuals, and I would add a feature indicating whether the patient is a male or female. These two features would provide us insight into whether diabetes is moreso found in male or female, and in which age group. Lastly, I would utilize other machine learning models to investigate whether we would be able to produce a more effective model.\n\n\nConclusion and summary:\n\nLogistic regression is a regression algorithm which can be used for performing classification problems. It calculates the probability that a given value belongs to a specific class. In this particular study we utilized the diabetes dataset to determine whether the features could accuratly predict whether a patient would have diabates. After modeling our data we were able to produce convincing results that the features in this dataset do in fact increase the odds and the probability of a patient being diagnosed with diabetes.\n\n\nReferences and contributions:\n\nDatasets: https://www.kaggle.com/uciml/pima-indians-diabetes-database\nMaryland Dataset: https://opendata.maryland.gov/Health-and-Human-Services/Number-of-Diabetes-Deaths-among-MarylandResidents/smru-f5wc\nResearch Article: https://journals.sagepub.com/doi/full/10.1177/2040622314548679\nCover Picture, Global Map: Google.com\nProfessor Murat Guner: https://github.com/mguner/UMBC_DATA602/tree/master/Week-4\nMy Youtube Diabetes Video: https://www.youtube.com/watch?v=QaDSHYmdpyU&feature=youtu.be\n\n'], 'url_profile': 'https://github.com/Sandeep-Bansal1', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tallin4576', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'Malang', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/heriistantoo', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'Kota', 'stats_list': [['0', '          followers'], ['1', '          following'], ['4']], 'contributions': '18 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/deepu97nagar98', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/himanshisehgal19', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '34 contributions\n        in the last year', 'description': ['Diabetes_prediction\nHere, I have designed a model using the concept of Machine Learning to predict whether a person is having Diabetes or not.\n\nVarious Model Names:\n\nlog_reg = Logistic Regrassion\nd_tree = Decission Tree Classifier\nr_forest = Random Forest Classifier\n\n\nDetail of Dataset Use In this Model:\n\ndiabetes.csv [In the repository]\nDetail.txt [In the repository]\n\n\nTools Used:\n\nPython (3.7 version)\nPandas\nNumpy\nSklearn\nMatplotlib\nSeaborn\n\n'], 'url_profile': 'https://github.com/JayShankar99', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '46 contributions\n        in the last year', 'description': ['DIABETES ANALYSIS\n\nTo check the impact on diabetes level due to pregnany, glucose, blood presure, skin thickness, insulin, BMI and age of patient.\nData for analysis:\nhttps://github.com/vanshika77/Diabetes-analysis/blob/main/diabetes.csv\nANN code for diabetes analysis:\nhttps://github.com/vanshika77/Diabetes-analysis/blob/main/diabetes.ipynb\n'], 'url_profile': 'https://github.com/vanshika77', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['3']], 'contributions': '20 contributions\n        in the last year', 'description': ['Indian_Diabetes\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nAcknowledgements\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\nInspiration\nCan you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\n'], 'url_profile': 'https://github.com/spratops', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '109 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Temi111', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '24 contributions\n        in the last year', 'description': [""Diabetes Prediction - Deployment\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at: https://predicting-diabetes.herokuapp.com/\n• If you are searching for Code, Algorithms used and Accuracy of the model.. you won't find it here. Click the link mentioned below for the same:\nLink: https://github.com/anujvyas/Machine-Learning-Projects/tree/master/Diabetes%20Prediction\n• Please do ⭐ the repository, if it helped you in anyway.\n• A glimpse of the web app:\n\n----- Important Note -----\n• If you encounter this webapp as shown in the picture given below, it is occuring just because free dynos for this particular month provided by Heroku have been completely used. You can access the webpage on 1st of the next month.\n• Sorry for the inconvenience.\n\n""], 'url_profile': 'https://github.com/raviprakash79', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '158 contributions\n        in the last year', 'description': ['Diabetes-classification\nUses the most famous random forest algorithm.\nUse this code to find the accuracy of the model and please modify as per your code\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)\n'], 'url_profile': 'https://github.com/nimishabhide', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'Malang', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/heriistantoo', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['12', '          following'], ['0']], 'contributions': '117 contributions\n        in the last year', 'description': ['diabetes_detection\nModel to detect diabetes based on Fundus Retinal Images and Polygenic Risk Scores\n'], 'url_profile': 'https://github.com/migueLib', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '18 contributions\n        in the last year', 'description': ['Diabetes. Using data science to analyse the factors affecting diabetes.\n'], 'url_profile': 'https://github.com/chewlk', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 6, 2020', '1', 'Jupyter Notebook', 'Updated Dec 31, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'HTML', 'Updated Oct 13, 2020', 'Python', 'Updated Oct 22, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Jan 25, 2021', 'Jupyter Notebook', 'Updated Oct 9, 2020']}"
"{'location': 'Ahmedabad', 'stats_list': [['0', '          followers'], ['0', '          following'], ['8']], 'contributions': '20 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shripal3354', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'Internet', 'stats_list': [['19', '          followers'], ['43', '          following'], ['30']], 'contributions': '263 contributions\n        in the last year', 'description': [""\n\n\n\n\n\n\n\n\nDiabetes | Diagnosis\n\n\n\nView Demo\n    ·\n    Report Bug\n    ·\n    Request Feature\n\n\nTable of Contents\n\nAbout the Project\n\nBuilt With\n\n\nGetting Started\n\nPrerequisites\nInstallation\n\n\nRoadmap\nContributing\nLicense\nContact\nAcknowledgements\n\nAbout The Project\nThis is the first machine learning project i will deploy on web it is a supervised learning model, I created an ensemble method that made use of about five models from which i picked the one with the highest frequency which is the Gradient Boosting algorithm after some hypermeter tuning i was able to get an accuracy of 82% which is because i was unable to gather a big dataset on diabetes\nA list of commonly used resources that I find helpful are listed in the acknowledgements.\nBuilt With\nThis section should list any major frameworks that you built your project using. Leave any add-ons/plugins for the acknowledgements section. Here are a few examples.\n\nFlask\nScikit-learn\nNumpy\nPandas\n\nGetting Started\nThis is an example of how you may give instructions on setting up your project locally.\nTo get a local copy up and running follow these simple example steps.\nPrerequisites\nThis is an example of how to list things you need to use the software and how to install them.\n\nPython3.6+\n\nflask run\nInstallation\n\nClone the repo\n\ngit clone https://github.com/AjibsBaba/diabetes-diagnosis.git\n\nInstall PIP packages\n\npip install -r requirements.txt\n\nIn the root directory type the following command in your terminal\n\nflask run\nRoadmap\nSee the open issues for a list of proposed features (and known issues).\nContributing\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are greatly appreciated.\n\nFork the Project\nCreate your Feature Branch (git checkout -b branchname)\nCommit your Changes (git commit -m 'Added new feature[s])\nPush to the Branch (git push origin branchname)\nOpen a Pull Request\n\nLicense\nDistributed under the MIT License. See LICENSE for more information.\nContact\nSamuel Ajibade- @ajibs_baba - email@example.com\nProject Link: https://github.com/AjibsBaba/diabetes-diagnosis\nAcknowledgements\n\nUC Irvine Machine Learning Repository!\nMIT License\nBootstrap 4\nHeroku\n\n""], 'url_profile': 'https://github.com/AjibsBaba', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '103 contributions\n        in the last year', 'description': ['Diabetes-Classification\nThe main objective of this project is to predict whether or not a patient has diabetes, based on given features/diagnostic measurements.\nIn this project, only female patients are considered who are at least 21 years old of Pima Indian heritage.\nThe inputs in this project are Pregnancies, GlucosePlasma, BloodPressure, Skin ... etc and the output was diabetes or not.\n'], 'url_profile': 'https://github.com/PorusSuntoke', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'New York', 'stats_list': [['2', '          followers'], ['2', '          following'], ['1']], 'contributions': '281 contributions\n        in the last year', 'description': [""Diabetes Prediction Using Health Indicators\nDataset taken from Kaggle: Early Stage Diabetes \nModels used and evaluation (f1) scores: \n-f1_score assuming all positive - .76 \n-dummy classifier respecting sample dist - .60 \n-dummy classifier picking at random - .51 \n-K-Means Clustering - .86 \n-Decision Tree - .94 \n-KNN - .99 \n-Log Reg - .94 \n-SVM - .98 \n-Naive Bayes - .94 \n\nGridSearch was used in combination with cross validation to find the optimal parameters and fit to the training set.\nAll (supervised) models worked well, producing scores of over .90. This could be due to the small size of the dataset or the significance of each feature. KNN and SVM both worked particularly well, both models creating boundaries to separate the classes.\nLooking at feature importance with the Decistion Tree, it's clear that the presence of polyuria is a significant indicator relative to the other features. Age, gender, and the presence of polydipsia were also important features.\nThe f1 score was used to evaluate the models. However, when looking at the problem, it's more important to maintain high recall in the model and minimize the false negative rate (people diagnosed as healthy when they actually have diabetes).\n""], 'url_profile': 'https://github.com/WickedoneC', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'Kolkata/India', 'stats_list': [['5', '          followers'], ['3', '          following'], ['3']], 'contributions': '99 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nHere, we have collected database from online source, of 800 different wpeople with details of their insulin level, No of pregnancy, BMI, skin thickness, age and also the outcome whether they had diabetes or not. We made a model using machine learning to predict whether a person has diabetes or not. In this we used three different approaches Logistic Regression, Decision Tree Regeression and Random Forest Classification, after comparing the accuracy of the test data set of each approach we came to the conclusion that Random Forest Classification predicted the best and had a accuracy of 78.6% predictions.\n'], 'url_profile': 'https://github.com/Srishti-Rani', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'São Paulo, Brazil', 'stats_list': [], 'contributions': '222 contributions\n        in the last year', 'description': [""Introduction\nThis Notebook was developed based on the Diabetes 130-US hospitals for years 1999-2008 Data Set.\nThe dataset contains clinical data from 130 Us hospitals between 1999 and 2008 collected from patients with Diabetes.\nHere a Data Science pipeline will be developed from Data Exploration to Model Development and Benchmarking.\nLabels contained in the dataset are the following:\n\nNo readmission\nReadmission in less than 30 days\nReadmission in more than 30 days\n\nAltough for this particular exercise I will make the choice of merging both label items 1 and 3 into a single one, leaving us with a binary classification problem.\nThe are two main factors regarding this choice:\n\nRemove ambiguity from labels: Since labels 2 and 3 are representing fairly similar events. The difference between a patient readmitted 29 days after discharge and one that was readmitted after 31 days will likekly be small. But here they will receive different labels.\nTackle the main problem: There are many factors that could've influenced a patient to go back to the hospital after more than 30 days have passed, thus it's difficult to tell if the treatment given was the problem.\n\nSo here the objective is to predict if a patient will be readmitted in a window of 30 days after being discharged.\nAs an additional source of information about the dataset there is this article which explores a bit more on how it was collected and the meaning of each column.\n""], 'url_profile': 'https://github.com/marciovai', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['12', '          following'], ['0']], 'contributions': '36 contributions\n        in the last year', 'description': [""Model Deployment Demo\nGereklilikler\n\nmodel nesnesi (pkl) ya da model nesnesini çıkarak script (model.py)\napp.py flask uygulamasi\nArayuz. html template'i. kullanici ile etkilesim saglamak icin gerekli arayuz.\n\nProjeyi Çalıştırmak için\n\nCalisma dizininde asagidaki dosyalarin olduguna emin olunuz:\n\ndata (klasor. icerisinde Advertising.csv dosyasi var)\ntemplates (html template. icerisinde template.html dosyasi var)\napp.py (flask uygulamasi)\nmodel.py (modellemenin yapildigi script)\nregression_model.pkl (model nesnesi)\n\n\nDosyalarin oldugu dizinde consoldan python app.py kodunu calistiriniz.\n\n\nhttp://localhost:5000 dizininden uygulamaya erisiniz.\n\n\n""], 'url_profile': 'https://github.com/sadikzoturk', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'Darbhanga', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/dks11001728', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'Hyderabad', 'stats_list': [['2', '          followers'], ['2', '          following'], ['2']], 'contributions': '30 contributions\n        in the last year', 'description': ['Health-Care-Diabetes-Analysis\nContext:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nProblem Statement:\nNIDDK (National Institute of Diabetes and Digestive and Kidney Diseases) research creates knowledge about and treatments for the most chronic, costly, and consequential diseases.\nThe dataset used in this project is originally from NIDDK. The objective is to predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not.\nDataset Description:\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\nPregnancies: Number of times pregnant \nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0\n'], 'url_profile': 'https://github.com/ImSanjayChintha', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['IDM---Diabetes-Readmission\n'], 'url_profile': 'https://github.com/ambercamilleri', 'info_list': ['1', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Oct 12, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Python', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Python', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020']}"
"{'location': 'Hyderabad', 'stats_list': [['2', '          followers'], ['2', '          following'], ['2']], 'contributions': '30 contributions\n        in the last year', 'description': ['Health-Care-Diabetes-Analysis\nContext:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nProblem Statement:\nNIDDK (National Institute of Diabetes and Digestive and Kidney Diseases) research creates knowledge about and treatments for the most chronic, costly, and consequential diseases.\nThe dataset used in this project is originally from NIDDK. The objective is to predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not.\nDataset Description:\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\nPregnancies: Number of times pregnant \nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0\n'], 'url_profile': 'https://github.com/ImSanjayChintha', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['IDM---Diabetes-Readmission\n'], 'url_profile': 'https://github.com/ambercamilleri', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '78 contributions\n        in the last year', 'description': ['Diabetes-classification-model\n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at:        https://diabetes-----predictor.herokuapp.com/\n'], 'url_profile': 'https://github.com/achintyashrotriya', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '55 contributions\n        in the last year', 'description': ['diabetes-bmi-model\nThis is a python project to build a multiple linear regression model of diabetes disease progression against ten explantory variables including age, sex, bmi, etc.\nThis dataset is a built-in dataset from sklearn and it contains:\ntarget(y): a quantitative measure of disease progression one year after baseline.\n10 input variables (x):\nage,\nsex,\nbody mass index,\naverage blood pressure,\nsix blood serum measurements.\nBased on this project, our model is:\ny =-28.2528924*(age)-192.27359695*(sex)+512.03905586*(bmi)+282.69909415*(bp)-630.4813557*(s1)+393.50457699*(s2)+20.19357534*(s3)+112.73522418*(s4)+696.38689731*(s5)+36.59645541(s6) + 150.04613206397468\nMean Squared Error (MSE) is: 2822.72\nR^2 is: 0.60\nTherefore, we can make the conclustion that the diabetes disease progression depends on these factors, including age, sex, body mass index, average blood pressure, six blood serum measurements.\n'], 'url_profile': 'https://github.com/sylvia-yang', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['3']], 'contributions': '103 contributions\n        in the last year', 'description': ['Diabetes-Prediction-App\nhello\n'], 'url_profile': 'https://github.com/Rheasri1200', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '38 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Jisyari', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '9 contributions\n        in the last year', 'description': ['Diabetes-Classification-Model\nAn application which when provided with certain medical numbers, predicts whether the subject has diabetes or not\n'], 'url_profile': 'https://github.com/Monisha-20', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'Cairo, Egypt ', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '19 contributions\n        in the last year', 'description': ['Diabetes-Disease-Classification\n'], 'url_profile': 'https://github.com/ahmedrafe', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['EDA_on_diabetes\n'], 'url_profile': 'https://github.com/ektasharma21', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '43 contributions\n        in the last year', 'description': ['Diabetes_ml_data\n'], 'url_profile': 'https://github.com/Task2294', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Nov 18, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'Jupyter Notebook', 'Updated Oct 6, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['EDA_on_diabetes\n'], 'url_profile': 'https://github.com/ektasharma21', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'Dublin, Ireland', 'stats_list': [['3', '          followers'], ['5', '          following'], ['0']], 'contributions': '53 contributions\n        in the last year', 'description': [""Domain Application of Predictive Analytics Project\nProject Title - Predictive analysis on Diabetes using Machine learning\n🎓 Need to Know\nThis project uses the Random Forest algorithm in predicting Diabetes in PIMA Indians. You can visit the Project Report for more information and results of the work.\n🚀  Setup\nFor the application to run on your local machine, you would need to install the following:\n\nR\nR Studio\n\nYou can get them on R's official website https://rstudio.com/products/rstudio/download/\n📥 Installation\n\n\nClone this repo\nor\n\n\nOpen Git Bash or Terminal\n$ git clone https://github.com/victoryuwaoma/DAPA-Project\n\nHappy coding! 💙\n\n\n""], 'url_profile': 'https://github.com/victoryuwaoma', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'Greece, Thessaloniki', 'stats_list': [['8', '          followers'], ['17', '          following'], ['6']], 'contributions': '1,246 contributions\n        in the last year', 'description': ['Sacchon Diabetes Management App Instructors\n\n\nWe create a Database with the name Sacchon in Microsoft SQL server Management Studio.\n\n\nWe run the IntellJ IDEA the BackEnd Folder, where in persistence file put the verb create.\n\n\nNext we will Open The Visual Studio Code (FrontEnd) folder and in terminal we will run to commands:\nnpm install (modules Download)\nng serve –o (Open the program to Browser)\n\n\nThen we will view the table which are created to Database when we run the IntellJ:\nConsultation\nMeasurement\nPatientDoctorAssociation\nUsers\n\n\nNext will view EndPoints in POSTMAN\n\n\nv0.9.82\nAbout users____________________________________________________________________\n@Get     http://localhost:9000/sacchon/users\nIt returns all users\n@Post    http://localhost:9000/sacchon/users\nYou send email and passwordand returns a jpson {""role"": ""ROLE_DOCTOR"",""unreadConsultations"": 0 }. If is Ν/Α it is exception the data are not valid.\n{\n""userEmail"":""giannhs@hotmail.com"",   (it must be valid)\n""userPassword"": ""123456""  (6chars)\n}\n@Put    http://localhost:9000/sacchon/users\nAdd new User to database (Register)\n{\n""first_name"": ""Giannhs"",\n""last_name"": ""Papa"",\n""email"": "" giannhs@hotmail.com "",   (Unique)\n""password"": ""123456"",\n""accountType"": 2,  (0:NA, 1 ADMIN, 2 is Doctor when Admin accept him,  3 Patient ,4 doctor register pedding)\n""amka"": 12321263,  (Unique)\n""mobile_phone_number"": 6986867684,\n""address"": ""Ipiroy"",\n""gender"": 2 (0: NA, 1: Male, 2 Female)\n}\nAbout check servers works___________________________________________________________\n@Get    http://localhost:9000/sacchon/ping\nIt returns a msg that server works\nAbout measurements________________________________________________________________\n@Get @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/measurements?measurementID=2\nIt return specific measurement without body, only url attribute ?measurementID=\n+++++++++++++++++++++++++++++++++++++++++++++\n@Post @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/measurements\nAdd new measurement\n{\n""user"": 3,\n""bloodGlucoseLevel"": 10,\n""carbIntake"": 1000\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Put @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/measurements\nIt updates the fields in the body. For this we use and the get and put to measurements. With update is sends and id number which concurrently save to database.\n{\n""measurementID"": 3,\n""bloodGlucoseLevel"": 10,\n""carbIntake"": 1000,\n""measurementDate"": ""2012-04-30T02:15:12.356Z""\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Delete @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/measurements?measurementID=3\nWithout body, Only measurementID= as url attribute. It DELETES the measurement with this id.\n+++++++++++++++++++++++++++++++++++++++++++++\n@Patch @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/measurements\nIt brings the measurements based on the input sent by the user (to turn all the measurements){\n""amka"": 1,\n""startAt"": ""2020-08-30T02:15:12.356Z"",\n""endAt"": ""2020-10-30T02:15:12.356Z""\n}\nAbout profile_______________________________________________________________________\n@Get @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/profile\nReturns all user fields\n+++++++++++++++++++++++++++++++++++++++++++++\n@Put @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/profile\nRefreshes all the fields we pass in the body\n{\n""first_name"": ""Dimitrhs"",\n""last_name"": ""giannakopoulos"",\n""email"": ""Dim@gmail.com"",\n""password"": ""123123"",\n""amka"": 123,\n""mobile_phone_number"": ""Dim"",\n""phone_number"":""Dim"",\n""address"": ""Dim"",\n""gender"": 1\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Delete @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/users/interacts\nDeletes the specific user.  And it frees him from the rest of the tables.\nAbout Patients_____________________________________________________________________\n@Get  @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/patient\nReturns all patients\n+++++++++++++++++++++++++++++++++++++++++++++\n@Post @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/patient\nReturns all measurements of the user who called it (I get the email from auth). Body attr are not mandatory if added simply limit the results.\nIf userID is included then it does NOT take the measurements of the user who called it but the measurements of the user with the Specific ID\n{\n""userID"": 3,\n""startAt"": ""2020-08-30T02:15:12.356Z"",\n""endAt"": ""2020-10-30T02:15:12.356Z""\n}\nAbout Doctors______________________________________________________________________\n@Get @Auth(EMAIL && PASSWORD)  http://localhost:9000/sacchon/doctors\nReturns all online doctors\nAbout Searching users_______________________________________________________________\n@Post    http://localhost:9000/sacchon/users/interacts\nLooking for a specific user based on AMKA. If the ""role"" is added to the body, it will check whether there is a user with this AMKA, and whether the role fits\n{\n""amka"" : 126,\n""role"" : 1\n}\nAbout Association Patient and Doctor________________________________________________\n@Get @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/associations\nBase on categoryType (url attribute) user gives, it return a list with patient/doctors that is active\nnull = patients with Doctor that call url\n1 = patients without Doctor\n2 = patients with Doctors\n3 = All patients that are also active\n+++++++++++++++++++++++++++++++++++++++++++++\n@Put @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/associations\nUPDATE the existing registration. The patiend is the patient\'s id and is mandatory The doctor is again the doctor\'s id but it is mandatory. !!! SOS !!! the id that is entered must have correct roll, because I check if the doctor or the patient, before registration and if it is not correct I throw a exception.\n{\n""patient"": 2,\n""doctor"": 1,\n""isActive"": true\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Post @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/associations\nRegisters the existing registration. The patiend is the patient\'s id and is subordinate. The doctor is the doctor\'s id but it is NOT mandatory. !!! SOS !!! the id that is entered must have a correct role because I check if the doctor is a patient before the registration and if it is not correct I throw an exception.\n{\n""patient"": 2,\n""doctor"": 1\n}\nAbout Doctor Expired Session________________________________________________________\n@Get @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/expired?needDoctors=false\nReturns all doctors (if? NeedDoctors = true) or patients (if? NeedDoctors = false) who have to login for more than 15 days\nAbout Consulate___________________________________________________________________\n@Get @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultatio?categoryType=2&consultationID=2\nGet consultation for specific users Based on ?categoryType= (url attribute)\nif Add as url attribute the ?consultationID=  it will return a specific consultation with given specificic counsultation id\nnull = users that call url consultations\n-1 = All consultations\nx(id) = All consultations for x user\n+++++++++++++++++++++++++++++++++++++++++++++\n@Post @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultation\nEnter a new consult with the following information. PatientID is mandatory!\n{\n""patientID"": 3,\n""registerDate"": ""2012-04-30T02:15:12.356Z"",\n""consultationMsg"": ""This is the test "",\n""isRead"": true\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Put @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultation\nUpdates consultation with the specific consultation, with the following information. PatientID and consulationID are required !!\n{\n""consultationID"": 1,\n""patientID"": 3,\n""registerDate"": ""2012-04-30T02:15:12.356Z"",\n""consultationMsg"": ""This is the test "",\n""isRead"": true\n}\n+++++++++++++++++++++++++++++++++++++++++++++\n@Delete @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultation?consultationID=1\nWithout body ... Only with consulationID = as url attribute\nDeletes the consulate with the specific consultationID\n+++++++++++++++++++++++++++++++++++++++++++++\n@Patch @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultation\nReturns consultations for a specific doctor for a specific period\n{\n""amka"": 1333,\n""startAt"": ""2012-04-30T02:15:12.356Z"",\n""endAt"": ""2020-10-30T02:15:12.356Z""\n}\nAbout Average_____________________________________________________________________\n@Post @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/data\nReturns the averages from the measurements depending on the fields to be entered and returns a body like the examples\n{\n""amka"": 5344,\n""userID"": 1,\n""startAt"": ""2020-10-30T02:15:12.356Z"",\n""endAt"": ""2020-11-30T02:15:12.356Z""\n}\n!!!!!! And the following body returns !!!!!!!!!\n{\n""avgCarbIntake"": 50.0,\n""avgBloodGlucoseLevel"": 200.0,\n""numberOfResults"": 1\n}\nAbout Pending Doctors_______________________________________________________________\n@Get @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/pending\nReturns all doctors with Account Type ROLE PENDING\n+++++++++++++++++++++++++++++++++++++++++++++\n@Post @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/pending\nActivates (from pending account type to doctor account type) the user with the userID that was given\n{\n""userID"": 12\n}\nAbout Wait consultations up to 30 days_____________________________________________\n@Get @Auth(EMAIL && PASSWORD) http://localhost:9000/sacchon/consultation/wait\nReturns all users who need to get a consultation because more than 30 have passed as well as the days that have passed since the last consultation.\nExample body that you return !!!!! [\n{\n""patientsId"": 7,\n""daysFromLastConsultation"": 85\n}\n]\nAdmin user register from Database.\nExists auth from the Front and  Back end for the users\nFront End have all validators\nWhen register as doctor, you should wait for admin to accept you. \n\n'], 'url_profile': 'https://github.com/DimitrisDimtriadis', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'Cincinnati, OH', 'stats_list': [['3', '          followers'], ['4', '          following'], ['2']], 'contributions': '39 contributions\n        in the last year', 'description': [""pima-indians-diabetes-prediction\nBackground: \nIn 1988, Smith et al. published 'Using the ADAP Learning Algorithm to Forecast the Onset of Diabetes Mellitus,' a forecast of Diabetes onset for a high risk population of Pima Indian women, age 21+. Given the sample size is small and underlying functional relationship unknown for data features, the researchers believed traditional statistical approaches would yield disappointint results - Instead, the researchers used an early neural network model, ADAP. \nIn predict_diabetes_status.ipynb, we will examine the study data, build a few models, and assess performance. Work in Progress\nObjective: \nUsing baseline data, can you predict whether a woman of Pima Indian heritage will develop Diabetes within 5 years? \nDoes the resultant model outperform the ADAP model used in the original research?\nAbout the Data: \nThe dataset consists of 8 medical predictors and a target variable, Outcome. Below are data definitions:\n\nPregnancies - Number of times pregnant\nGlucose - Plasma Glucose Concentration at 2 hours in an oral Glucose Tolerance Test (GTT)\nBloodPressure - Diastolic Blood Pressure (mm Hg)\nSkinThickness - Triceps Skin Fold Thickness (mm)\nInsulin - 2-Hour Serum insulin (uU/ml)\nBMI - Body Mass Index (Weight in kg/(Height in m2))\nDiabetesPedigreeFunction - A custom indicator of diabetes hitory in relatives, built for study\nAge - Age (years)\nOutcome - 1/0 flag indicating whether patient developed Diabetes within 5 years\n\nPredictors are reported as of an initial medical visit. The outcome variable reflects follow-up medical visits in the 5+ years following the initial visit.\nResources: \nKaggle Dataset \nOriginal Research\n""], 'url_profile': 'https://github.com/lorilist', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['0', '          following'], ['0']], 'contributions': '108 contributions\n        in the last year', 'description': [""XGBoost applied to a Kaggle dataset.\nFollowing Josh Starmer's tutorial on a different dataset\n(youtube: https://www.youtube.com/watch?v=GrJP9FLV3FE&t=246s&ab_channel=UnfoldDataScience)\n""], 'url_profile': 'https://github.com/Xalt8', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'Dallas, TX', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['Healthcare-Diabetes-Competetion---Classification\nClassifying people with Diabetes and no Diabetes for my University Hackathon Competition. Stood 2nd place. Competed against around 250 individuals\nAim: Correctly identify the people with diabetes \nData Source: Unknown \nDeveloped in: Python \nInterest: I have developed this ML Code for my University Competetion. \nStatistical Modelling Used: None \nAlgorithms Used: Logistic, Random Forest, Decision Tree, KNN, SVM \nVariable Selection Method: None \nBest Model: SVM \nAccuracy: .77 \n'], 'url_profile': 'https://github.com/amiteshreddy', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'Lonavala,Maharashta,India', 'stats_list': [['6', '          followers'], ['4', '          following'], ['29']], 'contributions': '186 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Naive-Bayes\nThis model is used to predict whether or not patient will have diabetes.\n'], 'url_profile': 'https://github.com/saurabh-maurya', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '438 contributions\n        in the last year', 'description': [""PIMA-Diabetes-Kaggle-Problem-Statement\n  \nThis repository consists of files required for end to end implementation and deployment of Machine Learning Diabetes Predictor web application created with flask and deployed on the Heroku platform.\nTable of Contents\n\nApp Link\nAbout the App\nDeployement on Heroku\nTechnologies Used\nBug / Feature Request\n\nApp Link\nIf you want to view the deployed model, click on the following link:\nhttps://diabetescheckup.herokuapp.com/\nA glimpse of the web app:\n\n\n• If you encounter this webapp as shown in the picture given below, it is occuring just because free dynos for this particular month provided by the Heroku platform have been completely used. You can access the webpage on 1st of the next month.\n• Sorry for the inconvenience.\n\nAbout the App\nThe Diabetes Predictor is a flask web application which diagnostically predicts whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset like Pregnancies, Skin Thickness, BMI, Age, Glucose etc. The code is written in Python 3.6.10. Here, I have implemented various Classification techniques and since the dataset is fairly balanced in terms of 0 and 1 outcomes, the best accuracy which I could come up with was 77.604% using ensemble RANDOM FOREST classifier.\nNote: In the dataset some independent variables(diagnostic measurement parameters) have '0' values like Insulin, Blood Pressure(which realistically can't be zero). So, I have tried to replace those '0' values by using imputer technique.\nIf you don't have Python installed, you can find it here. If you are using a lower version of Python you can upgrade using the pip package, ensuring you have the latest version of pip. To install the required packages and libraries, run this command in the project directory after cloning the repository:\npip install -r requirements.txt\nDeployement on Heroku\nLogin or signup in order to create virtual app. You can either connect your github profile or download ctl to manually to deploy this project.\n\nThe next step would be to follow the instruction given in the Heroku Documentation to deploy a web app.\nTechnologies Used\n\n  \nBug / Feature Request\nIf you find a bug (the website couldn't handle the query and / or gave undesired results), kindly open an issue here by including your search query and the expected result\nPlease do ⭐ the repository, if it helped you in anyway.\n""], 'url_profile': 'https://github.com/divyansh1195', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['1', '          following'], ['3']], 'contributions': '103 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Rheasri1200', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '46 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/crystinaintan', 'info_list': ['Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'R', 'Updated Nov 4, 2020', 'Java', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Oct 16, 2020', 'Updated Oct 11, 2020', '1', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 3, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', 'JavaScript', 'Updated Feb 15, 2021']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['Diabetes-data-prediction-using-pytorch\n'], 'url_profile': 'https://github.com/Nikunjgarg04', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['14', '          following'], ['16']], 'contributions': '12 contributions\n        in the last year', 'description': ['Diabetes_Prediction-And-Analysis-of-ROC-curve\nIn This Repository, I put Jupyter File Which has following Topics Cover:\n   import pandas as pd\n   import numpy as np\n   import matplotlib.pyplot as plt\n   import seaborn as sns\n   %matplotlib inline\n\n1. Data Preprocessing\n\nHandle Null Values\nDeal with Outliers\nScale data With from sklearn.preprocessing import StandardScaler\n\n2. Build Model\n\n\nKNearestNeighbors\n\nFor more accuracy Decide n_neighbor value.\nROC CURVE Analysis\n\n\n\nLogistic Regression\n\nROC CURVE Analysis\n\n\n\nRandom Forest\n\nROC CURVE Analysis\n\n\n\n3. Analysis of ROC CURVE (KNN, Logistic Regression, Random Forest)\n'], 'url_profile': 'https://github.com/nisarg260', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['Diabetes Drug Testing\nContext:\nYou are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n'], 'url_profile': 'https://github.com/sebasyero94', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '68 contributions\n        in the last year', 'description': ['Diabetes-Patient-s-Hospital-Readmission-Prediction\nHospital readmission is an indicator of the quality of care and is a driver for the increasing cost of healthcare. Like other chronic diseases, Diabetes is associated with a higher risk of hospital readmission. In this project, we evaluate several machine learning approaches to predict the probability of hospital re-admissions for diabetic patients. The data set used for this study contains more than 100,000 diabetic patient data and 50 variables including length of stay, insulin, and in-patient visits from hospitals in the United States. We leverage several pre-processing techniques and investigate the performance of the various models. The signiﬁcant variables contributing to the analysis are the number of in-patients, length of stay, number of medications, number of diagnoses, and age. The results demonstrate the viability of the techniques in providing a better understanding of factors inﬂuencing hospital re-admission.\nDifferent files for preprocessing, modelling and important features have been uploaded in different files.\n'], 'url_profile': 'https://github.com/annkurillose', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['12', '          following'], ['0']], 'contributions': '36 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sadikzoturk', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Oct 10, 2020', '1', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Updated Oct 8, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 7, 2020', 'Updated Oct 6, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-6244-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes mellitus  prediction using IBM Auto AI service\nNode-RED Output URL:\nhttps://node-red-phvlz-2020-10-18.eu-gb.mybluemix.net/ui\nProject Demo Video: https://drive.google.com/file/d/1S8EbtScvi9rv7XOtA4pSCd8JOvaqGEY-/view?usp=sharing\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'Melbourne & Geelong, Australia', 'stats_list': [['16', '          followers'], ['21', '          following'], ['45']], 'contributions': '591 contributions\n        in the last year', 'description': ['mitoG\nRNA-seq analysis of whether mitoG attenuates diabetes\n'], 'url_profile': 'https://github.com/markziemann', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 28, 2020', 'Updated Oct 5, 2020', 'Updated Oct 9, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-5780-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes mellitus  prediction using IBM Auto AI service\nhttps://youtu.be/TViX2OEyveQ\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-6779-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes mellitus  prediction using IBM Auto AI service\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/moisheu', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-5568-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\n[Diabetes mellitus  prediction using IBM Auto AI service]\nhttps://drive.google.com/file/d/1vcZBf14ywpydmac2m3tbQ9TLitnjjtkV/view?usp=sharing\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-5937-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes mellitus  prediction using IBM Auto AI service\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 16, 2020', 'Updated Oct 10, 2020', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 17, 2020', 'Updated Oct 10, 2020', 'Updated Oct 9, 2020', 'Updated Oct 28, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-5580-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes mellitus  prediction using IBM Auto AI service\nThis is a web application where we can predict the Diabetes disease by giving the inputs as values...\nWe can predict whether a person is suffering from disease or not...\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['8']], 'contributions': '29 contributions\n        in the last year', 'description': ['diabete-early-detection\nMachine Learning for diabetic early detection with UCI diabetes dataset\nClone\n\nClone this repo to your local machine using\n$> git clone https://github.com/bangfutao/diabete-early-detection diabete-early-detection\n\nRun\nOpen ""diabete-early-detection.ipynb"" in jupyter notebook\n\nLicense(MIT)\n'], 'url_profile': 'https://github.com/bangfutao', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 9, 2020', 'Updated Oct 5, 2020', 'Updated Oct 8, 2020', 'Updated Oct 7, 2020', 'Updated Oct 7, 2020', 'Jupyter Notebook', 'Updated Oct 11, 2020', 'Updated Oct 20, 2020', '1', 'C', 'MIT license', 'Updated Oct 11, 2020', 'Updated Oct 9, 2020', 'Updated Oct 6, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['SPS-6794-Diabetes-mellitus-prediction-using-IBM-Auto-AI-service\nDiabetes Mellitus  Prediction using IBM Auto AI service\nDemo : https://drive.google.com/file/d/1wS1K0EnJwrzmKi86gqkT3mT4Ix_FktVV/view?usp=sharing\nDoc : https://workdrive.zohoexternal.com/writer/open/lyvm77a73536496134dcd9d135a798decc20e?authId=%7B%22linkId%22%3A%225k2wAp9MZGB-LYmlU%22%7D\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Oct 6, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Updated Oct 7, 2020', 'Updated Oct 5, 2020', 'Updated Oct 6, 2020', 'Jupyter Notebook', 'Updated Oct 18, 2020', 'Updated Oct 5, 2020', 'Updated Oct 11, 2020', 'Updated Oct 10, 2020']}"
"{'location': 'Germany', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '161 contributions\n        in the last year', 'description': ['insulin-calculator\n'], 'url_profile': 'https://github.com/Derion23', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'Nellore', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/prasanthkumarpundru', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'New Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mayankprasad1431992', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'New Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mayankprasad1431992', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'Nellore', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/prasanthkumarpundru', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'Beijing, China', 'stats_list': [['3', '          followers'], ['7', '          following'], ['28']], 'contributions': '172 contributions\n        in the last year', 'description': ['SVM-Diab\nSVM model implemented using Python,  basically aiming at Diabetes recognition toy dataset.\n'], 'url_profile': 'https://github.com/HoichunNG7', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '277 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/harrishere', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '3 contributions\n        in the last year', 'description': ['ENS2016-2017DM.Depresion.Suicidio\nEvaluación de la relación entre diabetes mellitus, depresión y suicidio en base a la ENS 2016-2017 Chile\nBases de datos ENS 2016-2017 y documentos asociados:\nhttp://epi.minsal.cl/resultados-encuestas/\n'], 'url_profile': 'https://github.com/ninsimoleon', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '8 contributions\n        in the last year', 'description': ['Capstone-Project---Healthcare\nThe objective is to predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset\n'], 'url_profile': 'https://github.com/singhpurnima091', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}","{'location': 'Barcelona', 'stats_list': [['1', '          follower'], ['5', '          following'], ['1']], 'contributions': '227 contributions\n        in the last year', 'description': ['CVD_REAL\nCharacteristics and cardiovascular and mortality outcomes in patients with type 2 diabetes mellitus initiating treatment with sodium-glucose co-transporter-2 inhibitors and other diabetic medications\n'], 'url_profile': 'https://github.com/jrealgatius', 'info_list': ['JavaScript', 'MIT license', 'Updated Jan 26, 2021', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Jupyter Notebook', 'Updated Oct 8, 2020', 'Updated Oct 11, 2020', 'Jupyter Notebook', 'Updated Nov 4, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 5, 2020', 'Scheme', 'GPL-3.0 license', 'Updated Nov 23, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['8']], 'contributions': '29 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Macedo-SF', 'info_list': ['Python', 'Updated Oct 21, 2020', 'HTML', 'Apache-2.0 license', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Oct 10, 2020']}","{'location': 'Pune', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '410 contributions\n        in the last year', 'description': [""MedTest Machine Learning Application\n\n This is complete End to end ML Application in Healthcare sector.\nThis Web App makes predictions about various diseases like Heart, Diabetes, Cancer, Malaria, Pneumonia, Diabetes etc.\n\n Below are the names of the various model used:\n\nCancer model = model\nDiabetes model = model1\nHeart model = model2\nLiver model = model4\nKidney model = model3\nMalaria model = model111.h5\nPneumonia model = my_model.h5\n\n\n Kernals used for training deep learning model \n\nKernal for Malaria model :https://www.kaggle.com/mandarkulkarnipune/malaria-detection-model\nKernal for Pneumonia model :https://www.kaggle.com/mandarkulkarnipune/pneumonia-detection-model\n\n\n Details of various datasets used for model development : \n\nCancer : cancer.csv [In the repository]\nDiabetes : diabetes.csv [In the repository]\nHeart : heart.csv [In the repository]\nLiver : https://www.kaggle.com/uciml/indian-liver-patient-records \nKidney : https://www.kaggle.com/mansoordaku/ckdisease \nMalaria :  https://www.kaggle.com/iarunava/cell-images-for-detecting-malaria \nPneumonia:  https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia \n\n\n Tools used for project development: \n\nPython ( 3.7 version)\nFlask\nOpenCV\nPandas\nNumpy\nHTML\nCSS\n\n\n Screenshots \n\n\n\n\n\n\n\n\n\n\n For using the project clone the repository and type the following commands in the termial: \n\n pip install -r requirements.txt\n python app.py\n\n\n The complete project is deployed on Heroku Cloud.\n  Here is the link where you can access the project live : https://medtestmlwebapp.herokuapp.com \n If you like this repo, please don't forget to give a ⭐.\n\n""], 'url_profile': 'https://github.com/mandar196', 'info_list': ['Python', 'Updated Oct 21, 2020', 'HTML', 'Apache-2.0 license', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '55 contributions\n        in the last year', 'description': ['ml_visualizations\nUses PIL, Matplotlib.\nVisualizes images from pixels using the MNIST dataset: https://www.kaggle.com/c/digit-recognizer/data\nCreates and visualizes a mean image for each digit based on pixel values for first 100 images.\nCreates scatter plot, histogram, and bar chart for visualizing Pima Indians Diabetes dataset: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/wolferobert3', 'info_list': ['Python', 'Updated Oct 21, 2020', 'HTML', 'Apache-2.0 license', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Oct 10, 2020']}","{'location': 'India', 'stats_list': [['4', '          followers'], ['4', '          following'], ['3']], 'contributions': '69 contributions\n        in the last year', 'description': [""Diabetic-Retinopathy-Detection\nDiabetic retinopathy (die-uh-BET-ik ret-ih-NOP-uh-thee) is a diabetes complication that affects eyes. It's caused by damage to the blood vessels of the light-sensitive tissue at the back of the eye (retina). At first, diabetic retinopathy may cause no symptoms or only mild vision problems.\n""], 'url_profile': 'https://github.com/harsh674', 'info_list': ['Python', 'Updated Oct 21, 2020', 'HTML', 'Apache-2.0 license', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Oct 10, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '55 contributions\n        in the last year', 'description': ['ml_knn\nK-Nearest-Neighbors model using Numpy for matrix multiplication.\nTraining and testing data used in this script can be found at https://www.kaggle.com/c/digit-recognizer/data and https://www.kaggle.com/uciml/pima-indians-diabetes-database. Prints a confusion matrix to csv in the directory of the current file. Includes functions for computing Euclidean, Manhattan, and Cosine distance. Also includes functions for feature scaling and normalization of sparse data.\n'], 'url_profile': 'https://github.com/wolferobert3', 'info_list': ['Python', 'Updated Oct 21, 2020', 'HTML', 'Apache-2.0 license', 'Updated Oct 7, 2020', 'Python', 'Updated Oct 10, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Oct 10, 2020']}",,,,,
