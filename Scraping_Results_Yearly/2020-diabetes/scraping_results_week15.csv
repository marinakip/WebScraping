"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '19 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/durott01', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/1981Maria', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'Hyderabad', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '26 contributions\n        in the last year', 'description': ['diabetes\nUsing various machine learning algorithms to get the best prediction accuracy if possible for the Pima Indians dataset.\nThe best result was found with Random Forest with an accuracy of 83%.\nINSTALL\nPython version used in this project: 3.6.6\nLIBARIES USED:\nPandas 0.23.4\nNumpy 1.15.3\nMatplotlib 2.2.2\nScikit-learn 0.20.0\n'], 'url_profile': 'https://github.com/nishithagampa', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'Paris', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['Diabetes\nThe data was collected and made available by “National Institute of Diabetes and Digestive and Kidney Diseases” as part of the Pima Indians Diabetes Database. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here belong to the Pima Indian heritage (subgroup of Native Americans), and are females of ages 21 and above.\nFirst of all, download and read the data from the CSV file and manipulate it as desired.\n'], 'url_profile': 'https://github.com/jose3g', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['8']], 'contributions': '91 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sandeepr16', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['4', '          following'], ['0']], 'contributions': '54 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tainaracamila', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['DiabetesDementia\nMendelian Randomization: diabetes and dementia HRS 2010 wave\n'], 'url_profile': 'https://github.com/crismorataya', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/1981Maria', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['3', '          following'], ['6']], 'contributions': '218 contributions\n        in the last year', 'description': ['An Analysis on the Relationships between Behavioral/Physiological Factors and Diabetes\nI have an interest in sports, nutrition, and how to maintain certain habits in order to increase athletic performance and overall bodily health. I also have family members who suffer from diabetes and want to be able to better inform them about how to manage their blood sugar and lifestyle choices. In this analysis, I dive into a few factors that I believe would have an impact on diabetes prevalence in the United States. My goal is to stimulate further curiosity and investigation into the factors that have the most impact on diabetes.\nData Sources\nI gathered 2 sources of data from the Center for Disease Control & Prevention (CDC):\n\nNutrition, Pysical Activity, and Obesity in US States - 2011-2018\n500 Cities Data - 2017\n\nBackground Information\n\nIn 2018, 34.2 million Americans, or 10.5% of the population, had diabetes\nThe estimated total economic cost of diagnosed diabetes in 2012 is $245 billion, a 41% increase from our previous estimate of $174 billion (in 2007 dollars)\nExercise helped to lower insulin resistance in previously sedentary older adults with abdominal obesity at risk for diabetes (Resistance training and aerobic) - Harvard Study\nCross sectional, prospective and retrospective studies have found significant association between physical inactivity and Type 2 Diabetes\n\nExploratory Data Analysis\nIn order to make sense of the data from the CDC, I performed some exploratory data analysis. First, from the Nutrition, Physical Activity, and Obesity dataset, I wanted to see the distribution of the actual data collected. I wanted to draw some parallels to the idea of normal distributions and how most of the random variables in nature are randomly distributed. As can be seen below, the distribution for the Inactivity data resembles a normal distribution.\n\nI wanted to further analyze the dataset, so I chose a few factors to look at: Inactivity, Obesity, Lack of Fruit Consumpiton, and Lack of Vegetable Consumption. The following picture shows the distribution of data for the above mentioned factors of interest.\n\nNext, I was interested in viewing the percent obesity in certain US states. I chose the states with the highest population size because I thought they may have relatively higher diabetes prevalence than states with a smaller population. I also included New Jersey because I wanted to have a comparison with my home state.\n\nAs seen from the graph, Texas has the highest percent of their population suffering from obesity. The state with the lowest percent of their population suffering from obesity seems to be California. This means that population size may not be indicative of obesity prevalence.\n\nIn many studies, inactivity has been shown to be a contributing factor to illness. This may have to do with the numerous biochemical molecules, that are released during exercise but are absent during inactivity, which play a vital role in regulating weight, stress, metabolism, and other physiological factors.\n\nNutrition is another widely studied but not well understood lifestyle factor. It is a very complex area of study, which must take into account not only absolute quantities but relative as well. If one consumes sugar but also has a relatively high amount of fat and some protein, the sugar is not processed by the body in the same way as if one would only be consuming sugar. There are many synergistic effects that must be taken into account when analyzing food intake. Water is also very important in maintaining and ensuring efficient digestion, temperature regulation, and many more vital bodily functions.\n\xa0\n\xa0\n\xa0\n\xa0\nI was interested in seeing the relationship among: Inactivity, Obesity, Fruit Consumption, and Vegetable Consumption. For this I constructed a correlation matrix visualized as a heatmap. The graph shows the strength of relationships, based on hue, for each of the factors of interest. This correlation matrix was constructed from the Nutrition, Physical Activity, and Obesity dataset provided by the CDC.\n\n\xa0\n\xa0\nIn the heatmap shown below, the data was taken from the 500 Cities Dataset. This dataset included a few more measures that I found interesting to look at with regards to diabetes. The measures I focused on were: Inactivity, Lack of Sleep, Binge Drinking, Smoking, Diabetes, and Obesity.\n\n\xa0\n\xa0\nIt is important to note that there was a NEGATIVE correlation between binge drinking prevalence and diabetes prevalence. There have been studies showing that while moderate alcohol use can increase blood sugar, heavy alcohol use results in a significant drop in blood sugar and can be lethal. For this reason, many doctors advise their diabetic patients to monitor their alcohol intake more closely. Further investigation should be done that takes into consideration other reasons for this negative correlation.\n\n\xa0\n\xa0\nWhen viewed next to each other, these graphs can give us an idea of overall relatedness between the lifestyle factors and diabetes prevalence. Using this information, models can be constructed that could then be used to predict diabetes prevalence given a set of lifestyle factors. This could be used by governments and public officials to determine what kind of funding to allocate for nutrition and health services, as well as how to best fund programs that could curtail the economic effects of diabetes on our healthcare system.\n\n\xa0\n\xa0\nData analysis can be a very powerful tool that gives us insights to questions that are otherwise very difficult to analyze. The advancement of computers, the internet, and other technologies have provided us with the ability to visualize and study complex relationships among factors of interest. These tools and abilities can guide us in asking the proper questions and coming to the best possible conclusions in order to provide predictive power to those who implement these techniques in real world applications.\nConlusion\n\nMore studies should be conducted to analyze the impact of lifestyle on type 2 Diabetes: Exercise, Sleep, Nutrition, Stress Levels, Drug Use\nExercise can lower insulin resistance and should be incorporated into a holistic treatment for people suffering from diabetes\nAlthough the relationship between nutrition and diabetes is complex, the most harmful products to consume are carbonated beverages\nOther factors like lack of sleep seem to have a high correlation with diabetes incidence - why?\n\nNext Steps\n\n\nGather more accurate information about lifestyle choices\n\n\nGather information about economic burden due to diabetes\n\n\nFigure out what kind of effect exercise and better nutrition would have on diabetes related healthcare costs\n\n\nAdjust the analysis to include the population size\n\n\n'], 'url_profile': 'https://github.com/moonbeam5115', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}","{'location': 'Greater Boston Area', 'stats_list': [['6', '          followers'], ['3', '          following'], ['0']], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shikhar42', 'info_list': ['Jupyter Notebook', 'Updated May 13, 2020', 'Updated Apr 11, 2020', 'Updated Apr 6, 2020', 'Updated Apr 9, 2020', 'Python', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 9, 2020', 'Updated Apr 8, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 29, 2020', 'R', 'Updated Apr 8, 2020']}"
"{'location': 'Boston, MA', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '35 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pragyabhandari', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'Greater Boston Area', 'stats_list': [['6', '          followers'], ['3', '          following'], ['0']], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shikhar42', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['DiabetesUsingMachineLearning\n'], 'url_profile': 'https://github.com/Maheshreddy5599', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nehaparekh', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '2 contributions\n        in the last year', 'description': ['\n\n\npage_type\nlanguages\nproducts\ndescription\n\n\n\n\nsample\n\n\n\npython\n\n\n\n\n\n\n\nazure\nazure-machine-learning-service\nazure-devops\n\n\n\n\nCode which demonstrates how to set up and operationalize an MLOps flow leveraging Azure Machine Learning and Azure DevOps.\n\n\n\nMLOps with Azure ML\n\nMLOps will help you to understand how to build a Continuous Integration and Continuous Delivery pipeline for an ML/AI project. We will be using the Azure DevOps Project for build and release/deployment pipelines along with Azure ML services for model retraining pipeline, model management and operationalization.\n\nThis template contains code and pipeline definitions for a machine learning project that demonstrates how to automate an end to end ML/AI workflow.\nArchitecture and Features\nArchitecture Reference: Machine learning operationalization (MLOps) for Python models using Azure Machine Learning\nThis reference architecture shows how to implement continuous integration (CI), continuous delivery (CD), and retraining pipeline for an AI application using Azure DevOps and Azure Machine Learning. The solution is built on the scikit-learn diabetes dataset but can be easily adapted for any AI scenario and other popular build systems such as Jenkins and Travis.\nThe build pipelines include DevOps tasks for data sanity tests, unit tests, model training on different compute targets, model version management, model evaluation/model selection, model deployment as realtime web service, staged deployment to QA/prod and integration testing.\nPrerequisite\n\nActive Azure subscription\nAt least contributor access to Azure subscription\n\nGetting Started\nTo deploy this solution in your subscription, follow the manual instructions in the getting started doc. Then optionally follow the guide for integrating your own code with this repository template.\nRepo Details\nYou can find the details of the code and scripts in the repository here\nReferences\n\nAzure Machine Learning (Azure ML) Service Workspace\nAzure ML CLI\nAzure ML Samples\nAzure ML Python SDK Quickstart\nAzure DevOps\n\nContributing\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\n'], 'url_profile': 'https://github.com/chetangordhan', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abbotsross1', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '19 contributions\n        in the last year', 'description': ['Machine learning projects\nPrediction of diabetes status\n'], 'url_profile': 'https://github.com/Dougy140', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/13HUGO', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '15 contributions\n        in the last year', 'description': ['Final-Year-Project\nDiabetes Prediction Model\n'], 'url_profile': 'https://github.com/aayush9929', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}","{'location': 'Pune', 'stats_list': [['27', '          followers'], ['36', '          following'], ['54']], 'contributions': '199 contributions\n        in the last year', 'description': ['diabetes-logisticregression\n'], 'url_profile': 'https://github.com/satyamuralidhar', 'info_list': ['R', 'Updated Apr 8, 2020', 'R', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 25, 2020', 'Python', 'MIT license', 'Updated Apr 6, 2020', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Updated Apr 10, 2020', 'PHP', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 6, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': [""pima_diabetes\nCodes for Kaggle contest of Pima diabetes predictions: https://www.kaggle.com/uciml/pima-indians-diabetes-database\nThis is also a classification problem.\nBut compared to Titanic, I tried a couple of new things: data visualization techniques; decision tree model; techniques of predictor selection and model assembling.\nSteps\n\n\nLoading train data\n\n\nExplore & visualize dataset\n\n\n\nCheck descriptive parameters\nPlot histograms\nHistogrms did not fit well for some feaures, therefore I also did box plot\n\n\nSelecting and pre-processing predictor\n\n\nCheck features' correlation by Pearson's r\nCheck dependence between stochastic variables and y by chi square. And select the top 4 features as the predcitor.\nStandardizing features\n\n\nAssembling multiple models.\n\n\nHere I chose LogisticRegression, KNeighborsClassifier, DecisionTreeClassifier and SVC.\n\n\nCross validation test the models and calculate accuracy score of each model.Then calculating the means of each model.\n\n\nI tried different numbers of folds here. Turned out SVC had the best score, and other models' score did not vary too much. Because at that time I was focusing on decision tree, so I chose to continue with decision tree model.\n\n\nOptimizing parameters of decision tree using GridSearchCV.\n\n\nResults returned that best score of 0.739331 using gini index and setting 'max_depth' at 5.\n\n\n\nFit the optimized model to train data.\n\n\nLoading test data\n\n\nPreprocessing test data\n\n\n\nsame as part of step 3\n\n\n\nImplementing model on test data\n\n\nLoading prediction results to a csv file\n\n\n""], 'url_profile': 'https://github.com/qhqqiu', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '20 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mithileshs66', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '85 contributions\n        in the last year', 'description': ['Deep Learning - MLP on Diabetes Dataset\nDeep Learning Homework 3 No. 9 | Indra Imanuel Gunawan - 20195118\nThere are two python files in this repository, one is implemented using Python Scikit-learn, while the other one is implemented using Keras. Both of them implemented MLP on the ""diabetes dataset"", which is also provided in this repository under the directory ""/data/diabetes.csv"". I will explain about the scikit-learn implementation first, then the Keras one.\nScikit-learn Implementation\nSetup\nInstall scikit-learn\npip install scikit-learn\nRun\nTo run the code, just type this on the terminal (make sure that the directory & environment is correct):\npython MLP_ScikitLearn_Diabetes.py\nResults\nThe results of the experiment include:\n\nThe program\'s accuracy on the training and test dataset\nThe confusion matrix on the training and test dataset\nThe classification report on the training and test dataset\nExplanation on how to get these results from the code will be explained in the ""Code Explanation"" section.\n\nAccuracy\n\nConfusion Matrix & Classification Report\nTraining Dataset\n\nTest Dataset\n\nCode Explanation\nFirst, import the required libraries and necessary modules\nimport pandas as pd\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\nThen, read the data using the pandas library, and set the value for X and y. The values for y is the data in the ""Outcome"" column, while the rest of the other columns are for the X.\n#Getting the data\ndf = pd.read_csv(\'data/diabetes.csv\')\n\n#Setting some variables\ntarget_column = [\'Outcome\']\npredictors = list(set(list(df.columns))-set(target_column))\ndf[predictors] = df[predictors]/df[predictors].max() #Normalizing the values for X\n\nX = df[predictors].values\ny = df[target_column].values\nSplit the data into training and test dataset. The training takes 70% of the dataset, while the test takes 30%.\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=40)\nBuild the model using the MLPClassifier abnd fit the training data on it\nmlp = MLPClassifier(hidden_layer_sizes=(8, 8, 8), activation=\'relu\', solver=\'adam\', max_iter=500)\nmlp.fit(X_train, y_train)\n\npredict_train = mlp.predict(X_train)\npredict_test = mlp.predict(X_test)\nThis code below is used to see the accuracy of the model:\nprint(""Training set accuracy: %f"" % mlp.score(X_train, y_train))\nprint(""Test set accuracy: %f"" % mlp.score(X_test, y_test))\nThis code below is used to see the Confusion matrix and Classification Report\n#Compare Training data result & original\nprint(""For Training Data:"")\nprint(""Confusion Matrix : "")\nprint(confusion_matrix(y_train, predict_train))\nprint(""Classification Report : "")\nprint(classification_report(y_train, predict_train))\n\n#Compare Test data result & original\nprint(""For Test Data:"")\nprint(""Confusion Matrix : "")\nprint(confusion_matrix(y_test, predict_test))\nprint(""Classification Report : "")\nprint(classification_report(y_test, predict_test))\nKeras Implementation\nSetup\nInstall Keras\npip install keras\nRun\nTo run this code, just type this on the terminal (make sure that the directory & environment is correct):\npython MLP_Keras_Diabetes.py\nResults\nHere are the summary of the model that has been created in this experiment, and the accuracy of the model when working on the ""diabetes dataset""\nModel Summary\n\nModel Accuracy\n\nCode Explanation\nFirst, import the required libraries and necessary modules\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\n\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\nfrom keras.optimizers import Adam\nRead the dataset and set the values for X and y\ndf = pd.read_csv(\'data/diabetes.csv\')\ntarget_column = [\'Outcome\']\npredictors = list(set(list(df.columns))-set(target_column))\ndf[predictors] = df[predictors]/df[predictors].max()\n\nX = df[predictors].values\ny = df[target_column].values\nSplit the data into training and test dataset. The training takes 70% of the dataset, while the test takes 30%.\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=40)\nSet the batch size, number of classes, and number of epoch in this experiment\nbatch_size = 128\nnum_classes = 2\nepochs = 500\nConvert the class vectors to binary class matrices.\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\nCreate a sequential model. This model consist of 1 input layer, 1 hidden layer, and 1 output layer, in which each of those layers are followed by a dropout layer with a 0.2 rate. Each layer use relu activation function, except for the output which uses softmax activation.\nmodel = Sequential()\nmodel.add(Dense(32, activation=\'relu\', input_shape=(8,)))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(64, activation=\'relu\'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(num_classes, activation=\'softmax\'))\n\nmodel.summary()\nCompile and fit the model to the data. The model uses categorical cross entropy for the loss function, and Adam as the optimizer\nmodel.compile(loss=\'categorical_crossentropy\',\n              optimizer=Adam(),\n              metrics=[\'accuracy\'])\n\nhistory = model.fit(X_train, y_train,\n                    batch_size=batch_size,\n                    epochs=epochs,\n                    verbose=1,\n                    validation_data=(X_test, y_test))\nSee the accuracy of the model\nscore = model.evaluate(X_test, y_test, verbose=0)\nprint(\'Test loss:\', score[0])\nprint(\'Test accuracy:\', score[1])\n'], 'url_profile': 'https://github.com/Indraa145', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '58 contributions\n        in the last year', 'description': ['Diabetes-Project\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nAttribute Information:\nNumber of times pregnant\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test\nDiastolic blood pressure (mm Hg)\nTriceps skin fold thickness (mm)\nHour serum insulin (mu U/ml)\nBody mass index (weight in kg/(height in m)^2)\nDiabetes pedigree function\nAge (years)\nClass variable (0 or 1)\nOverview of the project steps\n1.Prepare Problem\na) Load libraries needed for this problem\nb) Load dataset from Kaggle (Pima Indians Diabetes Database)\n2.Summarize Data\na) Descriptive statistics: summarizing the distribution of each attribute\nb) Data visualizations: drawing histograms, density, skewness and kurtosis of each attribute, to detect possible exponential and bimodal distributions, also the outliers - checking the target distribution (specific to classification problems) - visualizing interactions between attribute\n4. Evaluate Algorithms\na) Split-out validation dataset : using 80% of the dataset for modeling and hold back 20% for test\nb) Data Transforms & Spot-Check Algorithms: standardizing data and evaluating some alogorithms to get an idea on the performance of each algorithm, using the 10-fold cross-validation { Logistic Regression (LR), Linear Discriminant Analysis (LDA), k-Nearest Neighbors (KNN), Classiﬁcation and Regression Trees (CART), Gaussian Naive Bayes (NB), Support Vector Machines (SVM) }.\nc) Compare Algorithms\nd) Outliers investigation\ne) Feature selection : estimating the importance of features using Bagged decision trees like Random Forest and Extra Trees\n5. Improve Accuracy\na) Algorithm Tuning\nb) Ensembles\n6. Finalize Model : predictions on test dataset\n'], 'url_profile': 'https://github.com/melmliles', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '22 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abhi-rai', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'Dallas, Texas', 'stats_list': [['1', '          follower'], ['0', '          following'], ['3']], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SiddhuRaj', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'Kathmandu, Nepal', 'stats_list': [['3', '          followers'], ['6', '          following'], ['0']], 'contributions': '201 contributions\n        in the last year', 'description': ['Diabetes_Detection\nDiabetes_Detection using XGBOOST and RandomForest\n'], 'url_profile': 'https://github.com/suyogyaman', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '61 contributions\n        in the last year', 'description': ['This is a machine learning based Diebetes Prediction Project.\nGoal : ""Predict if a  person will develop diabetes""\nSolution Statement : ""Use the Machine Learning Workflow to process & transform Pima Indian data to create a prediction model.This model must predict which people are likely to develop diabetes with 70% or greater accuracy""\nAlgorithm Used : 1.Naive bayes\n2.Logistic Regression\n3.Logistic RegressionCV\nDataset Used : Pima Indian Diabetes Dataset\nLanguage Used : Python\nLibraries required :  1. Numpy\n2. Pandas\n3. Scikit-learn\n'], 'url_profile': 'https://github.com/thefudgesupreme', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'Hyderabad', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Bairyramu', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '56 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/McAdam-Mathew', 'info_list': ['Python', 'Updated Apr 12, 2020', 'Python', 'Updated Jul 21, 2020', 'Python', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated May 5, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Python', 'Updated Apr 8, 2020', 'HTML', 'Updated Apr 13, 2020', 'HTML', 'Updated May 1, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': [""Material Kit \n     \n\nMaterial Kit is a Free Bootstrap 4 UI Kit with a fresh, new design inspired by Google's material design. You asked for it, so we built it. It's a great pleasure to introduce to you the material concepts in an easy to use and beautiful set of components. Along with the restyling of the Bootstrap elements, you will find three fully-coded example pages, to help you design your next project.\nMaterial Kit makes use of light, surface, and movement. It uses a deliberate color choice, edge-to-edge imagery, and large scale typography. The general layout resembles sheets of paper following multiple different layers so that the depth and order are obvious. The navigation stays mainly on the left and the actions on the right.\nThis new design has elements that have been the result of research regarding ink and paper and the way objects and materials interact in real life. The result is a beautiful and consistent set of elements that can get you started with your next project. Material Kit is a great tool if you are looking to create a web presence for your Android application and need to be consistent, leaving the impression of visually similar elements. It is also a great resource in its own right, looking gorgeous and helping you build your web pages.\nMaterial Kit is based on the Github Repo from Fezvrasta who did an amazing job creating the backbone for the material effects, animations, and transitions. Big thanks to his team for their forward-thinking efforts.\nTable of Contents\n\nVersions\nDemo\nQuick Start\nDocumentation\nFile Structure\nBrowser Support\nResources\nReporting Issues\nUpgrade to Pro Version\nLicensing\nUseful Links\n\nVersions\n\n\n\n\nHTML\nReact\nVue\n\n\n\n\n\n\n\n\n\n\n\n\n\nReact Native\nFigma\nWordPress\n\n\n\n\n\n\n\n\n\n\nDemo\n\n\n\nButtons\nInputs\nNavbars\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin Page\nLanding Page\nProfile Page\n\n\n\n\n\n\n\n\n\n\nView More\nQuick start\n\nnpm i material-kit\nDownload from Github.\nDownload from Creative Tim.\nInstall with Bower: bower install material-kit.\nClone the repo: git clone https://github.com/creativetimofficial/material-kit.git.\n\nDocumentation\nThe documentation for the Material Kit is hosted at our website.\nFile Structure\nWithin the download you'll find the following directories and files:\nmaterial-kit/\n├── CHANGELOG.md\n├── LICENSE.md\n├── README.md\n├── assets\n│   ├── assets-for-demo\n│   ├── css\n│   │   ├── material-kit.css\n│   │   ├── material-kit.css.map\n│   │   └── material-kit.min.css\n│   ├── img\n│   ├── js\n│   │   ├── bootstrap-material-design.js\n│   │   ├── bootstrap-material-design.min.js\n│   │   ├── core\n│   │   │   ├── jquery.min.js\n│   │   │   └── popper.min.js\n│   │   ├── material-kit.js\n│   │   ├── material-kit.min.js\n│   │   └── plugins\n│   │       ├── bootstrap-datetimepicker.min.js\n│   │       ├── jasny-bootstrap.min.js\n│   │       ├── moment.min.js\n│   │       └── nouislider.min.js\n│   └── scss\n│       ├── bootstrap\n│       ├── core\n│       ├── material-kit.scss\n│       └── plugins\n├── bower.json\n├── docs\n│   └── documentation.html\n├── examples\n│   ├── landing-page.html\n│   ├── profile-page.html\n│   └── signup-page.html\n└── index.html\n\nBrowser Support\nAt present, we officially aim to support the last two versions of the following browsers:\n    \nResources\n\nDemo: https://demos.creative-tim.com/material-kit/index.html\nDownload Page: https://www.creative-tim.com/product/material-kit\nDocumentation: https://demos.creative-tim.com/material-kit/docs/2.1/getting-started/introduction.html\nLicense Agreement: https://www.creative-tim.com/license\nSupport: https://www.creative-tim.com/contact-us\nIssues: Github Issues Page\nDashboards:\n\n\n\n\nHTML\nReact\nVue\nAngular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHTML Dark\nVuetify\n\n\n\n\n\n\n\n\n\nReporting Issues\nWe use GitHub Issues as the official bug tracker for the Material Kit. Here are some advices for our users that want to report an issue:\n\nMake sure that you are using the latest version of the Material Kit. Check the CHANGELOG from your dashboard on our website.\nProviding us reproducible steps for the issue will shorten the time it takes for it to be fixed.\nSome issues may be browser specific, so specifying in what browser you encountered the issue might help.\n\nUpgrade to PRO Version\nAre you looking for more components? Please check our Premium Version of Material Kit right here.\nLicensing\n\n\nCopyright 2020 Creative Tim (https://www.creative-tim.com/?ref=mk-github-readme)\n\n\nLicensed under MIT (https://github.com/creativetimofficial/material-kit/blob/master/LICENSE.md)\n\n\nUseful Links\n\nTutorials\nAffiliate Program (earn money)\nBlog Creative Tim\nFree Products from Creative Tim\nPremium Products from Creative Tim\nReact Products from Creative Tim\nAngular Products from Creative Tim\nVueJS Products from Creative Tim\nMore products from Creative Tim\nCheck our Bundles here\n\nSocial Media\nTwitter: https://twitter.com/CreativeTim\nFacebook: https://www.facebook.com/CreativeTim\nDribbble: https://dribbble.com/creativetim\nInstagram: https://www.instagram.com/CreativeTimOfficial\n""], 'url_profile': 'https://github.com/mac-agency', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'Pune, India', 'stats_list': [['25', '          followers'], ['43', '          following'], ['12']], 'contributions': '135 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SehejBakshi', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'Hyderabad', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '26 contributions\n        in the last year', 'description': ['diabetes_project\nUsing various machine learning algorithms to get the best prediction accuracy if possible for the Pima Indians dataset.\nThe best result was found with Random Forest with an accuracy of 83%.\nINSTALL Python version used in this project: 3.6.6\nLIBARIES USED:\nPandas 0.23.4\nNumpy 1.15.3\nMatplotlib 2.2.2\nScikit-learn 0.20.0\n'], 'url_profile': 'https://github.com/nishithagampa', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['Discovering Informative Regions in Iris Images to Predict Diabetes\nThis work contains codes and datasets corresponding to detecting Informative regions in iris images related to diabetes.\n\nUsage\n\nCreate a python environment and run ""pip install -r requirements.txt""\nUnzip Data.zip. it contains compact version of preprocessed iris images based on different splittings\n(Right eye/ Left eye/ person-based).\n\nSome useful preprocessing modules are in ""pre processing"" folder.\n\n\nRun Main.py\n\nDataset\n\n88 diabetic and 108 control cases\nThe diabetic subjects were interviewed about their diabetes type, controlling manner and the stage of diabetic retinopathy if existed (for further investigations). The protocol used for data acquisition was under the supervision of Ophthalmologists of Farabi Hospital.\nDownload dataset from here.\n\nCitation\nIf you use this dataset or this code base in your work, please cite\n@inproceedings{iridology-icbme2018,\n  author    = {Parsa Moradi and Naghme Nazer and Amirhosein Khasahmadi and Hoda Mohammadzadeh and Hasan Khojasteh Jafari},\n  title     = {Discovering Informative Regions in Iris Images to Predict Diabetes},\n  booktitle = {In 2018 25th National and 3rd International Iranian Conference on Biomedical Engineering (ICBME)},\n  year      = {2018},\n}\n\nContact\nFor questions about our paper or code, please contact Naghme Nazer or Parsa Moradi.\n'], 'url_profile': 'https://github.com/NaghmeNazer', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['3', '          following'], ['0']], 'contributions': '56 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/sid-dot', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'Lynwood, Washington', 'stats_list': [['7', '          followers'], ['9', '          following'], ['7']], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saradgyawali', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'Bengaluru, Karnataka, India', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pradeepkumar4', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['7', '          following'], ['39']], 'contributions': '81 contributions\n        in the last year', 'description': ['糖人的二维打印机\n该项目是本人本科毕设，于 2018.6 完成\n简介\n糖人是中国传统食品，设计一款糖人自动打印机。\n\n\n融糖器用于将糖块融化并控制糖料的供给，以不锈钢加热圈为热源，实现四周均匀加热；通过 PID 算法对融糖器进行温控，使加热温度稳定在 120 摄氏度。\n\n\n设计二维移动平台，使用了 逐点比较法 作为打印机 x， y 轴电机的驱动控制算法，打印机以类似于雕铣机的加工方式绘制糖人的线条。\n\n\n制作 Android App 供用户操作打印机。应用通过蓝牙与打印机上的控制板（STM32F407）进行通讯。用户可以在手机屏幕上尽情设计糖人造型，并发送给糖人打印机进行制作。\n\n\nAndroid_App_Code 是App的实现代码，Stm32_Code 是打印机控制主板的程序\n\n\n\nSolidWork 设计图\n\n\n硬件间连接\n\n\n糖人打印机 APP\n\n\n成品展示\n\nApp设计\n软件环境：Android Studio + Java\nApp基于 Model-View-Controller (MVC) 架构模式进行设计。\nDiabete 实例代表一种糖人造型，保存了打印机中内置糖人造型的名字、id、是否正在制作等信息。其中用户 DIY 的糖人造型也是一个\nDiabete 实例，这些实例全部用一个列表 DiabeteLab 联系起来。\n\nApp设计\n\n下位机软件\n糖人打印机使用 STM32F407ZGTx 系列芯片作为控制主板\n软件环境\nIDE : MDK-ARM V5\npackage version: STM32Cube FW_F4 V1.24.2\nFreeRTOS version: 10.0.1\nCMSIS-RTOS version: 1.02\nApp文件夹（应用层）\n主板主要执行三个任务\n\n与App通讯任务 ：bluetooth_comm_task.c/h\nPID 温控任务 ：temp_ctrl_task.c/h\n糖人线条绘制任务 ：draw_diabetes_task.c/h\n\nBsp文件夹（驱动层）\n\n串口驱动 ：bsp_uart.c/h\nPID算法 ：pid.c/h\n步进电机驱动 ：stepper_con.c/h，同时这个文件中还实现了基于 逐点比较法 的双电机联动\n\n\n\n实物\n'], 'url_profile': 'https://github.com/1344618323', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abhishekbenjamin', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}","{'location': 'India', 'stats_list': [['17', '          followers'], ['28', '          following'], ['75']], 'contributions': '982 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Storiesbyharshit', 'info_list': ['CSS', 'MIT license', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'C', 'Updated Apr 8, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020']}"
"{'location': 'Bengaluru, Karnataka, India', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pradeepkumar4', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'Elizabethtown, NC', 'stats_list': [['1', '          follower'], ['5', '          following'], ['2']], 'contributions': '376 contributions\n        in the last year', 'description': ['NC Diabetes Epidemic 2020\nThis repo is based upon the final project submitted for HIM6125 at the Univeristy of Central Florida.\nThis repo is a countiuned exploration of the data\nReports\n.anaylsis/blogposts/basic-exploration  In Progress (state as of 5/14/2020)\n'], 'url_profile': 'https://github.com/mmmmtoasty19', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'Vellore, Tamil Nadu', 'stats_list': [['12', '          followers'], ['16', '          following'], ['24']], 'contributions': '272 contributions\n        in the last year', 'description': ['Diabetes-Prediction-tool\nUsing Support Vector Machine algorithm on prima indian diabetes datasets\n'], 'url_profile': 'https://github.com/digs1998', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['25', '          following'], ['8']], 'contributions': '54 contributions\n        in the last year', 'description': ['Pima-Indian-Diabetes\nSource : Kaggle\nContext :\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes,\nbased on certain diagnostic measurements included in the dataset.\nSeveral constraints were placed on the selection of these instances from a larger database.\nIn particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent :\nThe datasets consists of several medical predictor variables and one target variable, Outcome.\nPredictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nInspiration :\nCan you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\n'], 'url_profile': 'https://github.com/RamyaVidiyala', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '90 contributions\n        in the last year', 'description': ['pima-indians-diabetes-dataset\nExperimenting various data-science classification algorithms on the pima-indians-diabetes-dataset\n'], 'url_profile': 'https://github.com/dsha-sharma', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '34 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/swedha19', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'Kolkata', 'stats_list': [['0', '          followers'], ['2', '          following'], ['2']], 'contributions': '52 contributions\n        in the last year', 'description': ['pima-diabetes-prediction\nTrying to predict the patients with pima diabetes\n'], 'url_profile': 'https://github.com/WatchfulHitman', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'Nakuru', 'stats_list': [['12', '          followers'], ['19', '          following'], ['3']], 'contributions': '157 contributions\n        in the last year', 'description': ['diabetes-analysis-and-modeling\nTrying to predict if a patient has diabetes or not\nMy first classification model project\n'], 'url_profile': 'https://github.com/PurityNyakundi', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '233 contributions\n        in the last year', 'description': [""Challenge - Diabetes Classification\nMachine Learning in Health - Predict the given person is suffering from diabetes.\nDiabetes is a condition that impairs the body's ability to process blood glucose, otherwise known as blood sugar. In the United States, the estimated number of people over 18 years of age with diagnosed and undiagnosed diabetes is 30.2 million. The figure represents between 27.9 and 32.7 percent of the population.\nWithout ongoing, careful management, diabetes can lead to a buildup of sugars in the blood, which can increase the risk of dangerous complications, including stroke and heart disease. Different kinds of diabetes can occur, and managing the condition depends on the type. Not all forms of diabetes stem from a person being overweight or leading an inactive lifestyle. In fact, some are present from childhood.\nThe description of the dataset can be found here\nNote - Solution achieved 75.32% Accuracy using basic Logistic Regression implementation (3rd Position on Leaderboard).\n""], 'url_profile': 'https://github.com/kanav-mehra', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}","{'location': 'Porto Alegre - RS - Brazil', 'stats_list': [['12', '          followers'], ['51', '          following'], ['14']], 'contributions': '369 contributions\n        in the last year', 'description': ['Predict the onset of diabetes based on diagnostic measures\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nSource: https://www.kaggle.com/uciml/pima-indians-diabetes-database/data\nWorkflow Overview\nDefine Business Problem > Data Preparation > Algorithm Selection > Model Training > Test and Model Evaluation\nTraining Overview\n\nConfusion Matrix\n\n'], 'url_profile': 'https://github.com/ralsouza', 'info_list': ['Jupyter Notebook', 'Updated Apr 9, 2020', 'HTML', 'Updated Aug 21, 2020', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated May 15, 2020', '1', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Oct 13, 2020', 'Python', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'R', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Apr 10, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020']}"
"{'location': 'greater noida', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '43 contributions\n        in the last year', 'description': ['Naive-Bayes-Diabetes\n'], 'url_profile': 'https://github.com/kkapasiya', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'Nairobi,Kenya', 'stats_list': [['28', '          followers'], ['30', '          following'], ['26']], 'contributions': '381 contributions\n        in the last year', 'description': ["" Diabetes Diagnostics\nThis neural network helps in the accurate diagnosis of patients in risk of having the diabetes disease. Currently trained to an accuracy of over 99% and accuracy of 85% with another dataset with greater numerics'\n! ....This is an awesome point hence could help in the diagnosis.\n\nAbout the Data{it's for female patients}\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.\nSeveral constraints were placed on the selection of these instances from a larger database.\nIn particular, all patients here are females at least 21 years old of Pima Indian heritage.\n-PregnanciesNumber of times pregnant\n-GlucosePlasma glucose concentration a 2 hours in an oral glucose tolerance test\n-BloodPressureDiastolic blood pressure (mm Hg)\n-SkinThicknessTriceps skin fold thickness (mm)\n-Insulin2-Hour serum insulin (mu U/ml)\n-BMIBody mass index (weight in kg/(height in m)^2)\n-DiabetesPedigreeFunctionDiabetes pedigree function\n-AgeAge (years)\n-OutcomeClass variable (0 or 1) 268 of 768 are 1, the others are 0\n""], 'url_profile': 'https://github.com/BillyGareth', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'Lynwood, Washington', 'stats_list': [['7', '          followers'], ['9', '          following'], ['7']], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saradgyawali', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['4', '          following'], ['378']], 'contributions': '94 contributions\n        in the last year', 'description': ['pima-indians-diabetes\n'], 'url_profile': 'https://github.com/santosh8896', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '345 contributions\n        in the last year', 'description': ['DIABETES-PREDICTION-WITH-MACHINE-LEARNING\n'], 'url_profile': 'https://github.com/NarayanaReddy29', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'Bhubaneswar', 'stats_list': [['4', '          followers'], ['0', '          following'], ['2']], 'contributions': '46 contributions\n        in the last year', 'description': ['Logistic Regression with example : Diabetes Detection\nLogistic Regression is a Machine Learning algorithm which is used for the classification problems, it is a predictive analysis algorithm and based on the concept of probability.\n\nAs shown in the picture if you are trying to figure out the test will pass or fail; that is known as Logistic regression. Lets see some real world example\n\nTo predict whether an email is spam (1) or (0)\nWhether the tumour is malignant (1) or not (0)\nIf you are diabetic  (1) or not (0)\n\nConsider a scenario where we need to classify whether an email is spam or not. If we use linear regression for this problem, there is a need for setting up a threshold based on which classification can be done. Say if the actual class is malignant, predicted continuous value 0.4 and the threshold value is 0.5, the data point will be classified as not malignant which can lead to serious consequence in real time.\nFrom this example, it can be inferred that linear regression is not suitable for classification problem. Linear regression is unbounded, and this brings logistic regression into picture. Their value strictly ranges from 0 to 1.\nProject:\nTo make the learning project easier and productive, we are going to learn Logistic Regression by an example of creating a logistic regression model to predict a user is Diabetic or not.\nFirst we are going to collect the dataset and clean it. Then we will create a Logistic regression model with fitting the dataset.\nFileName: diabetic_analysis_logistic_regression.ipynb\nFinally after a successive training it’s our main goal to integrate our machine learning model with the GUIs. You can use tkinter for making a desktop application like we did in Linear Regression example, but here we are going to integrate it with a web framework i.e Flask, to create a website that will take the input parameters from the user and predict if they are Diabetic or not.\nCommand to run the script: python flask_integration\\app.py\n\nHope you have enjoyed learning this, if so share this with others and for more such contents you can connect with me on\nYouTube: https://www.youtube.com/channel/UCmF8qppe02J1ot4Jfwl_lFg\nLinkedIn: https://www.linkedin.com/in/jagwithyou/\nMedium: https://medium.com/@jagwithyou\n'], 'url_profile': 'https://github.com/jagwithyou', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sourav41', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '33 contributions\n        in the last year', 'description': ['DIABETES_DETECTION_USING_MACHINE_LEARNING\nThis software is based on Python as Backend and HTML,JavaScript,CSS as frontend. It was used in order to early detection of Diabetes type 2, using Adaboost as a classifier (Machine learning algorithm).\nThe software works with a database which has been disigned in MySQL, but it is not available in this repository for security.\nPython version 2.7\n'], 'url_profile': 'https://github.com/RubenVasquezA', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'Seattle', 'stats_list': [['2', '          followers'], ['1', '          following'], ['6']], 'contributions': '44 contributions\n        in the last year', 'description': [""ML-model--to-classify-Diabetes--Logistic-Classifier\nThis is a complete Machine Learning project using Logistic Classifier to predict Diabetes.\nDataset Overview\nThe data for this lab are derived from the Pima Indians Diabetes dataset, which was published by the National Institute of Diabetes and Digestive and Kidney Diseases. The dataset contains information about women who are members of the Pima people -- a group of Native Americans living in an area consisting of what is now central and southern Arizona. The dataset contains several diagnostic measurements for each woman, including whether each woman has diabetes.\nDataset Variables\nThe dataset contains the following variables:\nPregnancies: The number of times a woman has been pregnant\nPlasma_Glucose: A measurement of a woman's plasma glucose concentration\nDiastolic_Blood_Pressure: A woman's diastolic blood pressure (in mm Hg)\nTriceps_Thickness: The thickness of a woman's triceps skin fold (in mm)\nSerum_Insulin: A woman's serum insulin level ( in mu U/ml)\nBMI: A woman's body mass index (weight in kg/(height in m)2)\nDiabetes_Pedigree: The likelihood of a woman having diabetes based on her family history\nAge: A woman's age (in years)\nHas_Diabetes: Whether a woman has diabetes (0 = does not have diabetes, 1 = has diabetes)\n""], 'url_profile': 'https://github.com/barani-bhoopalan', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}","{'location': 'New York City', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '1,009 contributions\n        in the last year', 'description': ['Diabetes-Patient-Classifier-Clustering-on-Meal-Data\n'], 'url_profile': 'https://github.com/vsinghal3737', 'info_list': ['Jupyter Notebook', 'Updated Apr 6, 2020', 'Jupyter Notebook', 'Updated Apr 16, 2020', 'Jupyter Notebook', 'Updated Apr 10, 2020', '1', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 11, 2020', 'Jupyter Notebook', 'Updated Apr 12, 2020', 'Jupyter Notebook', 'Updated Apr 9, 2020', 'JavaScript', 'Updated Apr 9, 2020', '1', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Updated Apr 6, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '19 contributions\n        in the last year', 'description': ['Neural-Network\nMy first neural network to predict diabetes status\n'], 'url_profile': 'https://github.com/Dougy140', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'Australia', 'stats_list': [['2', '          followers'], ['3', '          following'], ['17']], 'contributions': '372 contributions\n        in the last year', 'description': ['You asked for more, you shall get it. Sugar Candy is the latest release in the Sugar series of SDDM themes. It\'s so extremely sweet your pancreas will have difficulties digesting its awesomeness.\nSweeten the login experience for your users, your family and yourself. Sugar Candy works on almost all major distributions—see below—and focuses on a straight forward user experience and superb functionality while still offering vast customization possibilities.\nSugar Candy is based on the Sugar series which was written completely from scratch making it clean and simple not only by looks but by design too.\nAll controls use the latest Qt Quick Controls 2 for increased performance on low end or even embedded systems and beautiful color transitions.\nTo learn how to control sugar levels read the section below about customization. There are 40 customizable variables in total! This candy will be yours and only yours.\n\nInstallation\nFrom within KDE Plasma\nIf you are on KDE Plasma—by default Manjaro, OpenSuse, Neon, Kubuntu, KaOS or Chakra for example—you are lucky and can simply go to your system settings and under ""Startup and Shutdown"" followed by ""Login Screen (SDDM)"" click ""Get New Theme"". From there search for ""Sugar Candy"" and install.\nIf for some reason you cannot find the category named ""Login Screen (SDDM)"" in your system settings then you are missing the module sddm-kcm. Install this little helper with your package manager first. You will be grateful you did.\nFrom other desktop environments\nDownload the tar archive from the files tab of this web page and extract the contents to the theme directory of SDDM (change the path for the downloaded file if necessary):\n$ sudo tar -xzvf ~/sugar‑candy.tar.gz -C /usr/share/sddm/themes\nThis will extract all the files to a folder called ""sugar‑candy"" inside of the themes directory of SDDM.\nAfter that you will have to point SDDM to the new theme by editing its config file, preferrably at /etc/sddm.conf (create if necessary). You can take the default config file of SDDM as a reference which might be found at: /usr/lib/sddm/sddm.conf.d/sddm.conf.\nIn the [Theme] section simply add the themes name to this line: Current=sugar‑candy. If you don\'t care for SDDM options and you had to create the file from blank just add these two lines and save it. Also see the Arch wiki on SDDM.\nDependencies\nSDDM  >= 0.18 & Qt5 >= 5.11\nincluding: Qt Quick Controls 2, Qt Graphical Effects, Qt SVG, Qt Quick Layouts each >= 5.11—see below for distro specific package names\nMake sure these are installed with their required version or higher! SDDM might need an enabled system service/daemon to work. This is often done automatically during installation. Take note that a lot of standard release distros like Debian, Mint, MX, Elementary, Deepin or Ubuntu LTS are still on earlier versions. If in doubt ask in your distros forums.\nDebian based distros using the APT package manager:\n(Ubuntu/Kubuntu/Kali/Neon/antiX etc.)\nsudo apt install --no-install-recommends sddm qml‑module‑qtquick‑layouts qml‑module‑qtgraphicaleffects qml‑module‑qtquick‑controls2 libqt5svg5\nArch based distros using the pacman package manger:\n(Obarun/Artix/Manjaro/KaOS/Chakra etc.)\nsudo pacman -S --needed sddm qt5‑graphicaleffects qt5‑quickcontrols2 qt5‑svg\nopenSUSE using the zypper package manager:\nsudo zypper install sddm libqt5‑qtgraphicaleffects libqt5‑qtquickcontrols2 libQt5Svg5 libQt5Svg5\nRed Hat based distros using the dnf package manager:\n(Fedora/Mageia/RHEL/CentOS)\nsudo dnf install sddm qt5‑qtgraphicaleffects qt5‑qtquickcontrols2 qt5‑qtsvg\n\nConfiguration\nThe sugar series is extremely customizable by editing its included theme.conf file. You can change the colors and images used, the time and date formats, the appearance of the whole interface and even how it works.\nPro tip: It\'s super annoying to log out and back in every time you want to see a change made to the theme.conf file. To preview your changes from withing your running desktop environment session simply issue:\nsddm-greeter --test-mode --theme /usr/share/sddm/themes/sugar-candy\nAnd as if that wouldn\'t still be enough you can translate every single button and label because SDDM still needs your help to make localization as complete as possible!\nBackground=""Backgrounds/Mountain.jpg""\nPath relative to the theme root directory. Most standard image file formats are allowed including support for transparency. (e.g. background.jpeg/illustration.GIF/Foto.png/undraw.svgz)\nDimBackgroundImage=""0.0""\nDouble between 0 and 1 used for the alpha channel of a darkening overlay. Use to darken your background image on the fly.\nScaleImageCropped=""true""\nWhether the image should be cropped when scaled proportionally. Setting this to false will fit the whole image instead, possibly leaving white space. This can be exploited beautifully with illustrations (try it with ""undraw.svg"" included in the theme).\nScreenWidth=""1440""\nScreenHeight=""900""\nAdjust to your resolution to help SDDM speed up on calculations.\nFullBlur=""false""\nPartialBlur=""false""\nEnable or disable the blur effect; if HaveFormBackground is set to true then PartialBlur will trigger the BackgroundColor of the form element to be partially transparent and blend with the blur.\nBlurRadius=""100""\nSet the strength of the blur effect. Anything above 100 is pretty strong and might slow down the rendering time. 0 is like setting false for any blur.\nHaveFormBackground=""false""\nHave a full opacity background color behind the form that takes slightly more than 1/3 of screen estate;  if PartialBlur is set to true then HaveFormBackground will trigger the BackgroundColor of the form element to be partially transparent and blend with the blur.\nFormPosition=""center""\nPosition of the form which takes roughly 1/3 of screen estate. Can be left, center or right.\nBackgroundImageHAlignment=""center""\nHorizontal position of the background picture relative to its visible area. Applies when ScaleImageCropped is set to false or when HaveFormBackground is set to true and FormPosition is either left or right. Can be left, center or right; defaults to center if none is passed.\nBackgroundImageVAlignment=""center""\nAs before but for the vertical position of the background picture relative to its visible area.\nMainColor=""white""\nUsed for all elements when not focused/hovered etc. Usually the best effect is achieved by having this be either white or a very dark grey like #444 (not black for smoother antialias). Colors can be HEX or Qt names (e.g. red/salmon/blanchedalmond). See https://doc.qt.io/qt-5/qml-color.html\nAccentColor=""#fb884f""\nUsed for elements in focus/hover/pressed. Should be contrasting to the background and the MainColor to achieve the best effect.\nBackgroundColor=""#444""\nUsed for the user and session selection background as well as for ScreenPadding and FormBackground when either is true. If PartialBlur and FormBackground are both enabled this color will blend with the blur effect.\nOverrideLoginButtonTextColor=""""\nThe text of the login button may become difficult to read depending on your color choices. Use this option to set it independently for legibility.\nInterfaceShadowSize=""6""\nInteger used as multiplier. Size of the shadow behind the user and session selection background. Decrease or increase if it looks bad on your background. Initial render can be slow for values above 5-7.\nInterfaceShadowOpacity=""0.6""\nDouble between 0 and 1. Alpha channel of the shadow behind the user and session selection background. Decrease or increase if it looks bad on your background.\nRoundCorners=""20""\nInteger in pixels. Radius of the input fields and the login button. Empty for square. Can cause bad antialiasing of the fields.\nScreenPadding=""0""\nInteger in pixels. Increase or delete this to have a padding of color BackgroundColor all around your screen. This makes your login greeter appear as if it was a canvas. Cool!\nFont=""Noto Sans""\nIf you want to choose a custom font it will have to be available to the X root user. See https://wiki.archlinux.org/index.php/fonts#Manual_installation\nFontSize=""""\nOnly set a fixed value if fonts are way too small for your resolution. Preferrably kept empty.\nForceRightToLeft=""false""\nRevert the layout either because you would like the login to be on the right hand side or SDDM won\'t respect your language locale for some reason. This will reverse the current position of FormPosition if it is either left or right and in addition position some smaller elements on the right hand side of the form itself (also when FormPosition is set to center).\nForceLastUser=""true""\nHave the last successfully logged in user appear automatically in the username field.\nForcePasswordFocus=""true""\nGive automatic focus to the password field. Together with ForceLastUser this makes for the fastest login experience.\nForceHideCompletePassword=""false""\nIf you don\'t like to see any character at all not even while being entered set this to true.\nForceHideVirtualKeyboardButton=""false""\nDo not show the button for the virtual keyboard at all. This will completely disable functionality for the virtual keyboard even if it is installed and activated in sddm.conf\nForceHideSystemButtons=""false""\nCompletely disable and hide any power buttons on the greeter.\nAllowEmptyPassword=""false""\nEnable login for users without a password. This is discouraged. Makes the login button always enabled.\nAllowBadUsernames=""false""\nDo not change this! Uppercase letters are generally not allowed in usernames. This option is only for systems that differ from this standard! Also shows username as is instead of capitalized.\nLocale=""""\nThe time and date locale should usually be set in your system settings. Only hard set this if something is not working by default or you want a seperate locale setting in your login screen.\nHourFormat=""HH:mm""\nDefaults to Locale.ShortFormat - Accepts ""long"" or a custom string like ""hh:mm A"". See http://doc.qt.io/qt-5/qml-qtqml-date.html\nDateFormat=""dddd, d of MMMM""\nDefaults to Locale.LongFormat - Accepts ""short"" or a custom string like ""dddd, d \'of\' MMMM"". See http://doc.qt.io/qt-5/qml-qtqml-date.html\nHeaderText=""Welcome!""\nHeader can be empty to not display any greeting at all. Keep it short.\nSDDM may lack proper translation for every element. Sugar defaults to SDDM translations. Please help translate SDDM as much as possible for your language: https://github.com/sddm/sddm/wiki/Localization. These are in order as they appear on screen.\nTranslatePlaceholderUsername=""""\nTranslatePlaceholderPassword=""""\nTranslateShowPassword=""""\nTranslateLogin=""""\nTranslateLoginFailedWarning=""""\nTranslateCapslockWarning=""""\nTranslateSession=""""\nTranslateSuspend=""""\nTranslateHibernate=""""\nTranslateReboot=""""\nTranslateShutdown=""""\nTranslateVirtualKeyboardButton=""""\nThese don\'t necessarily need to translate anything. You can enter whatever you want here.\n\nLegal Notice\nThis file is part of SDDM Sugar Candy.\nA theme for the Simple Display Desktop Manager.\nCopyright (C) 2018–2020 Marian Arlt\nSDDM Sugar Candy is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or any later version.\nYou are required to preserve this and any additional legal notices, either\ncontained in this file or in other files that you received along with\nSDDM Sugar Candy that refer to the author(s) in accordance with\nsections §4, §5 and specifically §7b of the GNU General Public License.\nSDDM Sugar Candy is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with SDDM Sugar Candy. If not, see https://www.gnu.org/licenses/\n\nOther awesome projects\n\nChili—the hottest login theme for KDE Plasma\nChili stand-alone fork for SDDM only\nFlat OSX like aurorae window decorations for your Linux desktop and its high contrast version\nFinely crafted folder icons for Linux\nInline clock widget for KDE Plasma\n\n\nMotivate a developer\nIn the past years I have spent quite some hours on open source projects. If you are the type of person who digs attention to detail, know how much work is involved in it and/or simply likes to support makers with a coffee or a beer I would greatly appreciate your donation on my PayPayl account.\nAlternatively downloading my themes directly from opendesktop or with the kde sddm system settings module will at least help me a little to be able to attend your issues and requests.\nPlease consider helping developers you think are worth a penny or two, literally.\n'], 'url_profile': 'https://github.com/Kangie', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['DB_Project\nThe project is based on prediction of Diabetes. There are actually two types of diabetes, namely Type1 and Type2 . The type 2 diabetes are normally called as diabetes mallitus. We consider the Mallitus here. Here, in this project we have used Logistic Regression algorithm. By using the data of the peoplewith and without diabetes, a dataset has been build. We use that dataset to classify the people who are in the risk of getting diabetes.\n'], 'url_profile': 'https://github.com/Pooja2807', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['2']], 'contributions': '162 contributions\n        in the last year', 'description': ['Diabetes_prediction_with_different_models_and_finding_best_classifeir\nDiabetes is a pronic disease. Predicting this at an early stage may help us to take remedies and measures which will help in controlling disease. This project is all about predicting diabetes with different machine learning classification models. And finally finding which model predicted with high accuracy( finding the best classifier)\n'], 'url_profile': 'https://github.com/vikashmalekar', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '63 contributions\n        in the last year', 'description': ['README\nThis README would normally document whatever steps are necessary to get the\napplication up and running.\nFollow below steps to setup an application:\n\n\nCreate database => rails db:create\n\n\nDo migration => rails db:migrate\n\n\nSeed role table data => rails db:seed\n\n\nFollow below steps to run an application\n\n\nGo to this Heroku url\nhttps://sleepy-gorge-73564.herokuapp.com/users/sign_in\n\n\nClick on Sign up button\n\n\nGive input details role either user / doctor\n\n\nNow go to login page\n\n\nEnter created user details\n\n\nAs a logged in user can create the glucose level\n\n\nUser can see the reports when go to menu reports\n\n\nUser can see only reports page when logged in as doctor role\n\n\n...\n\n\n'], 'url_profile': 'https://github.com/mohanrajkpm', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': '32.621921, 51.647334', 'stats_list': [['44', '          followers'], ['131', '          following'], ['177']], 'contributions': '637 contributions\n        in the last year', 'description': ['Machine Learning on Pima Diabets dataset\nDiabetes is a chronic condition in which the body develops a resistance to insulin, a hormone which converts food into glucose. Diabetes affect many people worldwide and is normally divided into Type 1 and Type 2 diabetes. Both have different characteristics. This article intends to analyze and create a model on the PIMA Indian Diabetes dataset to predict if a particular observation is at a risk of developing diabetes, given the independent factors. This article contains the methods followed to create a suitable model, including EDA along with the model.\n\nWho are Pima Indians\nThe Pima (/ˈpiːmə/) (or Akimel O\'odham, also spelled Akimel Oʼotham, ""River People"", formerly known as Pima) are a group of Native Americans living in an area consisting of what is now central and southern Arizona. Wikipedia\n\nDataset\nThe dataset can be found on the Kaggle website. This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases and can be used to predict whether a patient has diabetes based on certain diagnostic factors.\nDataset columns\n\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsulin\nBMI\nDiabetesPedigreeFun\nAge\nOutcome\n\nClustering with KMeans Algorithm :\naccording to the correlation digaram as you can see , the best parameters for drawing and show how is the algorithm worked , is , Age , BMI , Glucose .\n\nbefore clustering :\n\n\nafter clusterung :\n\n\nLicense\nSee full license on this ,Under MIT License\n'], 'url_profile': 'https://github.com/BahramJannesar', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '26 contributions\n        in the last year', 'description': ['python-script-applying-predection-model-on-data-coming-from-table-with-python\nthis script take new rows from table called diabetes_unscored form postgrel database and  pass this new data to machine learning model.\nThen you take the new data frame with new column that contains values 1 or 0 which indicate that this person has diabetes mellitus (1) or not (0)\nyou have csv file contain data you should copy this data to table in your database and load data from this table with pandas .\n'], 'url_profile': 'https://github.com/MohamedHishamElmamon', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'Bengaluru', 'stats_list': [], 'contributions': '57 contributions\n        in the last year', 'description': ['HealthCare-Capstone-Project-Data-Science-master\nDESCRIPTION\nProblem Statement\nNIDDK (National Institute of Diabetes and Digestive and Kidney Diseases) research creates knowledge about and treatments for the most chronic, costly, and consequential diseases.\nThe dataset used in this project is originally from NIDDK. The objective is to predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not.\nDataset Description\nThe datasets consists of several medical predictor variables and one target variable (Outcome). Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and more.\nVariables\tDescription\nPregnancies\tNumber of times pregnant\nGlucose\tPlasma glucose concentration in an oral glucose tolerance test\nBloodPressure\tDiastolic blood pressure (mm Hg)\nSkinThickness\tTriceps skinfold thickness (mm)\nInsulin\tTwo hour serum insulin\nBMI\tBody Mass Index\nDiabetesPedigreeFunction\tDiabetes pedigree function\nAge\tAge in years\nOutcome\tClass variable (either 0 or 1). 268 of 768 values are 1, and the others are 0\nProject Task: Week 1\nData Exploration:\n\nPerform descriptive analysis. Understand the variables and their corresponding values. On the columns below, a value of zero does not make sense and thus indicates missing value:\n\n• Glucose\n• BloodPressure\n• SkinThickness\n• Insulin\n• BMI\n\n\nVisually explore these variables using histograms. Treat the missing values accordingly.\n\n\nThere are integer and float data type variables in this dataset. Create a count (frequency) plot describing the data types and the count of variables.\n\n\nProject Task: Week 2\nData Exploration:\n\n\nCheck the balance of the data by plotting the count of outcomes by their value. Describe your findings and plan future course of action.\n\n\nCreate scatter charts between the pair of variables to understand the relationships. Describe your findings.\n\n\nPerform correlation analysis. Visually explore it using a heat map.\n\n\nProject Task: Week 3\nData Modeling:\n\n\nDevise strategies for model building. It is important to decide the right validation framework. Express your thought process.\n\n\nApply an appropriate classification algorithm to build a model. Compare various models with the results from KNN algorithm.\n\n\nProject Task: Week 4\nData Modeling:\n\nCreate a classification report by analyzing sensitivity, specificity, AUC (ROC curve), etc. Please be descriptive to explain what values of these parameter you have used.\n\nData Reporting:\n\nCreate a dashboard in tableau by choosing appropriate chart types and metrics useful for the business. The dashboard must entail the following:\n\na. Pie chart to describe the diabetic or non-diabetic population\nb. Scatter charts between relevant variables to analyze the relationships\nc. Histogram or frequency charts to analyze the distribution of the data\nd. Heatmap of correlation analysis among the relevant variables\ne. Create bins of these age values: 20-25, 25-30, 30-35, etc. Analyze different variables for these age brackets using a bubble chart\n'], 'url_profile': 'https://github.com/charangowda845', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '50 contributions\n        in the last year', 'description': [""Text analysis application\nThis application is developed for the 'Intellus Worldwide' conference to get statistical data based on the information retrieved from forums on the Internet (in this case - forums of people having diabetes)\nProgram description\nAll the required data for further analysis must be stored in CSV files (the structure of files is not important but must have the fields like 'Text', 'Topic' and 'Id' - with unique id values)\nMoreover, there should be a dictionary that contains all the words needed for the analysis divided into different categories.\nThis program is able to analyze CSV files by 'text', 'topic', and 'text&topic'.\nThe output of this program is an excel file with an analytical report and some charts to represent data graphically.\nRun application\nTo run this app, you should run the script named 'mainWindow.py', which will launch the GUI application.\nThis program looks like that:\n\nIn the first input, a user selects a folder which contains csv files with data.\nIn the second input, a user must choose an excel dictionary with the words for the further analysis.\nIn the last input, a user selects a folder where this program will save all the data.\nExample\nAs an example, please, choose a folder with the CSV file named 'example_data' (this file is in this repository)\nThen, select an excel file named 'dictionary_example' (this excel document is also in the repository as well)\nFinally, choose any folder to store the resulting output.\nA screenshot example before starting an analysis:\n\nHere, we will provide statistics by texts & topics, so click the relative button, please.\nAs a result, in the folder destination, which we chose for saving the result, we will get an excel file named 'text_and_post_analysis' and two png pictures with pie charts.\nBelow is an example of the generated excel document.\n\nThis program is highly useful for people who have to gain an idea and statistics about huge sets of data fast and with no need to learn how to operate with any software!\nFurther help\nIf you have any questions or have some suggestions on how to improve this project, do not hesitate to contact me via e-mail antonskripin@gmail.com\n""], 'url_profile': 'https://github.com/AntonSk98', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/eventznews', 'info_list': ['Jupyter Notebook', 'Updated Apr 10, 2020', '3', 'QML', 'GPL-3.0 license', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 7, 2020', 'Updated Apr 7, 2020', 'HTML', 'Updated May 2, 2020', '3', 'Jupyter Notebook', 'MIT license', 'Updated Jul 30, 2020', '1', 'Python', 'Updated Apr 9, 2020', 'Jupyter Notebook', 'Updated Apr 6, 2020', 'Python', 'Updated May 4, 2020', 'Updated Apr 7, 2020']}"
