"{'location': 'Bangalore', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '95 contributions\n        in the last year', 'description': ['\nTable of Contents\n\nAbout the Project\nGetting Started\n\nPrerequisites\nInstallation\n\n\nContributers\nContact\n\nAbout the Project\nObjective of the project are :\n    * To build an efficient model that can predict the probability of having Diabetes.\n    * To visualize various independent variables like the number of pregnancies the patient has had, their BMI, insulin level, age, and dependent variable\n    * To increase the model efficiency of the model with help of data processing and hyperparameter tuning.\n    * To build a cloud-based user-friendly interface.\n\nGetting Started\nClone the repo and extract it ....\nPrerequisites\nAll the results reported in the project were produced using the following version Python and Python API:\n\n    * python 3.7.6\n    * numpy 1.18.1\n    * pandas 1.0.1\n    * matplotlib 3.1.3\n    * seaborn 0.10.0\n    * scikit-learn 0.22.1\n    * xgboost 1.3.0post0\n    * Keras 2.4.3 \n\nSetup\n1. Clone the repository \n```\ngit clone https://github.com/mayurraj876/Diabetes-Prediction.git\n```\n2. Install Python Libraries\n```\npip install pandas,numpy,matplotlib,sklearn,xgboost,keras,flask\n\n```\n\nContributers\n* mayurraj876 \n* manoj281998\n* paurush0506\n\nContact\nName - Mayur Raj Singh Chouhan \nEmail - mayurrajsinghc.ec17@rvce.edu.in\n\nCloud interface Link: https://diabetes-prediction-rvce.herokuapp.com/\nReferences\n* flask\n* sklearn \n* Stackoverflow\n\n'], 'url_profile': 'https://github.com/mayurraj876', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['2', '          following'], ['0']], 'contributions': '30 contributions\n        in the last year', 'description': [""Diabetes\nPredicting the diabetes of the patient based on different parameters like Pregnancy, Glucose level, Blood Pressure, BMI, Age and so on. And have used several algorithms like Logistic Regression, NB, Random Forest, SVC algorithms, and predicted a accuracy of about 80.5%.  I've deeply explored and analyzed valuable insights by producing clear visualizations for easy understanding.\n\nIn this project, I have collected, throughly cleaned and visualized the datasets for clear and easy understanding. Furthermore, I have figure out the total amount of people who are healthy and the ones affected by diabetes.\nHere, I've replaced the missing values or zero value of the columns - 'Glucose','BloodPressure','SkinThickness','Insulin','BMI','Age' by its median. I have visualized the dataset completely by using seaborn, matplotlib and plotly. Firstly, I have visualized each and every columns with the outcome column by using catplot. Also I've used boxplot to detect any outliers in the dataset. Furthermore, I have used histogram to easily understand the percentage of categories that are important for the cause of diabetes. And, by using some of the most important machine learning algorithms like Logistic Regression, Gaussian Naive Bayes, Random Forest Classifier and Support Vector Classifier. I've found accuracy of about 80.5% by using Randomm Forest Classifier and Support Vector Classifier.\n\nBy this code you can easily understand:\n\nVisualizing the people who are healthy and the ones affected by diabetes.\nReplacing all the missing and null values with the median value of the own column.\nUsing different kinds of visualization for easy understanding such as catplot, boxplot, histogram, and heatmap by using seaborn, and matplotlib.\nHave used several machine learning algorithms such as Ranform Forest Classifier, Gaussian Naive Bayes, Logistic Regression and Support Vector Classifier to train the model. And to find its accuracy.\nAtlast, trained the dataset using these 4 algorithms and found the best one with 80.5% accuracy by using SVM and Random Forest Classifier.\n\n""], 'url_profile': 'https://github.com/Darshan-Senthil', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/WILMASTER', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['3']], 'contributions': '47 contributions\n        in the last year', 'description': ['DiabetesPrediction\nUsing KnearestNeighbor classification predicting diabetes\n'], 'url_profile': 'https://github.com/sankethgadadinni', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kamal-andani', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['Diabetes_NEW_Test\n'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'Tennessee', 'stats_list': [['12', '          followers'], ['23', '          following'], ['35']], 'contributions': '1,063 contributions\n        in the last year', 'description': ['Diabetes Data Diving\nDescription\nMATH 2820L Final Project by Nilai Vemula, Anvitha Kosuraju, and Sithara Samudrala\nThis project features analysis of a dataset from the UCI Machine Learning Repository about diabetes. Our project proposal includes information about how we want to analyze and model our data. Additionally, this write-up documents our process and findings, and our final presentation shows this information in slides.\nWrite-up: PDF and Markdown\nNotebooks\nThe code for this project can be found in the following Rmarkdown notebooks:\n\nExploratory Data Analysis\nLinear Model (Markdown with output here)\nRandom Forest Model (Markdown with output here)\n\nA bonus Jupyter Notebook containing more advanced modeling of our data can be found here.\nReproducability\nThe code in these notebooks can be downloaded by cloning this repository using:\ngit clone https://github.com/NilaiVemula/diabetes-data-diving.git\n\nThen, an R environment can be set-up using renv. Once this project is lauched, renv should automatically set up an enironment at which point you can run the following code in R to restore the project library:\nrenv::restore()\n\nIn order to run the Jupyter Notebook you will need to set up a Python virtual environment using the following code:\npython3 -m venv env\nsource env/bin/activate\npip install -r requirements.txt\n\n'], 'url_profile': 'https://github.com/NilaiVemula', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '46 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SUMSApps', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 14, 2021', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Dec 10, 2020', 'HTML', 'Updated Jan 8, 2021', 'Updated Nov 23, 2020', 'Updated Nov 23, 2020']}"
"{'location': 'Hyderabad', 'stats_list': [['5', '          followers'], ['15', '          following'], ['2']], 'contributions': '104 contributions\n        in the last year', 'description': [""Diabetic Retinopathy Detection using Deep Learning\nOverview\nMillions of people suffer from Diabetic retinopathy, the leading cause of blindness among working aged adults. Aravind Eye Hospital in India hopes to detect and prevent this disease among people living in rural areas where medical screening is difficult to conduct. Currently, the technicians travel to these rural areas to capture images and then rely on highly trained doctors to review the images and provide diagnosis.\nThe goal here is to scale their efforts through technology; to gain the ability to automatically screen images for disease and provide information on how severe the condition may be. We shall be achieving this by building a Convolutional neural network model that can automatically look at a patient's eye image and estimate the severity of blindness in the patient. This process of automation can reduce a lot of time thereby screening the process of treating diabetic retinopathy at a large scale.\nAlgortihms Used\n\nConvolutional Neural Network\n\nAccuracy We got 73%\nDeployment Images\nHomePage\n\n\nResult\t\n\n\nPackages and Tools Required:\nPython 3.8\nFlask\nTensorflow\nKeras\nOpenCV\n\nBuilt with\n\nFlask\nJavaScript\nCSS\nHTML\n\nInstructions\n\nInstall Python (v.3.8 is recommended).\nClone or download this repository.\nUsing a command prompt/terminal, go the project folder: /Deploy/\nInstall the dependencies:\npip install -r requirements.txt\nRun the server:\nFLASK_APP=app.py FLASK_DEBUG=1 flask run  [port number, default=5000]\nUsing a web browser, go to http://127.0.0.1:[port]/\n\n""], 'url_profile': 'https://github.com/khushaljethava', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NEWEST_DIABETES\n'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'Germany', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '195 contributions\n        in the last year', 'description': ['Diabetes prediction\n\nThe objective of this project is to predict whether the patient has diabetes or not based on various features like Glucose level, Insulin, Age, BMI.\nThe dataset is downloaded from Kaggle and it consists of 2,000 records with 8 independent features.\nPerformed EDA, data cleaning, and data visualization using various libraries like Matplotlib and Seaborn.\nThe dataset is tested with different machine learning algorithms like Logistic Regression, Decision Tree, SVC, and RandomForest.\nRandom Forest Classifier is used after doing hyperparameter tuning as it achieved an accuracy of 98.5%.\nDeployed in Heroku cloud using Flask.\n\nhttps://diabetes-predictionapi.herokuapp.com/\n'], 'url_profile': 'https://github.com/Harshavardhan1005', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['12']], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes-Predicion\nIn this project, our objective is to predict whether the patient has diabetes or not based on various features like Glucose level, Insulin, Age, BMI. We will perform all the steps from Data gathering to Model deployment. During Model evaluation, we compare various machine learning algorithms on the basis of accuracy_score metric and find the best one.\n'], 'url_profile': 'https://github.com/arunimas1506', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'Jaipur, Rajasthan', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '94 contributions\n        in the last year', 'description': ['Diabetes Prediction\nLink to app\n\n'], 'url_profile': 'https://github.com/hsahu615', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '10 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/mayuresh141', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '41 contributions\n        in the last year', 'description': ['diabetesNeuralNetwork\nA neural network using Keras that classifies risk for diabetes based on health data.\n'], 'url_profile': 'https://github.com/009Benny', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '36 contributions\n        in the last year', 'description': [""Diabetes - Bioinformatics - Data Set\nThis track focuses on answering biological questions using a synthetic data set of diabetes patient data.\nIt is up to you to find interesting biological patterns in the data - but here's few hints to get you started:\n\nCan you explore which treatments are effective, and which ones are not?\nWhat are the most important factors for hospital readmission?\nIs the best cure insulin or a combination of drugs?\nWhat's the best treatment for a newly diagnosed patient based on patient's features and the response to certain drugs?\n\nAim: To generate new biological/medical knowledge from the synthetic data set. If you use machine learning, it is important that you can explain why the model predicts the way it does (the biological pattern in the data) and hence deep learning might not be suited for this challenge.\nData\nNote: To access the data set, Download or Fork this project (on the left under Source Files). Due to the file size (19MB), it may take a few minutes to download.\nYou are provided a data set: 1 set of synthetic patient data (synthetic_data.csv) which consists of 78441 rows and 42 columns.\nThe file can be found in the data dictionary in the source files.\nThe feature descriptions can be found in data/feature_descriptions.csv:\n\nrace - Values: Caucasian, Asian, African American, Hispanic, and other\ngender - Values: male and female\nage - Grouped in 10-year intervals: [0, 10), [10, 20), . . ., [90, 100)\ntime_in_hospital - Integer number of days between admission and discharge\nnum_lab_procedures - Number of lab tests performed during the encounter\nnum_procedures - Number of procedures (other than lab tests) performed during the encounter\nnum_medications - Number of distinct generic names administered during the encounter\nnumber_outpatient - Number of outpatient visits of the patient in the year preceding the encounter\nnumber_emergency - Number of emergency visits of the patient in the year preceding the encounter\nnumber_inpatient - Number of inpatient visits of the patient in the year preceding the encounter\nnumber_diagnoses - Number of diagnoses entered to the system\nmax_glu_serum - Indicates the range of the result or if the test was not taken. Values: >200, >300, normal, and none if not measured\nA1Cresult - Indicates the range of the result or if the test was not taken. Values: >8 if the result was greater than 8%, >7 if the result was greater than 7% but less than 8%, normal if the result was less than 7%, and none if not measured\nmetformin - Medication - decreases blood glucose levels by decreasing hepatic glucose production (gluconeogenesis)\nrepaglinide - Medication - lowers blood glucose levels by blocking ATP-dependent potassium channels in pancreatic beta cells, which in turn, stimulates insulin secretion\nnateglinide - Medication - lowers blood glucose levels by stimulating insulin secretion from the pancreas. (Same as above)\nchlorpropamide - Medication -  acts by stimulating beta cells of the pancreas to release insulin, bind to ATP-sensitive potassium channels on the pancreatic cell surface (sulfonylurea)\nglimepiride - Medication - stimulating the secretion of insulin granules from pancreatic islet beta cells by blocking ATP-sensitive potassium channels (KATP channels) and causing depolarization of the beta cells. (sulfonylurea)\nacetohexamide - Medication - same as above (sulfonylurea)\nglipizide - Medication - same as above ( sulfonylurea)\nglyburide - Medication - same as above (sulfonylurea)\ntolbutamide - Medication - same as above ( sulfonylurea)\npioglitazone - Medication - is a selective agonist at peroxisome proliferator-activated receptor-gamma (PPAR??) in target tissues for insulin action such as adipose tissue\nrosiglitazone - Medication - same as above\nacarbose - Medication - acts as a competitive, reversible inhibitor of pancreatic alpha-amylase and membrane-bound intestinal alpha-glucoside hydrolase\nmiglitol - Medication - reversible inhibition of membrane-bound intestinal a-glucoside hydrolase enzymes\ntroglitazone - Medication - same as other glitazones\ntolazamide - Medication - sulfonylurea\nexamide - Medication - diuretic\ncitoglipton - Medication -  is an oral dipeptidyl peptidase-4 (DPP-4) inhibitor used in conjunction with diet and exercise to improve glycemic control in patients with type 2 DM\ninsulin - Medication\nglyburide-metformin - Medication - glyburide belongs to sulfonylureas\nglipizide-metformin - Medication - glipizide: sulfonylurea\nglimepiride-pioglitazone - Medication - glimepiride: sulfonylurea\nmetformin-rosiglitazone - Medication -\nmetformin-pioglitazone - Medication\nchange - Indicates if there was a change in diabetic medications (either dosage or generic name). Values: change and no change\ndiabetesMed - Indicates if there was any diabetic medication prescribed. Values: yes and no\nreadmitted - 30 days, >30 if the patient was readmitted in more than 30 days, and No for no record of readmission\n_diag_1 - Generic primary diagnosis extracted from ICD9 codes\n_diag_2 - Generic secondary diagnosis extracted from ICD9 codes\n_diag_3 - Additional generic secondary diagnosis extracted from ICD9 codes\n\nFAQ\nPlease join the #diabetes-bioinformatics room on Slack.\n""], 'url_profile': 'https://github.com/roosavarjus', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '74 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/deepanwita22', 'info_list': ['HTML', 'MIT license', 'Updated Nov 26, 2020', '1', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Dec 11, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'MIT license', 'Updated Nov 28, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Jan 26, 2021']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['Diabetes-Detection\nThis is my diabetes detection C++ project/program which uses file handling as well. The program tells wheather the person has diabetes or not after testing most of the things.\nThe program can:\n1.Fix Appointment\n2.Can Proceed With Testings\n3.Will-generate Pre-report\n4.Will-generate Final-Report\n5.Has a paitent login\n6.Generate tips\n7.Admin Login\n8.Query-Reply sending application\n9.Allow you to buy Medicine\n10.Medicine Bill\n11.Many More things are there\n'], 'url_profile': 'https://github.com/siddharth616', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['21']], 'contributions': '70 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/Kitkat1021', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '80 contributions\n        in the last year', 'description': ['Diabetes-Software\nA Software to detect diabetes based on certain symptoms. Based on the PIMA Indians dataset on kaggle\nTools used:\nTensorflow.js,express.js,node.js,html,css,javascript\nPLEASE ENSURE ALL THE PACKAGES ARE INSTALLED FOR THE PROGRAM TO RUN\n'], 'url_profile': 'https://github.com/Chris-george-anil', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'India ', 'stats_list': [['3', '          followers'], ['6', '          following'], ['7']], 'contributions': '185 contributions\n        in the last year', 'description': ['Diabetes_Predict\n'], 'url_profile': 'https://github.com/Nitish-McQueen', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['2', '          following'], ['0']], 'contributions': '38 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nA Machine Learning based Web Application using Flask and Rest API\n'], 'url_profile': 'https://github.com/k4kunalll', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'Copenhagen', 'stats_list': [['4', '          followers'], ['4', '          following'], ['12']], 'contributions': '107 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tstannius', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'Thiruvananthapuram', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '133 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/anishj321', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '78 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nhttps://diabetespredic.herokuapp.com/\n'], 'url_profile': 'https://github.com/PNSuchismita', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['perceptron_diabetes\n'], 'url_profile': 'https://github.com/ernestosanchezm', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MrUnchained1303', 'info_list': ['C++', 'Updated Nov 24, 2020', 'Updated Nov 24, 2020', 'HTML', 'Updated Nov 29, 2020', 'HTML', 'Updated Nov 24, 2020', 'Updated Nov 26, 2020', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Updated Nov 29, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['9']], 'contributions': '18 contributions\n        in the last year', 'description': ['Diabetes_prediction_of_patient_using_logistic_regression\nWe will use Naive Bayes to model the ""Pima Indians Diabetes"" data set. This model will predict which people are likely to develop diabetes.\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\npreg stands for number of times pregnant\nplas stands for plasma levels\npres stands for blood pressure\nskin stands for skin thickness\ntest stands for insulin test\nmass stands for body mass index\nage stands for age\nclass stands for whather they diabiates or not.\n'], 'url_profile': 'https://github.com/karthiksama', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'dehradun', 'stats_list': [['0', '          followers'], ['1', '          following'], ['2']], 'contributions': '150 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/tejasjbansal', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '126 contributions\n        in the last year', 'description': [' diabetes-prediciton \nThis repository contains my work for my minor project done in 5th semester. \nThis a ML web app deployed on heroku; it takes several input from user and then predicts if user has diabetes or not\nDataset taken from https://www.kaggle.com/johndasilva/diabetes\n Deployed on https://diabetespresent.herokuapp.com/\n'], 'url_profile': 'https://github.com/yashkhanna1498', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'San Antonio, Texas', 'stats_list': [['33', '          followers'], ['54', '          following'], ['14']], 'contributions': '802 contributions\n        in the last year', 'description': ['\nTable of Contents\n\n\nAbout the Project\na. Goals\nb. Background\nc. Deliverables\nd. Project Outline\ne. Acknowledgments\n\n\nData Dictionary\na. Original Dataframe\nb. Added Features\n\n\nInitial Thoughts & Hypotheses\na. Thoughts\nb. Hypotheses\n\n\nProject Steps\na. Acquire\nb. Prepare\nc. Explore\nd. Model\ne. Conclusions\n\n\nHow to Reproduce\na. Steps\n\n\nAuthor\n\n\nAbout the Project\nGoals\nThe major goal of this project is to create a machine learning model that can predict a patient having diabetes or not. The model will base this on other diagnostic measures in the data, such as BMI and age. The data sample is for female patients at least 21 years of age or older with Pima Native American heritage.\nBackground\nAccording to the U.S. Department of Health and Human Services here,\n\n""Early detection and treatment of diabetes is an important step toward keeping people with diabetes healthy. It can help to reduce the risk of serious\ncomplications such as premature heart disease and stroke, blindness, limb amputations, and kidney failure... Many people with type 2 diabetes have no signs or\nsymptoms, but do have risk factors... Early diagnosis of diabetes and pre-diabetes is important so that patients can begin to manage the disease early and\npotentially prevent or delay the serious disease complications that can decrease quality of life.""\n\nDeliverables\n\nJupyter notebook with full analysis process\n\nTitle Data_Analysis within this repo; can also click here\n\n\nPresentation on key insights and model performance\n\nView Canva presentation here\n\n\nTableau Storybooks\n\nVisualizing Clusters here\n\n\n\nProject Outline\n\nREADME: Project description, outline, etc.\nData_Analysis.ipynb: Complete Data Science pipeline of the project\nPrepare.py: Module holding functions to prepare the dataframe\n\nAcknowledgments\nData from UCI Machine Learning here.\n\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\n\nData Dictionary\nIncluded in Original Data\n\n\n\nFeature Name\nDescription\n\n\n\n\nOutcome\nBinary class for diabetic patient or non-diabetic patient\n\n\nPregnancies\nNumber of times pregnant\n\n\nGlucose\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test\n\n\nBlood Pressure\nDiastolic blood pressure (mm Hg)\n\n\nSkin Thickness\nTriceps skin fold thickness (mm)\n\n\nInsulin\n2-Hour serum insulin (mu U/ml)\n\n\nBMI\nBody mass index: weight in kg/(height in m)^2\n\n\nDiabetes Pedigree Function\nMeasure of genetic influence\n\n\nAge\nAge of patient in years\n\n\n\nDomain Knowledge\n\n Click to Expand \nGlucose\nAn oral glucose tolerance test measures blood glucose after not eating for at least 8 hours and 2 hours after drinking a glucose-containing beverage. This test is used to diagnose diabetes (200 mg/dl and above) or pre-diabetes (between 140 mg/dl and 199 mg/dl). read more here\nBlood Pressure\nHigh blood pressure means that blood is pumping through the heart and blood vessels with too much force. Over time, consistently high blood pressure tires the heart muscle and can enlarge it. Diabetes damages arteries and makes them targets for hardening, called atherosclerosis. That can cause high blood pressure. It is believed that factors such as MBI and diet contribute to both conditions. read more here\nSkin Thickness\nTriceps (back side middle upperarm) - A skinfold caliper is used to assess the skinfold thickness, so that a prediction of the total amount of body fat can be made. This method is based on the hypothesis that the body fat is equally distributed over the body and that the thickness of the skinfold is a measure for subcutaneous fat. read more here\nInsulin\nDuring prolonged fasting, when the patient\'s glucose level is reduced to <40 mg/dL, an elevated insulin level plus elevated levels of proinsulin and C-peptide suggest insulinoma. Insulin levels generally decline in patients with type 1 diabetes mellitus. In the early stage of type 2 diabetes, insulin levels are either normal or elevated. In the late stage of type 2 diabetes, insulin levels decline. In normal individuals, insulin levels parallel blood glucose levels. read more here\nBMI (Body Mass Index)\nBMI is used to determine obesity along with the skinfold thickness test. The World Health Organization (WHO) defines BMI as weight in kilograms divided by the square of your height in metres (kg/m2). High BMI is a risk factor for diabetes. read more here\nDiabetes Pedigree Function\nThe hereditary risk one might have with the onset of diabetes mellitus. read more here\n\nFeatures Created\nUsing pandas qcut to create equal bins or Kmeans to create clusters on one or two features. Clusters were split into dummy variables.\n\n\n\nFeature Name\nDescription\n\n\n\n\nage_bins\n4 bins based on Age: (21, 24] < (24, 29] < (29, 41] < (41, 81] labeled 1,2,3,4 respectively\n\n\nbmi_bins\n3 bins based on BMI: (19, 29] < (29, 35] < (35, 67] labeled 1,2,3 respectively\n\n\nbp_bins\n3 bins based on blood pressure: (24, 68] < (68, 76] < (76, 122] labeled 1,2,3 respectively\n\n\nhigh_bmi_bp\nBoolean if patient has BMI in levels 2 or 3 and Blood Pressure in level 3\n\n\nage_bmi_cluster\nCluster created on scaled train features Age and BMI\n\n\npregnancy_cluster\nCluster created on scaled train feature Pregnancies\n\n\ninsulin_and_glucose_cluster\nCluster created on scaled train features Insulin and Glucose\n\n\n\nInitial Thoughts & Hypotheses\nThoughts\nResearch has shown that diabetes has many risk factors - health risks that increase a patient\'s predisposition to the disease. These include have a higher body mass index. Will this be reflected in the data from this project?\nHypotheses\nHypothesis - Age vs. Outcome\nNull hypothesis: Age does not influence the rate of diabetes diagnosis.   \nAlternative hypothesis: As age increases, so does the rate of diabetes diagnosis (in female patients +21 with Pima Indian heritage). \nTest: Pearson correlation coefficient   \nResults: With a p-value less than alpha and a correlation coefficient of .24, we reject the null hypothesis.\n\nHypothesis - Body Mass Index vs. Outcome\nNull hypothesis: There is no significant difference between BMI and diabetes diagnosis.   \nAlternative hypothesis:</kbd> Populations with higher BMI have a significantly higher rate of diabetes (in female patients +21 with Pima Indian heritage).  \nTest: One-tailed, one-sample T-test  \nResults: With a p-value less than alpha and a t-value of 3.0, we reject the null hypothesis.   \n\nHypothesis - Blood Pressure vs. Outcome\nNull hypothesis: There is no significant difference between blood pressure and diabetes diagnosis.  \nAlternative hypothesis: Populations with higher blood pressure have a significantly higher rate of diabetes (in female patients +21 with Pima Indian heritage).    \nTest: One-tailed, one-sample T-test  \nResults: With a p-value greater than alpha, we fail to reject the null hypothesis.   \n\nProject Steps\nAcquire\nData acquired from Kaggle here. The dataframe is saved as a csv file and has over 700 observations. The nine features in the original dataframe are diagnostic measures of the patients (observations). Null values appear to be filled with 0.\nPrepare\nFunctions to prepare the dataframe are stored within the PRepare.py module. The module functions:\n\nreplace 0 with the feature mean where appropriate (i.e. a patient cannot have a 0 BMI)\nbin features by pandas qcut and kmeans clustering\nsplit into train, validate, test (70% - 20% - 10% respectively)\nscale the df\'s using MinMaxScaler\n\nExplore\nDuring exploration, I looked at interaction of Independent features vs. Outcome, Independent vs. Indpendent Features, and cluster subgroups vs. Outcome.\nModel\nFirst, a baseline model was created to compare the following model performances. The baseline was based on the most common outcome from the train df - 0 (not diabetic). Using 0 as the predicting for each observation, the baseline was 66% accurate on train. Note: Because each observation is predicted negative, the recall rate is 0%.\nVarious classification models were created by fitting to the train df. Models evaluated on train were:\n\nDecision Tree\nRandom Forest\nK-Nearest Neighbors\nRidge Classifier\nSGD Classifier\n\nModels evaluated on the validate df were:\n\nDecision Tree\nRandom Forest\nK-Nearest Neighbors\n\nFinal Model\nRandom Forest was the final model selected. It performed the best not only on accuracy, but recall and precision on Positive (predicted diabetic) cases. Because False Negative cases are the most harmful, emphasis was selecting a model the did best on Recall.\n\n\n\nModel\nRandomForest\n(max_depth=5, random_state=123)\n\'Glucose\', \'Age\', \'BMI\',  \'insulin_glucose_cluster\', \'DiabetesPedigreeFunction\'\n\n\n\n\nDF\nAccuracy\nRecall on Positive (predicting diabetic)\nPrecision on Positive (predicting diabetic)\n\n\nTrain\n86%\n75%\n84%\n\n\nValidate\n78%\n64%\n73%\n\n\nTest\n75%\n63%\n70%\n\n\n\nHow It Works\nA random forest model contains decision trees that operate together. Each tree randomly picks features with replacement (""bagging"") before making its own prediction. The outcome with the most votes becomes the prediction.\n\n\n\nConclusions\nGlucose had the highest impact on modeling, followed by age and BMI. However, only one cluster subgroup was significantly important in the final model, which was a cluster based on glucose. Next steps include creating different clusters to improve model performance.\nThe final model chosen was a random forest with max depth of 5. The model not only performed best on accuracy (predicting patient Outcome correctly) but also on positive case recall and precision (predicting a patient Outcome of diabetic correctly). This is important because the longer a diabetic patient goes without a diagnosis, the more complications can arise such as blindness and limb amputation.\nHow to Reproduce\n\nGo over this Readme.md file. ✅\nDownload Data_Analysis.ipynb, Prepare.py, and the dataset in your working directory.\nRun this notebook.\n\nAuthor\nBethany Thompson\n'], 'url_profile': 'https://github.com/ThompsonBethany01', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'Hyderabad', 'stats_list': [['4', '          followers'], ['4', '          following'], ['0']], 'contributions': '30 contributions\n        in the last year', 'description': ['-Pima-Indians-Diabetes-Dataset\nProblem Statement: The Pima Indians Diabetes Dataset involves predicting the onset of diabetes within 5 years in Pima Indians given medical details.\nIt is a binary (2-class) classification problem. The number of observations for each class is not balanced. There are 768 observations with 8 input variables\nand 1 output variable. Missing values are believed to be encoded with zero values.\n'], 'url_profile': 'https://github.com/ramkishna1233', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'NONE', 'stats_list': [], 'contributions': '24 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/hmkrtchyan19696', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '28 contributions\n        in the last year', 'description': ['Working_New_Diabetes\n'], 'url_profile': 'https://github.com/Johndg1974', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'Sydney, Australia', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '64 contributions\n        in the last year', 'description': ['Analysis of Pima Indians Diabetes Dataset\nCOMP8220 Machine Learning\nUsing the Pima Indians Diabetes Dataset, predict whether or not a female of Pima Indian heritage has diabetes or not. The dataset consists of 8 predictor variables and one target variable (Outcome). The notebook contains a series of tasks aimed to understand the data.\n'], 'url_profile': 'https://github.com/jarvipuz', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}","{'location': 'Hyderabad', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['Diabetes_knn_ML\nPrediction of Diabetes with KNN algorithm.\n'], 'url_profile': 'https://github.com/suneethach', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Nov 26, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021']}"
"{'location': 'São Luis - Brazil', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '37 contributions\n        in the last year', 'description': ['Diabates Predictor Web App 🇧🇷\nTable of Content\n\nDemo\nOverview\nMotivation\nTechnologies Used\nTechnical Aspect\nMachine Learning Model\nData Collection\nTeam\nCredits\n\nDemo\nLink: https://diabates-predictor.herokuapp.com/\n\nOverview\nThis is a classifation app build in the Django Framework. The trained model takes the informations about the pacient as a input, and predict the class: Diabetes or Healthy.\nMotivation\nIn this lockdown period, people are afraid to go to medical appointments for fear of contracting the new coronavirus, and because of that, many diseases can go unnoticed. With this app, people can know if they have a high chance of having diabetes without leaving home, the only thing they need to do is put their information on the website and wait for the result.\nTechnologies Used\n\n   \nTechnical Aspect\nThis project is divided into two parts:\n\nTraining a machine learning model using Sk-learn.\nBuilding and hosting a Django web app on Heroku.\n\nMachine Learning Model\nIn this classification problem, a voting classifier based on: XGBoost, SVM\'s, Extra Trees and Random Forests was used to predict the class. For more information about the code and the techniques used, check out the Jupyter notebook in the ""Machine Learning Model Folder"".\nData Collection\nThe dataset used was the Pima Indians Diabetes Database, available on Kaggle\nTeam\n\n\n\n\n\n\n\n\nLeonardo França Bessa\n\n\n\nCredits\n\nCreating a Machine Learning Based Web Application Using Django: Withouth this amazing tutorial on how to build a app using Django, I wouldn\'t be able to develop this.\n\n'], 'url_profile': 'https://github.com/LeoFrancaBessa', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['What is this?\nThis school project is a knowledge system that could guide you through the Dutch laws and guidelines regarding the safety of buildings. It can solve goals by trying to infer rules and questions that say something about the goals. Note that this system is incomplete.\nFeatures\n\nSimple rule inference using backward chaining.\nUse HTML to make your questions and answers pretty\nQuestions are optional: you can use both rules and questions to get to an answer. You can use this to ask complex questions to expert users and allow the less expert user to skip the question (to be bombarded with more but simpler questions.)\nTool to analyse knowledge base which helps you find uncovered cases.\n\nUsage\nWeb based version\nThe version in this repository is hosted at http://kat.ikhoefgeen.nl/ but it is easy to set up a small webserver and host your own code. Any webserver with PHP >= 5.4 should do. If you are taking the Knowledge Technology Practical I can arrange hosting for you.\nPut your knowledge base in the \'knowledgebases\' folder (or upload them through the web interface) and point your browser to the www/index.php file to get started.\nCLI-version\nThis can be started by calling\n./main.php [-v] knowledge-base\n\nExample:\n./main.php knowledge.xml\n\nKnowledge base format\nThe knowledge base can contain rules, questions and goals to infer and is written using XML. See www/knowledge-base-example.xml for an example.\nKnowledge file\n<knowledge>\n\t<title>Title of the knowledge base</title>\n\t<description>A short description of what your knowledge base can infer</description>\n\n\t<!-- rules, questions and goals go here -->\n</knowledge>\n\nRules\n<rule>\n\t<description>A description of the rule</description>\n\n\t<!-- conditions of when the rule can be applied -->\n\t<if>\n\t\t<!-- testing the value value of a fact -->\n\t\t<fact name=""pressure"">high</fact>\n\t\t\n\t\t<!-- You can nest conditions -->\n\t\t<and>\n\t\t\t<fact name=""pressure"">low</fact>\n\n\t\t\t<!-- negations -->\n\t\t\t<not>\n\t\t\t\t<fact name=""state_machine"">on</fact>\n\t\t\t</not>\n\t\t</and>\n\t</iff>\n\n\t<!-- consequences of the rule -->\n\t<then>\n\t\t<fact name=""alarm"">yes</fact>\n\t</then>\n</rule>\n\nQuestions\n<question>\n\t<description>Is the machine turned on?</description>\n\n\t<!-- each possible answer is encoded in an option -->\n\t<option>\n\t\t<description>The machine is powered on</description>\n\t\t<then>\n\t\t\t<fact name=""state_machine"">on</fact>\n\t\t</then>\n\t</option>\n\t<option>\n\t\t<description>The machine is powered off</description>\n\t\t<then>\n\t\t\t<fact name=""state_machine"">off</fact>\n\t\t</then>\n\t</option>\n</question>\n\nGoals\n<goal name=""alarm"">\n\t<description>Should the alarm be triggered?</description>\n\t<!-- See, you can use HTML :) -->\n\t<answer value=""yes""><![CDATA[<span style=""color:red"">PANIC!</span>]]></answer>\n\t<answer value=""no"">Keep calm and carry on</answer>\n\t<answer value=""$undefined"">... and you are asking me?!</answer>\n</goal>\n\nDesign\nInterface and Solver\nThe program starts in one of the interfaces, either the command line interface or webfrontend.php. The interface creates a new instance of Solver, which is the inference engine. It then loads the initial state (your knowledge base).\nYou apply all the rules in your KB by calling the solver\'s Solver::solveAll with your state. This call will either return an AskedQuestion or null.\nIt will return an AskedQuestion if the goal it tries to currently solve can be solved using a question from your Knowledge Base. It is up to you to display the question and add the answer to the question to the current state. See either www/webfrontend.php or main.php for an example of an implementation of this.\nThe solver will return null when there are no more questions to be asked, i.e. the solver is finished, the goal stack is empty, and there is no new knowledge to infer. Now you can display the conclusions. The webfrontend does this by looking at the initial goals defined in the knowledge base and printing the descriptions associated with the values the goal\'s facts received.\nSolver\nThe Solver contains two important methods, Solver::solve and Solver::solveAll, but only the last one is the one you probably want to call.\nSolver::solve implements a single step of backward chaining. It tries to find a value for a given fact name. First by applying all rules in the knowledge base (forward chaining). In this case it will return a Yes object, with the value of the fact.\nIf that does not work, it will try to infer what facts need to be known before it can apply rules that infer the fact that it was given to solve. This will result in a Maybe object which contains the information about what fact is necessary to infer before we can continue with the given fact. Solver::solveAll adds this to the top of the goal stack, thereby completing backward chaining.\nIf there is no rule to infer a fact, Solver::solve will return No, and the value of that fact will be set to $undefined.\nSolver::solveAll complements Solver::solve by calling it repeatedly untill the goal stack is empty, and dealing with the Yes/No/Maybe results of Solver::solve.\nSolver::solve makes use of Solver::forwardChain. This is a very rudimentary implementation of forward chaining. It tries to apply rules for which the condition is determinable: it is either a Yes or a No, but not a Maybe.\nIf the condition is Yes, the consequent is added to the knowledge base, overwriting any of the values in the kb if a fact is both in the kb and in the consequent.\nWhen it is determinable, so either Yes or No, the rule itself is removed from the knowledge base to prevent infinite loops.\nIt repeats this step until non of the rules\' conditions are determinable anymore, i.e. there are either no rules left, or all of their conditions yield Maybe.\nYes/No/Maybe\nThe solver makes use of three-valued logic, namely yes, no and I don\'t have enough information. That last one is encoded using the Maybe object. Yes and No just behave as expected, and Maybe propagates:\nYes and Maybe -> Maybe\nNo and Maybe -> No\nMaybe and Maybe -> Maybe\nYes or Maybe  -> Yes\nNo or Maybe  -> No\nMaybe or Maybe  -> Maybe\nnot Yes -> No\nnot No -> Yes\nnot Maybe -> Maybe\nThese objects also contain information on why this is the result of a condition, which is very useful for determining which goal to try to infer during backward chaining.\nSuggested improvements\nThis system works but is no where near feature-complete. The following improvements are things I thought of while trying to model certain problems.\nBetter ordering of questions asked\n(not implemented) Currently this is implemented by simply counting which fact is used most in the rules that can be applied to reach a goal, trying to take into account the nesting of that rule. This could be improved by also taking the operator into account (e.g. \'not\') or adding more weight to asking questions.\nSupport for open ended questions\n(not implemented) In stead of asking someone his age using multiple choice, you could ask them to enter it in a number field. If you do this, you probably want to implement the operators greater-than and less-than as well.\nDiscrete set of possible values for facts\n(not implemented) E.g. if something is not \'yes\', it has to be \'no\'. Currently it just becomes $undefined.\nMore OWL-like domain modeling\n(not implemented) This is a bit of a more complicated implementation of the previous suggestion. For example, if you have to choose a body part that hurts, one could say \'nose\'. And if something in the head hurts, we may need paracetamol. But in stead of naming all the parts of the head (ear, nose, mouth, tongue, etc.) we may want to just say \'head\' and the system should infer that \'nose\' is a part of \'head\'. This could look something like this:\n<fact name=""place of pain"">\n\t<option value=""head"">\n\t\t<option value=""ear""/>\n\t\t<option value=""nose""/>\n\t</option>\n\t<option value=""body"">\n\t\t<option value=""stomach"">\n\t\t\t<option value=""upper stomach""/>\n\t\t\t<option value=""lower stomach""/>\n\t\t</option>\n\t</option>\n</fact>\n\nRules would need new operators, like \'part-of\':\n<rule>\n\t<if>\n\t\t<fact name=""place of pain"" operator=""part-of"">head</fact>\n\t</if>\n\t<then>\n\t\t<fact name=""medicine"">paracetamol</fact>\n\t</then>\n</rule>\n\nQuestions could have a negation in the consequence:\n<question>\n\t<description>Does your nose hurt?</description>\n\t<option>\n\t\t<description>Yes</description>\n\t\t<then>\n\t\t\t<fact name=""place of pain"">nose</fact>\n\t\t</then>\n\t</option>\n\t<option>\n\t\t<description>No</description>\n\t\t<then>\n\t\t\t<not>\n\t\t\t\t<fact name=""place of pain"">nose</fact>\n\t\t\t</not>\n\t\t</then>\n\t</option>\n</question>\n\nThis can all be modeled with the current implementation, but it would need many more facts and rules and you would be polluting your knowledge base with basic human inference knowledge.\n'], 'url_profile': 'https://github.com/anniektheuwissen', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['5', '          following'], ['0']], 'contributions': '16 contributions\n        in the last year', 'description': ['naive_bayes_diabetes\npracticing naive bayes clf on a diabetes dataset\n'], 'url_profile': 'https://github.com/n-amr', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'Maharashtra, India', 'stats_list': [['2', '          followers'], ['1', '          following'], ['12']], 'contributions': '616 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Django\n'], 'url_profile': 'https://github.com/ashishrana080699', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['5']], 'contributions': '18 contributions\n        in the last year', 'description': ['Diagnosis-of-Diabetes-Disease\nIn this Project the various Machine learning and Deep learning Models are used for the diagnosis of the Diabetes which can improve the decision making ability of the doctors while giving Prescription to its patient.\n'], 'url_profile': 'https://github.com/Ashishmishra0505', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'Aarhus, Denmark', 'stats_list': [['5', '          followers'], ['5', '          following'], ['24']], 'contributions': '666 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Hogfeldt', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '17 contributions\n        in the last year', 'description': ['Diabetes_Statistical_Analysis\nThis project aims to identify current trends and relationships within diabetes data from the CDC.\nData for this project can be found here https://gis.cdc.gov/grasp/diabetes/DiabetesAtlas.html under \'Archived Data\'.\nSee below for descriptions of each applied method and instructions on how to run the code.\nIncluded Code\nThree R scripts are included in the repo. Only ""diabetes.R"" and ""obesity.R"" were utilized in the report. Future work is planned for ""excercise.R"".\nRunning the Code\n\nUse R Studio or another IDE like Spyder for visualizing the plots.\nThe two scripts utilize both the Tidyverse and ggpubr packages that can be installed with install.packages(""PACKAGE"") command.\nEach script reads in CSV files from custom paths based on the host system, please change to match your path to the data.\nFuture imporvments will be made to containerizing the code and project.\n\n'], 'url_profile': 'https://github.com/anorris772', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anibalhr95', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '52 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Ravikud', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/swapnil91094', 'info_list': ['Jupyter Notebook', 'Updated Nov 23, 2020', 'PHP', 'Updated Jan 13, 2021', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Updated Nov 25, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Python', 'Updated Nov 28, 2020', 'R', 'Updated Dec 4, 2020', 'Python', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/samjaswanth', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '106 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Using-Ensemble-Techniques\nDiabetes is one of the most commonly known chronic diseases, leading to complications in health if it is unidentified and not diagnosed.\nImplemented various machine learning algorithms on the data collected from PIMA Indian Diabetes Database, which is sourced from the UCI Machine learning repository.\nApplied machine learning techniques such as K Nearest Neighbors, Logistic regression, Naive Bayes, Decision trees, Gaussian process, Linear SVM, RBF SVM, Xgboost, Gradient boost, AdaBoost and Random forest.\nAll these mentioned algorithms are applied to the normalized data. The performance comparison of the model is discussed based on the accuracy as an evaluation metric, along with a brief description of how every model is implemented in this paper. The voting classifier is applied on top of the best models from the above machine learning techniques listed.\n'], 'url_profile': 'https://github.com/MuraliKrishna26', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shikshya1', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '196 contributions\n        in the last year', 'description': ['diabetes_pred_classif_rlog_svm_dtree\ndiabetes predictors using MLlib logistic, svm and dtree regression\n\nSource : UCI Machine Learning Repository\nURL : https://archive.ics.uci.edu/ml/datasets/Early+stage+diabetes+risk+prediction+dataset.\n\nPurpose:\n\nuse diabetes dataset to train logistic, svm and dtree regression models.\nuse trained regression model to identify which ones have a better performance.\n\nRequirements:\n\nSpark installed\n\nObjective :\n\nperform steps to extract features and label and submit to a MLlib classification models.\nuse different parameters and transformations on data to identify a good model.\n\n'], 'url_profile': 'https://github.com/mkenjis', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'france', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '75 contributions\n        in the last year', 'description': ['diabetes-prediction\n'], 'url_profile': 'https://github.com/sachinjangoni', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'India', 'stats_list': [], 'contributions': '102 contributions\n        in the last year', 'description': ['Artificial-Neural-Network-Predict-the-Diabetes-Dataset\nAnalysis the diabetes dataset and predict  that if person diabetic or non diabetic.\n'], 'url_profile': 'https://github.com/yash12345678901', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pk8010', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '46 contributions\n        in the last year', 'description': ['Diabetes-Patient-s-Hospital-Readmission-Prediction\nHospital readmission is an indicator of the quality of care and is a driver for the increasing cost of healthcare. Like other chronic diseases, Diabetes is associated with a higher risk of hospital readmission. In this project, we evaluate several machine learning approaches to predict the probability of hospital re-admissions for diabetic patients. The data set used for this study contains more than 100,000 diabetic patient data and 50 variables including length of stay, insulin, and in-patient visits from hospitals in the United States. We leverage several pre-processing techniques and investigate the performance of the various models. The signiﬁcant variables contributing to the analysis are the number of in-patients, length of stay, number of medications, number of diagnoses, and age. The results demonstrate the viability of the techniques in providing a better understanding of factors inﬂuencing hospital re-admission.\nDifferent files for preprocessing, modelling and important features have been uploaded in different files.\n'], 'url_profile': 'https://github.com/rahulgyansharma', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'Houston, Texas', 'stats_list': [], 'contributions': '54 contributions\n        in the last year', 'description': ['The objective is to predict based on diagnostic measurements to classify whether a patient has diabetes or not.\nData Mining Analysis includes Outlier Detection, Exploratory Data Analysis and Prediction Analysis includes KNN, Decision Trees, DBSCAN.\n'], 'url_profile': 'https://github.com/vdevasena', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}","{'location': 'New York, USA', 'stats_list': [['67', '          followers'], ['3', '          following'], ['1']], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/zia207', 'info_list': ['Jupyter Notebook', 'Updated Nov 29, 2020', 'Python', 'Updated Nov 28, 2020', 'Jupyter Notebook', 'Updated Nov 24, 2020', 'Updated Nov 27, 2020', 'Scala', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Nov 29, 2020', 'Updated Nov 27, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['7']], 'contributions': '25 contributions\n        in the last year', 'description': ['LDA and QDA on Diabetes Dataset\n(a) Applying LDA and QDA to the Diabetes Dataset and comparing their performance\n(b) Predicting class using LDA and QDA for the below:\nglucose test/intolerence = 68\ninsulin test =122\nSSPG = 544\nRelative weight = 1.86\nfasting plasma glucose = 184\n'], 'url_profile': 'https://github.com/Shreya-mathur', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'Dhaka, Bangladesh', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '31 contributions\n        in the last year', 'description': ['Evaluation-of-Machine-Learning-Models-on-Diabetes-Prediction\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nAcknowledgements\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\nInspiration\nCan we build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\nReference\nhttps://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/takihasan', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['540']], 'contributions': '103 contributions\n        in the last year', 'description': ['Regression Model to Predict Patient Estimated Hospitalization Time\nDrugs that are ready for Phase III clinical trial testing undergo administering and screening. For example, a very unique and sensitive diabetes drug requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. A predictive model was built that can identify which type of patients the drug should be tested on. Target patients were people that were likely to be in the hospital for this duration of time and would not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve this goal a regression model was built that could predict the estimated hospitalization time for a patient and use this to select/filter patients for the study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, a regression model was built that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project demonstrated the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This model was also analyzed and interpreted for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. Therefore, dataset is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\n'], 'url_profile': 'https://github.com/lenamax2355', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'Egypt, Giza, 6th of October', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/melsadany', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'Lagos, State Nigeria', 'stats_list': [['5', '          followers'], ['15', '          following'], ['10']], 'contributions': '24 contributions\n        in the last year', 'description': ['Early-stage-diabetes-risk-prediction-using-Logistic-Regression\nData Set Information:\nThis has been collected using direct questionnaires from the patients of Sylhet Diabetes\nHospital in Sylhet, Bangladesh and approved by a doctor.\nAttribute Information:\n\nAge 1.20-65\nSex 1. Male, 2. Female\nPolyuria 1. Yes, 2.No.\nPolydipsia 1. Yes, 2.No.\nsudden weight loss 1. Yes, 2.No.\nweakness 1. Yes, 2.No.\nPolyphagia 1. Yes, 2.No.\nGenital thrush 1. Yes, 2.No.\nvisual blurring 1. Yes, 2.No.\nItching 1. Yes, 2.No.\nIrritability 1. Yes, 2.No.\ndelayed healing 1. Yes, 2.No.\npartial paresis 1. Yes, 2.No.\nmuscle stiffness 1. Yes, 2.No.\nAlopecia 1. Yes, 2.No.\nObesity 1. Yes, 2.No.\nClass 1. Positive, 2. Negative.\n\nData Set Source: https://archive.ics.uci.edu/ml/datasets/Early+stage+diabetes+risk+prediction+dataset.\n'], 'url_profile': 'https://github.com/funtodaramola', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '19 contributions\n        in the last year', 'description': ['Diabetic-Prediction-\nClassification Project to help determine if or if not a user will develop diabetes\n'], 'url_profile': 'https://github.com/nish-c', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['4']], 'contributions': '89 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/despean', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '351 contributions\n        in the last year', 'description': ['Purpose\nThe purpose of Glyco is to provide a platform for tracking diabetes, along with serving as a user friendly service to consolidate, analyze, and improve the user\'s wellbeing. The application has features including tracking glucose levels, A1C levels, food intake, exercise, and step amounts. Glyco provides an innovative and efficient way of inputting these measurements - shortcuts provide ease of access and encourage its users to track their measurements by cutting down the time it takes to input them, a quality that distinguishes it from other diabetes-tracking applications. It also acts as an integration point by grabbing data from applications that the patient already uses to consolidate all of that information into one place (e.g. incorporating glucose levels and steps from Apple Health).\nBy analyzing past data, Glyco also encourages better health habits by generating health challenges for the patient to improve their condition and provides intuitive data analysis so the patient can track their progress over both week and month time periods. Glyco serves people who currently have Type I and Type II diabetes, people with prediabetes, and their caretakers if they\'re not capable of using the application. More specifically, it aims to serve people of all ages - from children to young adults to older adults - as the measurements that people with diabetes have to be aware of tend to be similar regardless of age or type of diabetes.\nWith time-efficient measurement tracking, data consolidation and visualization, and health challenge generation, Glyco serves as an application that not only provides ease to their users but also attempts to improve their wellbeing.\nDependencies\nMore information about versions can be found in the pubspec.yaml file.\n\nFlutter\nFont Awesome for Flutter\nNano Healthkit\nfl_chart\nCupertino Icons\nMockito\n\nDeployment\nFor build and deployment, our team relied on Flutter\'s automated building and fastlane. For more detailed instruction, visit: https://medium.com/@pavel.sulimau/deliver-flutter-ios-app-to-testflight-with-fastlane-1513ae047cd9.\n\nEnsure that you have an Apple Developer account\nInstall fastlane on your device. ""brew install fastlane"" for macOS, or visit https://docs.fastlane.tools/getting-started/ios/setup/ for instructions on installing fastlane\nEnsure that the bundle ID written in the /ios/Runner.xcodeproj/project.pbxproj file is correct\nOpen /ios/Runner.xcodeproj in Xcode. Ensure that the correct team and bundle ID are displayed, and that iOS deployment target is set to 12.0\n""cd glyco/"" and run the command ""flutter build ios --release --no-codesign""\n""cd ios/"" and run the command ""bundle exec fastlane beta"". The application should then be placed on AppStoreConnect\n\n'], 'url_profile': 'https://github.com/jeffreyluoxlvii', 'info_list': ['R', 'Updated Nov 24, 2020', 'Updated Nov 25, 2020', 'Updated Nov 24, 2020', 'Jupyter Notebook', 'Updated Jan 21, 2021', '1', 'Jupyter Notebook', 'Updated Oct 29, 2020', 'Python', 'Updated Nov 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Nov 27, 2020', 'Python', 'Updated Dec 1, 2020', 'Dart', 'Updated Nov 26, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['t1cvdrisk\nDevelopment and validation of a cardiovascular risk prediction model in type 1 diabetes\nScottish Type 1 Diabetes CVD Risk Prediction\nThis project contains R source code used in the development of a Type 1 diabetes cardiovascular risk prediction model.\nOnly approved researchers within or collaborating with the Scottish Diabetes Research Network will have access to the restricted anonymised secure databases required to run the cohort generation and modelling code.\nThe source code is provided for review.\n'], 'url_profile': 'https://github.com/diabepi', 'info_list': ['R', 'Updated Dec 16, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Nov 29, 2020']}","{'location': 'Copenhagen', 'stats_list': [['3', '          followers'], ['4', '          following'], ['11']], 'contributions': '234 contributions\n        in the last year', 'description': ['Hackathon-2020\nThis repository stores the code and results in Hackathon-2020, aiming to analyse the real dataset  and synthetic dataset if diabetes.\nThe descriptions of this Hackathon can be found here.\nThe dataset and descriptions can be found here or in the folder ""data"".\nThis our team page. Teammates: Jiajun He, Zelin Li.\nAn outline of our work and result can be found in the file ""Presentation_Slides.pdf"".\nA more detailed description is shown below.\n\nAn outline of our work\n\nTrain a model on synthetic data to predict re-admission of the patients, compare the performance on synthetic data and real data.\nTrain a Neuron Net to classify real data and synthetic data.\nAnalyze the result of the last step, find the most significant difference between two datasets.\n\nDetailed description of each step\n1. Train a model to predict re-admission of the patient\nTrain a model on synthetic data to predict re-admission of the patients, then valid on validation set of synthetic data and on real data.\nCompare the difference in performance, to find if there is any difference between real data and syn data.\n1.1 PCA\nBy PCA, we reduce 41 dimensions(except readmit) to 10 dimensions, then calculate the correlation coefficient between each principle component and each raw dimensions.\nFind that there are some dimensions that are very un-related with all those 10 principle components, they are ""chlorpropamide"", ""acetohexamide"", ""tolbutamide"", ""miglitol"", ""tolazamide"", ""glyburide-metformin"", ""glipizide-metformin"".\nSo in all of the following analysis, we teased out these dimensions.\n1.2 Model structure\nThe structure during training is shown as follows:\n\nWhen predicting, use discrete fratures by Random Forest2 to classify, and use continuous features by Neuron Network to further classify those data being predicted as class -1.\n1.3 Result\n\n\n\n\nSynthetic Data (Training set)\nSynthetic Data (Val set)\nReal Data\n\n\n\n\nAccuracy\n71%\n68%\n53%\n\n\n\nFrom the table, we find that real data is much harder to predict than synthetic data.\nSo only using synthetic data to conduct data analysis is risky.\n2. Classify real data and synthetic data\nLast step, we find that there are significant difference between 2 dataset, so in this step, we want to figure out if this difference is learnable by training a classifier to classify 2 dataset.\n2.1 Model structure\nWe use a 5-hidden-layer neuron network to classify, and the amount of neurons in each layer is 60, 40, 20, 10, 5.\n2.2 Result\n\n\n\n\nTraining set\nVal set\n\n\n\n\nAccuracy\n90%\n88%\n\n\n\nFrom the table, we can tell that the difference between 2 datasets is learnable.\n3. Analysis the result, find the most significant difference between 2 datasets\nIn last step, we find that the difference between 2 datasets is learnable. In this step, we use t-SNE to visualise the ability of decoupling of each layer in our trained neuron network.\n3.1 t-SNE embedding and visualization\n\nFrom the picture, we can see after 1st layer, the decoupling is pretty good. Though as network goes deeper, the result is getting better, what makes a significant difference is 1st layer.\n3.2 Analyse what the 1st layer does\nTo see what the 1st layer does, we take pseudo-inverse to recoover input.\nThis inspiration comes from the paper Visualizing and Understanding Convolutional Networks by Zeiler M.D., Fergus R. in 2014. Though this is not a ConvNet, the idea is similar.\nWe take the samples that mostly active the neurons in 1st layer. The matrix of these samples are X. A is the outout of 1st layer. Then we use formula below to recover X. Here we take pseudo-inv as W is not square.\n\nThen compare the difference between input and input X. Check those dimensions significantly negative in recovered X. These dimensions can be interepreted as ""useless"" dimensions beacuse 1st layers are not activated by these dimensions.\nBy teasing these dimensions out, we get 22 dimensions remained.\n3.3 Find the most important dimensions amoung 22 dimensions\nFirst, train model to classify real and syn data using only 1 dimension of these 22 dimensions, finding the accuracy are just a little bit higher than 50%, indecating that one dimension is not sufficient.\nSecond, train model by using 2 dimensions of these 22 dimensions, finding by combining ""insulin"" and ""diabetesMed""/ ""insulin"" and ""change"" / ""change"" and ""diabetesMed"", the accuracy can achieve about 62-65%. While the combination of other dimensions seem no use.\nThen we train model by using these 3 dimensions: ""insulin"", ""change"" and ""diabetesMed"". The accuracy is shown below.\n\n\n\n\nAll features\nOnly 3 features\nAll other features\n\n\n\n\nAccuracy\n88%\n72%\n74%\n\n\n\nThis indecates that these 3 features really matter.\n3.4 Understand why these 3 features matter\nWe calculate the correlation coefficient between these 3 features, the result is shown as follow.\nReal Data\n\n\n\n\ninsulin\nchange\ndiabetesMed\n\n\n\n\ninsulin\n1.00\n-0.14\n0.26\n\n\nchange\n-0.14\n1.00\n-0.51\n\n\ndiabetesMed\n0.26\n-0.51\n1.00\n\n\n\nSynthetic Data\n\n\n\n\ninsulin\nchange\ndiabetesMed\n\n\n\n\ninsulin\n1.00\n-0.02\n0.01\n\n\nchange\n-0.02\n1.00\n-0.02\n\n\ndiabetesMed\n0.01\n-0.02\n1.00\n\n\n\nIn real data, these three dimensions are highly related;\nwhile in synthetic data, these three dimensions seems to be generated independently.\nThis is the most significant difference between 2 datasets.\n4. Conclusion\n\n\nThe mainly difference between real data and synthetic data are dimensions “insulin”, “change” and “diabetesMed”;\n\n\nIn real data, these three dimensions are highly related;\n\n\nWhile in synthetic data, these three dimensions seems to be generated independently.\n\n\n'], 'url_profile': 'https://github.com/hejj16', 'info_list': ['R', 'Updated Dec 16, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Nov 29, 2020']}",,,,,,,,
