"{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': [""sc-diabetes\nThis repositories provides source code for Semantic Containers and sample data to demonstrate handling of Diabetes data. The work was funded by the European Union's Horizon 2020 Research and Innovation Programme under the NGI TRUST Grant Agreement No. 825618.\nFind more information about the respective topics:\n\nOwnYourData: https://www.ownyourdata.eu\nSemantic Container: https://www.ownyourdata.eu/semcon\nDocker Image for Semantic Container: https://hub.docker.com/repository/docker/semcon/sc-base\n\nData Flows\nThe following data flows are documented in detailed:\n\nTidepol Integration: https://github.com/sem-con/sc-diabetes/blob/master/dataflows/Tidepool_Integration/README.md\nData Donation: https://github.com/sem-con/sc-diabetes/blob/master/dataflows/Data_Donation/README.md\nPersonal Data: https://github.com/sem-con/sc-diabetes/blob/master/dataflows/Personal_Data/README.md\nData Tracing: https://github.com/sem-con/sc-diabetes/blob/master/dataflows/Data_Tracing/README.md\n\n\xa0\nImprove the Diabetes Semantic Container\nPlease report bugs and suggestions for new features using the GitHub Issue-Tracker and follow the Contributor Guidelines.\nIf you want to contribute, please follow these steps:\n\nFork it!\nCreate a feature branch: git checkout -b my-new-feature\nCommit changes: git commit -am 'Add some feature'\nPush into branch: git push origin my-new-feature\nSend a Pull Request\n\n\xa0\nLizenz\nMIT License 2020 - OwnYourData.eu\n""], 'url_profile': 'https://github.com/sem-con', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['nick-\nDiabetes\n'], 'url_profile': 'https://github.com/nickverhagen', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '0 contributions\n        in the last year', 'description': ['reactstrap-basic-sidebar\nStatic collapsible Bootstrap sidebar menu\nInstalation\nnpm install\n\nrun\nnpm start\n\nPreview\n\nOriginal HTML/Bootstrap template\nbootstrapious.com\n'], 'url_profile': 'https://github.com/svaghari', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['diabetes515-\n'], 'url_profile': 'https://github.com/diabetes515', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'New Delhi, India', 'stats_list': [['5', '          followers'], ['5', '          following'], ['25']], 'contributions': '3,709 contributions\n        in the last year', 'description': ['Diabetes Prediction\nIn this mini-project, I trained a logistic regression model to correctly predict a diabetes diagnosis in patients.\nThe file prediction.py is the main file where the model was trained, and then saved. The file check.py is the file where I use some validation data and a sample to check for the probability of the prediction and check if the model iis working correctly.\n'], 'url_profile': 'https://github.com/yashg160', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Wonju, Korea', 'stats_list': [['8', '          followers'], ['8', '          following'], ['1']], 'contributions': '382 contributions\n        in the last year', 'description': ['DiabetesManager\n'], 'url_profile': 'https://github.com/oune', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Addis Ababa, Ethiopia', 'stats_list': [['2', '          followers'], ['1', '          following'], ['3']], 'contributions': '91 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Surafeljava', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Addis Ababa, Ethiopia', 'stats_list': [['2', '          followers'], ['1', '          following'], ['3']], 'contributions': '91 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Surafeljava', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['3']], 'contributions': '106 contributions\n        in the last year', 'description': ['Prediction of Diabetes Using Classification Algorithms\nThe aim of project was to predict diabetes based on various parameters of the human body. A dataset consisting of details of the people was divided into Training and Test dataset. To start with, data was explored, preprocessed and visualized. Machine learning models were then applied to the preprocessed data. Trained models were then used to see how well the model performs on unseen data.\nComments have been added in the project. In case you still not able to understand anything feel free to contact me at: shauryaluthra689@gmail.com.\nFeel free to clone, download and edit this repositry.\ndiabetes.csv is the dataset used\n'], 'url_profile': 'https://github.com/Shaurya-L', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['1', '          following'], ['2']], 'contributions': '32 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Deskola', 'info_list': ['1', 'HTML', 'MIT license', 'Updated Sep 18, 2020', 'Updated Jan 13, 2020', 'JavaScript', 'Updated Jan 20, 2020', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 14, 2020', 'HTML', 'Updated Mar 6, 2020', 'Updated Jan 19, 2020', 'Java', 'Updated Jan 19, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Python', 'Updated Jan 15, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/lordofmax', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['5']], 'contributions': '5 contributions\n        in the last year', 'description': ['diabetes-prediction\n'], 'url_profile': 'https://github.com/singhrt', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '3 contributions\n        in the last year', 'description': ['Smart Assistant Diabetes Mobile\nSmart Assistant Diabetes Mobile is an android application prototype that has various features such as diabetics exercise info, Body Mass Index (BMI) calculator, Blood sugar level graph, food calories database, and also mealtime, take medication, and exercise reminder. This app was built on Android Studio.\n'], 'url_profile': 'https://github.com/firmansadewo', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Chingford, London', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '21 contributions\n        in the last year', 'description': ['""# Diabetes Data""\n'], 'url_profile': 'https://github.com/notsoseamless', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['5', '          following'], ['13']], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sairamgajavalli', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'New Jersey', 'stats_list': [['0', '          followers'], ['1', '          following'], ['28']], 'contributions': '146 contributions\n        in the last year', 'description': [""Diabetes-Detection-Using-KNearest-Neighbors\nThe aim of this project is to detect Diabetes in a person using various parameters like 'Glucose', 'BloodPressure', 'SkinThickness', 'BMI', 'Insulin'. We predict whether a person has diabetes using K Nearest Neighbors, Random Forest and XGBoost algorithms.\nWe found out that both Random forest algorithm and XGBoost algorithm had same accuracy.\nThus we can use any of the algorithm between them.\nWe use the diabetes dataset from kaggle which consists of 786 rows.\nLink to the diabetes dataset - https://www.kaggle.com/johndasilva/diabetes\n""], 'url_profile': 'https://github.com/RohitPhadke', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'San Mateo, California', 'stats_list': [['0', '          followers'], ['7', '          following'], ['5']], 'contributions': '144 contributions\n        in the last year', 'description': [""Correlations between poverty, food environment and diabetes\nProblem statement\nDuring the past two decades, the number of American adults diagnosed with diabetes has more than doubled as the population has aged and become more overweight or obese. Often a healthy lifestyle (healthy diet, regular physical activity, maintaining a normal body weight and avoiding tobacco use) is the recommended measure to prevent or delay the onset of type 2 diabetes (the most common type of diabetes). Meanwhile, worldwide the prevalence of diabetes has increased more rapidly in middle- and low- income countries, suggesting a potential link between financial well-being and diabetes rate.\nAlthough economic status and healthy lifestyle are not independent from each other, by far it is not clear which is a stronger predictor of the prevelance of diabetes rate. While it is difficult to directly gather information and assess the healthiness of people's lifestyles, residents' chances of maintaining a healthy diet and physical activity can be informed by the local food and fitness environment such as the diversity and/or abundance of grocery stores, farmer's markets and fitness facilities.\nIn this project, we will utilize the\nFood_Environment_Atlas_database to answer these questions:\n\nWhich is a stronger predictor of adult diabetes rate in the United States, economic status or food and fitness environment\nWill the conclusions change if we group the counties by urbanity (metro vs. non-metro counties) and poverty level (persisten-poverty vs. non-poverty)?\n\nIn addition, we will also explore potential patterns of economic status and food environment among the counties.For example,  which areas are featured by high concentration of farmers' markets or convenience stores?\nConclusions of this project could be useful to government agencies, city planners, policy makers and local communities that want to promote a healthier food environment. Local food producers, grocery stores and companies in the health and wellness industry may also be interested.\nMethods\nA suite of machine learning algorithms will be used to address the above questions, including:\nPredicting Diabetes (Supervised learning models)\n\nLinear regression\nDecision Trees\nRandom Forest\nXGBoost\n\nFinding patterns of economic and food environment among counties (unsupervised learning models)\n\nPCA\nK-means clustering\n\nFiles\nCode can be accessed here: Final_food-poverty-diabetes.ipynb\nData file: data_atlas\nFinal report:  final_report.docx\nPresentation slides: PresentationSlides.pdf\n(Author's note: This is the first capstone project completed for my Data Science training with the Springboard Data Science Career Track education program based in San Francisco.)\n""], 'url_profile': 'https://github.com/BrachyS', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Chennai', 'stats_list': [['10', '          followers'], ['14', '          following'], ['3']], 'contributions': '58 contributions\n        in the last year', 'description': ['Diabetes-on-set-detection\nPredicts if the person has  diabetes or not depending on certain parameters like glucose,blood pressure etc\nOn-set-Diabetes-detection\nWe are using some parameters like pregnacy,glucose,blood pressure etc to predict if the person has diabetes or not. This project works on PIMA Indians Diabetes Data Set. It uses the potential of deep learning to predict the on-set of diabetes in females. The concept of hyper parameter tuning using grid search helps in training the model and predict the output. The advantage of this project is that it takes into account general human body parameters instead of medical parametes obtained using medical test. The model obtained a 78.2% accuracy score.\n'], 'url_profile': 'https://github.com/workwithanvay', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'Ilorin, Kwara State', 'stats_list': [['8', '          followers'], ['2', '          following'], ['42']], 'contributions': '335 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Abuton', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/gauri05', 'info_list': ['Jupyter Notebook', 'Updated Jan 14, 2020', '1', 'GPL-3.0 license', 'Updated Jan 18, 2020', 'Java', 'Updated Jan 14, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', '1', 'Jupyter Notebook', 'Updated Jan 29, 2020', 'Jupyter Notebook', 'Updated Oct 31, 2020', 'Jupyter Notebook', 'Updated Jan 13, 2020', '1', 'Jupyter Notebook', 'Updated Jan 15, 2020', 'Python', 'Updated Jan 15, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['ML_T1D_predictors\nMachine Learning type 1 diabetes predictors\n'], 'url_profile': 'https://github.com/Genome3d', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '25 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kaderkabore', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['1', '          following'], ['0']], 'contributions': '97 contributions\n        in the last year', 'description': ['PIMA-Indians-Diabetes-Analysis\nThe dataset is provided by National Institute of Diabetes and Digestive and Kidney Diseases. The samples come from a database of medical information obtained from the PIMA Indians population. Specifically for this dataset, a subsection of that database was provided. The population in the sub-section belongs to females age 21 and above.  The objective is to ""diagnostically predict whether or not a patient has diabetes"" based on the information provided.\nLink to data: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/albazahm', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': '1721 East Beltline Rd., Coppell, TX 75019', 'stats_list': [['3', '          followers'], ['4', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Kun1204', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'Singapore', 'stats_list': [['2', '          followers'], ['48', '          following'], ['14']], 'contributions': '9 contributions\n        in the last year', 'description': ['Diabetes_readmission_prediction\nThis is a simple ML classification problem. The objective is to use historical patient data to predict the likelihood of readmission. The doctor intends to use this as an assessment tool before he discharges his patient. The data analyst has already did the analysis and develop with a predictive model.\nDeploy this -\n\n1. Batch mode -\na. Apply the model on a daily csv file\nb. Get the readmission prob score and\nc. load the dataset (daily csv file + Prob Score) into a database table in the hospital operational data store (ODS).\nd. Frontend applications will be interface with the ODS to display the predicted result.\n2. Interactive mode -\na. Create an api that can accept the inputs for the prediction model\nb. Imagine that there is a frontend web application that will take in these parameters and upon submission, the readmission probability score will be returned to a result placeholder.\n'], 'url_profile': 'https://github.com/juthebest', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'Chicago', 'stats_list': [['2', '          followers'], ['3', '          following'], ['13']], 'contributions': '84 contributions\n        in the last year', 'description': ['Diabetes Supplies Inventory Portal\nFor managing incoming supplies and maintaining an inventory.  \n\n    log failures, log changes for insulin pump wearers and cgm wearers.\n\n'], 'url_profile': 'https://github.com/matloc13', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['19']], 'contributions': '21 contributions\n        in the last year', 'description': ['scikit-lerarn_diabetes\n'], 'url_profile': 'https://github.com/jenius13', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['1', '          following'], ['0']], 'contributions': '0 contributions\n        in the last year', 'description': ['Logistic Regression with example : Diabetes Detection\nLogistic Regression is a Machine Learning algorithm which is used for the classification problems, it is a predictive analysis algorithm and based on the concept of probability.\n\nAs shown in the picture if you are trying to figure out the test will pass or fail; that is known as Logistic regression. Lets see some real world example\n\nTo predict whether an email is spam (1) or (0)\nWhether the tumour is malignant (1) or not (0)\nIf you are diabetic  (1) or not (0)\n\nConsider a scenario where we need to classify whether an email is spam or not. If we use linear regression for this problem, there is a need for setting up a threshold based on which classification can be done. Say if the actual class is malignant, predicted continuous value 0.4 and the threshold value is 0.5, the data point will be classified as not malignant which can lead to serious consequence in real time.\nFrom this example, it can be inferred that linear regression is not suitable for classification problem. Linear regression is unbounded, and this brings logistic regression into picture. Their value strictly ranges from 0 to 1.\nProject:\nTo make the learning project easier and productive, we are going to learn Logistic Regression by an example of creating a logistic regression model to predict a user is Diabetic or not.\nFirst we are going to collect the dataset and clean it. Then we will create a Logistic regression model with fitting the dataset.\nFileName: diabetic_analysis_logistic_regression.ipynb\nFinally after a successive training it’s our main goal to integrate our machine learning model with the GUIs. You can use tkinter for making a desktop application like we did in Linear Regression example, but here we are going to integrate it with a web framework i.e Flask, to create a website that will take the input parameters from the user and predict if they are Diabetic or not.\nCommand to run the script: python flask_integration\\app.py\n\nHope you have enjoyed learning this, if so share this with others and for more such contents you can connect with me on\nYouTube: https://www.youtube.com/channel/UCmF8qppe02J1ot4Jfwl_lFg\nLinkedIn: https://www.linkedin.com/in/jagwithyou/\nMedium: https://medium.com/@jagwithyou\n'], 'url_profile': 'https://github.com/explorewithjag', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': '#82/24 Shanti Nibash, Barontek (Balur Mat), Dhaka Cantonment-1206, Pallabi, Dhaka, BAngladesh', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MdSILipon', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '5 contributions\n        in the last year', 'description': ['Moblie-Software-design--Diabetes-Lifestyle-Advisor\na prototype mobile application tracking diabetes patients real-time data for hospitality purpose.\n'], 'url_profile': 'https://github.com/AppleGEVision2', 'info_list': ['Python', 'Updated Jan 16, 2020', 'Python', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Feb 9, 2020', 'Jupyter Notebook', 'Updated Jan 18, 2020', 'Python', 'Updated Jan 19, 2020', 'JavaScript', 'Updated Jun 19, 2020', 'Jupyter Notebook', 'Updated Jan 16, 2020', '1', 'Jupyter Notebook', 'Updated Feb 13, 2020', 'Python', 'Updated Jan 18, 2020', 'BSD-2-Clause license', 'Updated Jan 15, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['Performed exploratory data analysis on the Pima-Indian-Diabetes Dataset.\nUsed Pandas, Numpy, Matplotlib and Seaborn libraries in Python.\nReference: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/shastri556', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '44 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bhavya2810', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'Melbourne,Australia', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['Decision-Tree-Classification\nFirst Decision Tree Classification Using Diabetes dataset from Kaggle\n'], 'url_profile': 'https://github.com/trilochanyadav', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/C3PO-alpha', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'New York, USA', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '40 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/TanviPareek', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'NONE', 'stats_list': [['27', '          followers'], ['30', '          following'], ['20']], 'contributions': '18 contributions\n        in the last year', 'description': ['classification-using-machine-learning\nGlass.csv and Diabetes.csv Classification (Naive Bayes-Decision Tree-Neural Network) with using ""pandas"",""numpy"" and ""sklearn"" libraries\n'], 'url_profile': 'https://github.com/cahitsahin', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'Bengaluru', 'stats_list': [['22', '          followers'], ['2', '          following'], ['6']], 'contributions': '46 contributions\n        in the last year', 'description': ['Healthcare\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not.\nContext:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nProblem Statement:\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not?\nDataset Description:\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0\nApproach:\nFollowing pointers will be helpful to structure your findings.\n\n\nPerform descriptive analysis. It is very important to understand the variables and corresponding values. We need to think through - Can minimum value of below listed columns be zero (0)? On these columns, a value of zero does not make sense and thus indicates missing value.\n•\tGlucose\n•\tBloodPressure\n•\tSkinThickness\n•\tInsulin\n•\tBMI\nHow will you treat these values?\n\n\nVisually explore these variable, you may need to look for the distribution of these variables using histograms. Treat the missing values accordingly.\n\n\nWe observe integer as well as float data-type of variables in this dataset. Create a count (frequency) plot describing the data types and the count of variables.\n\n\nCheck the balance of the data by plotting the count of outcomes by their value. Describe your findings and plan future course of actions.\n\n\nCreate scatter charts between the pair of variables to understand the relationships. Describe your findings.\n\n\nPerform correlation analysis. Visually explore it using a heat map.\n\n\n(Note: Do not focus on visualization aspects when working with SAS)\n\nDevise strategies for model building. It is important to decide the right validation framework. Express your thought process. Would Cross validation be useful in this scenario?\n\n(Note: if you are working with SAS, ignore this question and perform stratified sampling to partition the data. Create strata of age for this.)\n\nApply an appropriate classification algorithm to build a model. Compare various models with the results from KNN.\n\n(Note: if you are working with SAS, ignore this question. Apply logistic regression technique to build the model.)\n\nCreate a classification report by analysing sensitivity, specificity, AUC(ROC curve) etc. Please try to be as descriptive as possible to explain what values of these parameter you settled for? any why?\n\n'], 'url_profile': 'https://github.com/ParidhiGola', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '0 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anupriyo6', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'Campbellton NB Canada', 'stats_list': [['5', '          followers'], ['2', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mikey506', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}","{'location': 'Singapore', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '296 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/HyperionNKJ', 'info_list': ['Jupyter Notebook', 'Updated Jan 13, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2020', 'Python', 'Updated Apr 14, 2020', 'Updated Jan 14, 2020', '1', 'Python', 'MIT license', 'Updated Jan 15, 2020', 'Jupyter Notebook', 'Updated Jan 19, 2020', 'Python', 'Updated Jan 16, 2020', 'PHP', 'Updated Feb 22, 2020', 'Jupyter Notebook', 'Updated Jan 17, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['5']], 'contributions': '0 contributions\n        in the last year', 'description': [""Statistical_analysis\nThis repository contains the code to implement appropriate statistical analysis on diabetes data set along with inferences.\nThe tests include: Normality (shapiro-wilk test), covariance, correlation (pearson, spearman), homogeneity of variance (Levene), Anova, student's ttest, Wilch's test, Mannwhitney U test, ChiSquare test, Fisher's exact test, paired sample ttest, Wilcoxon signed rank test etc.\n""], 'url_profile': 'https://github.com/aswini379', 'info_list': ['Jupyter Notebook', 'Updated Jan 16, 2020', 'Jupyter Notebook', 'Updated Feb 7, 2020', '1', 'Jupyter Notebook', 'Updated Jan 18, 2020']}","{'location': 'Bangalore', 'stats_list': [['3', '          followers'], ['0', '          following'], ['9']], 'contributions': '199 contributions\n        in the last year', 'description': ['patient-has-diabetes or not?\nContext:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nProblem Statement:\nBuild a model to accurately predict whether the patients in the dataset have diabetes or not?\nDataset Description:\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure: Diastolic blood pressure (mm Hg)\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction: Diabetes pedigree function\nAge: Age (years)\nOutcome: Class variable (0 or 1) 268 of 768 are 1, the others are 0\nApproach:\nFollowing pointers will be helpful to structure your findings.\n\n\nPerform descriptive analysis. It is very important to understand the variables and corresponding values. We need to think through - Can minimum value of below listed columns be zero (0)? On these columns, a value of zero does not make sense and thus indicates missing value.\n•\tGlucose\n•\tBloodPressure\n•\tSkinThickness\n•\tInsulin\n•\tBMI\nHow will you treat these values?\n\n\nVisually explore these variable, you may need to look for the distribution of these variables using histograms. Treat the missing values accordingly.\n\n\nWe observe integer as well as float data-type of variables in this dataset. Create a count (frequency) plot describing the data types and the count of variables.\n\n\nCheck the balance of the data by plotting the count of outcomes by their value. Describe your findings and plan future course of actions.\n\n\nCreate scatter charts between the pair of variables to understand the relationships. Describe your findings.\n\n\nPerform correlation analysis. Visually explore it using a heat map.\n\n\n(Note: Do not focus on visualization aspects when working with SAS)\n\nDevise strategies for model building. It is important to decide the right validation framework. Express your thought process. Would Cross validation be useful in this scenario?\n\n(Note: if you are working with SAS, ignore this question and perform stratified sampling to partition the data. Create strata of age for this.)\n\nApply an appropriate classification algorithm to build a model. Compare various models with the results from KNN.\n\n(Note: if you are working with SAS, ignore this question. Apply logistic regression technique to build the model.)\n\n\nCreate a classification report by analysing sensitivity, specificity, AUC(ROC curve) etc. Please try to be as descriptive as possible to explain what values of these parameter you settled for? any why?\n\n\nCreate a dashboard in tableau by choosing appropriate chart types and metrics useful for the business. The dashboard must entail the following:\n\n\na)\tPie chart to describe the diabetic/non-diabetic population\nb)\tScatter charts between relevant variables to analyse the relationships\nc)\tHistogram/frequency charts to analyse the distribution of the data\nd)\tHeatmap of correlation analysis among the relevant variables\ne)\tCreate bins of Age values – 20-25, 25-30, 30-35 etc. and analyse different variables for these age brackets using a bubble chart.\n'], 'url_profile': 'https://github.com/Satnam00', 'info_list': ['Jupyter Notebook', 'Updated Jan 16, 2020', 'Jupyter Notebook', 'Updated Feb 7, 2020', '1', 'Jupyter Notebook', 'Updated Jan 18, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['5', '          following'], ['3']], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nwr5103', 'info_list': ['Jupyter Notebook', 'Updated Jan 16, 2020', 'Jupyter Notebook', 'Updated Feb 7, 2020', '1', 'Jupyter Notebook', 'Updated Jan 18, 2020']}",,,,,,,
