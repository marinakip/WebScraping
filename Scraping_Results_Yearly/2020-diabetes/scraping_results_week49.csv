"{'location': 'Zlin, Czech Republic ', 'stats_list': [['245', '          followers'], ['14', '          following'], ['6']], 'contributions': '240 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/icebeam7', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'NONE', 'stats_list': [['29', '          followers'], ['42', '          following'], ['7']], 'contributions': '36 contributions\n        in the last year', 'description': ['Fighting_with_Diabetes\nThis project estimates about whether the diabetic patient will be hospitalized again within the first 30 days after discharge.\nThe dataset : Diabetes 130-US hospitals for years 1999-2008 Data Set\nGraduation project from Kodluyoruz üöÄ\n'], 'url_profile': 'https://github.com/belenburcu', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Turkey', 'stats_list': [['37', '          followers'], ['52', '          following'], ['14']], 'contributions': '32 contributions\n        in the last year', 'description': ['Predicting the Readmission of Diabetic Patient\'s\n\nDiabetes, which is at the forefront of diseases of the age, is a disease that plays a leading role in the formation of many deadly diseases and is very common all over the world.\nIt is important to know whether a patient can be readmitted in a hospital. In this project, we tried predict whether diabetes patients will return to the hospital or not by using machine learning algorithms.\nDataset Information\nWe used this dataset,\nSource of the data set:\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\nRequirements\nThere are some general library requirements for the Project. The general requirements are as follows.\n\nNumpy\nPandas\nScikit-learn\n\nFor Visualization\n\nMatplotlib\nSeaborn\nPlotly\nMissingno\n\nThe library requirements specific to some methods are:\n\nLogistic Regression\nGradient Boosting Classifier\nRandom Forest Classsifer\nXGboost Classifier\nLight-GBM Classifier\nCatBoost Classifier\n\nContent\nThe data set represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. Information was extracted from the database for encounters that satisfied the following criteria.\n\nIt is an inpatient encounter (a hospital admission).\nIt is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\nThe length of stay was at least 1 day and at most 14 days.\nLaboratory tests were performed during the encounter.\nMedications were administered during the encounter.\nThe data contains such attributes as patient number, race, gender, age, admission type, time in hospital, medical specialty of admitting physician, number of lab test performed, HbA1c test result, diagnosis, number of medication, diabetic medications, number of outpatient, inpatient, and emergency visits in the year before the hospitalization, etc.""\n\nThe following steps were followed in this project:\n\nExploratory data analysis\nVisualization\nSplit data into training , validation and test set\nFeature Engineering\nModelling\nFeature Importance\nPredict results\n\nPresentation\nhttps://prezi.com/view/TJ6WPvqUV5962zIIeEnV/\nMembers\n\n\n\nName\n\n\n\n\nAyse Nur TURKASLAN\n\n\nH.Kubra KUCUKKARTAL\n\n\n\n'], 'url_profile': 'https://github.com/nurrturkaslan', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Baltimore,MD', 'stats_list': [['0', '          followers'], ['24', '          following'], ['64']], 'contributions': '95 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Tascano', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Bay Area', 'stats_list': [], 'contributions': '24 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/mcx3', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'London UK', 'stats_list': [['215', '          followers'], ['0', '          following'], ['6']], 'contributions': '102 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nsadawi', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '40 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/E-J-CHOI', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Iran,Tehran', 'stats_list': [], 'contributions': '16 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sorushghorbanimehr', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Russia,Moscow', 'stats_list': [['6', '          followers'], ['30', '          following'], ['144']], 'contributions': '166 contributions\n        in the last year', 'description': ['diabetes\n1) —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç Anaconda   !!!\n2) —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç TensorFlow  !!!\n\nconda install tensorflow\n\n'], 'url_profile': 'https://github.com/jf17', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}","{'location': 'Mumbai, Maharashtra', 'stats_list': [], 'contributions': '38 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vartaks-spec', 'info_list': ['2', 'C#', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Dec 2, 2020', '3', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'HTML', 'Updated Dec 3, 2020', 'Updated Dec 1, 2020', 'HTML', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 5, 2020']}"
"{'location': 'Pune', 'stats_list': [['0', '          followers'], ['2', '          following'], ['2']], 'contributions': '34 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abhinav-mane', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Hayward, California', 'stats_list': [], 'contributions': '30 contributions\n        in the last year', 'description': ['DiabetesML\nMachine learning model built to predict of diabetes in Pima Indian women.\nI used the MachineShop package in R which is a comprehensive ML package and the dataset was from Pima Indian women dataset. Four models (gradient boosted model, radial SVM, logistic regression, and probit model) were assessed for performance and the metric of choice was the Brier score. The logistic regression model performed best in the prediction of diabetes using this dataset.\n'], 'url_profile': 'https://github.com/Drbuxie', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Fortaleza, Cear√°', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '166 contributions\n        in the last year', 'description': ['Modelo Simples de Detec√ß√£o de Diabetes com Interface Gr√°fica (Streamlit)\n\n\nO modelo treina com base em um csv conhecido.\n\n\nForma um modelo treinando e apresenta a acur√°cia com base no treinamento do csv.\n\n\nAplicar o modelo treinado na predi√ß√£o do paciente.\n\n\nReceber as informa√ß√µes fornecidas pelo paciente para apresenta o status: risco ou sem risco (ver imagem)\n\n\nInstala√ß√£o\nInstalar a virtualenv env3 com python3.6\n> virtualenv env3\n\nou caso tenha um python diferente\n> virtualenv -p dir(python3.6) env3\n\nInstalar requirements.txt\n> pip install requirements.txt\n\nTeste / Execu√ß√£o\n(env3)> streamlit run app.py\n\n'], 'url_profile': 'https://github.com/wellingtondantas', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Vernon - France', 'stats_list': [['3', '          followers'], ['0', '          following'], ['3']], 'contributions': '288 contributions\n        in the last year', 'description': ['DiabetesPrevent - v1.0.2 release (2021/01/27)\nThis application is my Project #9 of OpenClassrooms Java application developer course.\nOverview:\nDiabetes prevent is a Mediscreen application that helps the Practitioner to make Diabetes evaluation reports.\nThis software is based on a microservices architecture for a Docker containers deployment.\nThe current \'DiabetesPrevent\' GitHub repository contains backend microservices.\nAn Angular frontend application named \'DiabetesPrevent_UI\' is available on the same \'Docky37\' directory.\nThe backend is divided in two parts\n\n\nthe first part is in charge of the personal information and contains the SpringBoot application \'PatientManager\' and\nthe Spring Data Rest application \'Patient\' connected to a MySQL database.\n\n\nthe other part manages the medical files of patients and contains the SpringBoot application \'PatientHistoryManager\'\nand the Spring Data Rest application \'PatientHistory\' connected to a MongoDB database.\n\n\n\nTechnical\n\nApplication is build with SpringBoot v2.4 and Gradle 6.7\nThis application only contains the \'MedicalFile\' model entity and the repository interface\nSpring Data Rest is in charge to expose CRUD endpoints that will be requested by \'PatientHistoryManager\' WebClient.\nThe \'MedicalFile\' model entity is mapped (with Hibernate ORM) to the \'medicalFiles\' collection of a MongoDB database\nnamed \'patientHistoryDB\'.\n\nQuick way to have a look on the application\n\nIn the \'Quick way to have a look\' folder you can fin a docker-compose.yml file that allows you to run the backend of DiabetesPrevent in Docker containers with command line \'docker-compose up -d\'.\nYou can also find 2 files that contains patients\'data & medical files to test it.\n\nImport MySQL data\n\n\nCopy backup file to running container:\n$ docker cp [path]/backup.sql docker-compose_patient_db_1:/backup.sql\n\n\nLaunch container bash:   $ winpty docker exec -it docker-compose_patient_db_1 bin/bash\n\n\nRun mySql with root credentials:   root@5b3ec6e48903:/# mysql -u root -p\n\n\nSelect the database:   mysql> use patient_db\n\n\nData Import:   mysql> source backup.sql\n\n\nImport mongoDB data\n\n\nCopy backup file to running container :\n$ docker cp [path]/output.json docker-compose_p-histodb_1:/tmp/output.json\n\n\nLaunch container bash:   $ winpty docker exec -it docker-compose_p-histodb_1 bash\n\n\nData Import:   root@4555bc18b854:/# mongoimport -d patientHistoryDB -c medicalFiles tmp/output.json\n\n\nTry it\nThe application provides Swagger V3 documentation that allows you to test each endpoint of backend with running containers:\n\nhttp://localhost:8081/swagger-ui/index.html#/  to test Patient\'s demographics API (Sprint one)\nhttp://localhost:8082/swagger-ui/index.html#/  to test Patient\'s history & Diabetes evaluation (Sprint 2 & 3)\n\nFrontend\nAnother way to enjoy my work, is to run the \'DiabetesPrevent-UI\' frontend application (built with Angular).\n\nJust use  \'docker run -d -p 3000:80 --name diabetesprevent  docky37/diabetes_prevent:diabetes-prevent\'\nThen open your browser and go to \'http://localhost:3000/patients\'\nYou probably face a CORS security issue, I have resolved it by running Chrome browser with --user-data-dir=""g:/wsp9"" parameter.\n\nBest regards,  Thierry \'Docky\' SCHREINER\n'], 'url_profile': 'https://github.com/Docky37', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Thessaloniki', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '10 contributions\n        in the last year', 'description': ['Sacchon-frontend\ndiabetes management\n'], 'url_profile': 'https://github.com/SidiropoulosAnastasios', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Thessaloniki', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '10 contributions\n        in the last year', 'description': ['Sacchon-backend\ndiabetes management\n'], 'url_profile': 'https://github.com/SidiropoulosAnastasios', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '50 contributions\n        in the last year', 'description': ['DiabetesPredictionFlask\n'], 'url_profile': 'https://github.com/SundeshRaj', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'Navi Mumbai, Maharashtra, India', 'stats_list': [], 'contributions': '340 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Deployment\n\nThis repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku Platform.\nIf you want to view the deployed model, click on the following link :-\nDeployed at : https://pima-diabetes.herokuapp.com/\n\n'], 'url_profile': 'https://github.com/Sagar3195', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [['7', '          followers'], ['6', '          following'], ['153']], 'contributions': '180 contributions\n        in the last year', 'description': ['Diabetisica\n'], 'url_profile': 'https://github.com/rahulg009', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [['19', '          followers'], ['0', '          following'], ['0']], 'contributions': '125 contributions\n        in the last year', 'description': ['Diabetes Milletus Predictor\n\nPredict Diabetes milletus using Machine Learning.\n\nIn this project, our objective is to predict whether the patient has diabetes milletus or not based on various features like Glucose level, Insulin, Age, BMI. Different attributes are used for training the model. Flask framework is used for deploying the model.\nInternship Title:RSIP Career Plus ML 076\nProject ID:SPS_PRO_190\nProject Title:Diabetes Milletus Prediction\n'], 'url_profile': 'https://github.com/smartinternz02', 'info_list': ['Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Dec 2, 2020', 'Python', 'MIT license', 'Updated Dec 1, 2020', 'Java', 'Updated Feb 6, 2021', 'TypeScript', 'Updated Dec 3, 2020', 'Java', 'Updated Dec 3, 2020', 'CSS', 'Updated Dec 1, 2020', 'HTML', 'Updated Feb 12, 2021', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Jupyter Notebook', 'Updated Dec 7, 2020']}"
"{'location': 'Charcha, district - Korea, Chhattishgarh', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '93 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nDiabetes prediction using Machine Learning (Logistic Regression)\nWhile building this model, our objective is to predict whether the patient has diabetes or not based on various features like Glucose level, Insulin, Age, BMI. I will perform all the steps from Data gathering to Model deployment. During Model evaluation, I compared various machine learning algorithms on the basis of accuracy_score metric and find the best one, what I found is that other algorithms are not as good in accuracy (around 72-74%) in comparison to Logistic Regression (around 76.62%) so in this module I have predicted whether the person has diabetes or not, on ""Pima Indian Diabetes Dataset"" using Logistic Regression and then tuned it to get an accuracy around 81.17%.\n'], 'url_profile': 'https://github.com/Manoj25091999', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'India', 'stats_list': [['2', '          followers'], ['2', '          following'], ['5']], 'contributions': '135 contributions\n        in the last year', 'description': ['diabetesapp\n'], 'url_profile': 'https://github.com/bhanuprathap2000', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '34 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/rohi221b', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['2']], 'contributions': '66 contributions\n        in the last year', 'description': [""Diabetes Prediction - Deployment\n  \n‚Ä¢ This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n‚Ä¢ If you want to view the deployed model, click on the following link:\nDeployed at: https://diabetes-prediction-aravind.herokuapp.com/\n‚Ä¢ If you are searching for Code, Algorithms used and Accuracy of the model.. you won't find it here. Click the link mentioned below for the same:\nLink: https://github.com/aravindguna/Diabetes-Prediction/blob/main/Diabetes%20Predictor.ipynb\n‚Ä¢ Please do ‚≠ê the repository, if it helped you in anyway.\n‚Ä¢ A glimpse of the web app:\n\n""], 'url_profile': 'https://github.com/aravindguna', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': [""Diabetes prevention with behavioral counseling of patients with prediabetes\nA living systematic review\nShort url: http://openmetaanalysis.github.io/Diabetes-prevention\nClinical summary: This meta-analysis suggests that clinical intervention is effective. Heterogeneity of results as measured by I2 'might not be important' at 26%. This review updates previously published meta-analysis(es).(citation[s] below)\nMeta-regression of common modulators (year of publication, study size, event rate in the control groups) finds that the outcome of the intervention is effected by xx.\n\nReconciliation of conclusions with prior meta-analyses (under construction)\nKeep current with this topic (under construction)\n\nAcknowledgement: we acknowledge the essential work by the authors of the prior systematic review(s) listed below.\nMethods overview: This repository is an openMetaAnalysis that combines methods of scoping, rapid, and living systematic reviews.  This analysis updates one or more previously published review(s) below. A comparison of studies included in this review compared to prior reviews are in the table, reconciliation of trials included with prior meta-analyses/. Newer studies included are listed in the references below. Rationale for newer trials excluded may be listed at the end of the references.\n\nMethods for openMetaAnalysis\nEvidence search for this review (under construction)\n\nResults: Details of the studies included are in the:\n\nReconciliation of trials included with prior meta-analyses/ (under construction)\nDescription of studies (PICO table) (under construction)\nRisk of bias assessment (under construction)\nForest plots (source data)\nNetwork plots (optional)\nReconciliation of conclusions with prior meta-analyses (under construction)\n\nThe forest plot for the primary outcomes are below. Additional forest plots of secondary analyses may be available.\n\nReferences:\nSystematic review(s)\nMost recent review at time of last revision of this repository\n\nHemmingsen B, Gimenez-Perez G, Mauricio D, Roqu√© I Figuls M, Metzendorf MI, Richter B. Diet, physical activity or both for prevention or delay of type 2 diabetes mellitus and its associated complications in people at increased risk of developing type 2 diabetes mellitus. Cochrane Database Syst Rev. 2017 Dec 4;12(12):CD003054. doi: 10.1002/14651858.CD003054.pub4. PMID: 29205264; PMCID: PMC6486271.\n\nRandomized controlled trials\nNew trial(s) not included in the most recent review above\n\nSampson M, Clark A, Bachmann M, Garner N, Irvine L, Howe A, Greaves C, Auckland S, Smith J, Turner J, Rea D, Rayman G, Dhatariya K, John WG, Barton G, Usher R, Ferns C, Pascale M; Norfolk Diabetes Prevention Study (NDPS) Group. Lifestyle Intervention With or Without Lay Volunteers to Prevent Type 2 Diabetes in People With Impaired Fasting Glucose and/or Nondiabetic Hyperglycemia: A Randomized Clinical Trial. JAMA Intern Med. 2020 Nov 2:e205938. doi: 10.1001/jamainternmed.2020.5938. Epub ahead of print. PMID: 33136119; PMCID: PMC7607494.\nAckermann RT, Liss DT, Finch EA, Schmidt KK, Hays LM, Marrero DG, Saha C. A Randomized Comparative Effectiveness Trial for Preventing Type 2 Diabetes. Am J Public Health. 2015 Nov;105(11):2328-34. doi: 10.2105/AJPH.2015.302641. Epub 2015 Sep 17. PMID: 26378828; PMCID: PMC4605179.\n\nTrial(s) included in the review above\nSee Hemmingsen et al.\nTrial(s) undergoing review\nNone\nTrial(s) excluded - selected list of important trial(s)\n\nRosas LG, Lv N, Xiao L, Lewis MA, Venditti EMJ, Zavella P, Azar K, Ma J. Effect of a Culturally Adapted Behavioral Intervention for Latino Adults on Weight Loss Over 2 Years: A Randomized Clinical Trial. JAMA Netw Open. 2020 Dec 1;3(12):e2027744. doi: 10.1001/jamanetworkopen.2020.27744. PMID: 33337491; PMCID: PMC7749441. Did not measure incidence of diabetes as an outcome*\n\nCited by\nThis repository is cited by:\n\nWikiDoc contributors. Pending content page. WikiDoc. Nov 9, 2014. Available at: http://www.wikidoc.org/index.php/This_topic. Accessed November 9, 2014.\n\n\nCite and use this content  - Edit this page - License - History  -\nIssues and comments\n""], 'url_profile': 'https://github.com/openMetaAnalysis', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'bangalore', 'stats_list': [], 'contributions': '53 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/arabindascientist77', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '32 contributions\n        in the last year', 'description': ['diabetes_prediction\nThis project was done in google collab\n'], 'url_profile': 'https://github.com/RishikeshGovind', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '19 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Aniket4301', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '156 contributions\n        in the last year', 'description': ['Diabetes-Classification\n'], 'url_profile': 'https://github.com/ads-22', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['2']], 'contributions': '212 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nIntroduction:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage (by UCI Machine Learning).\nVariables:\n\n\nPregnancies: Number of times pregnant\n\n\nGlucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test\n\n\nBloodPressure: Diastolic blood pressure (mm Hg)\n\n\nSkinThickness: Triceps skin fold thickness (mm)\n\n\nInsulin: 2-Hour serum insulin (mu U/ml)\n\n\nBMI: Body mass index (weight in kg/(height in m)^2)\n\n\nDiabetesPedigreeFunction: Diabetes pedigree function\n\n\nAge: Age (years)\n\n\nOutcome: Class variable(0 or 1) (Target Variable)\n\n\nAlgorithm Used:\nLogistic Regression, Decision tree, KNearestNeighbour, Support Vector Classification Algorithms are used.\n'], 'url_profile': 'https://github.com/sandeepkumar9343', 'info_list': ['Jupyter Notebook', 'Updated Dec 17, 2020', 'Python', 'Updated Dec 5, 2020', 'Jupyter Notebook', 'Updated Dec 6, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Updated Jan 22, 2021', 'Updated Dec 2, 2020', 'Updated Dec 1, 2020', 'CSS', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '19 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sergio031-coi', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['diabetes_management\nA new Flutter application.\nGetting Started\nThis project is a starting point for a Flutter application.\nA few resources to get you started if this is your first Flutter project:\n\nLab: Write your first Flutter app\nCookbook: Useful Flutter samples\n\nFor help getting started with Flutter, view our\nonline documentation, which offers tutorials,\nsamples, guidance on mobile development, and a full API reference.\n'], 'url_profile': 'https://github.com/NencyAnghan', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/EhsanMehryaar', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '61 contributions\n        in the last year', 'description': ['Python: Diabetes\nITExperience Python ML Final Project on Diabetes\nTask\nCreate a python project using Google CoLab utilizing the python programming language that was learned in the ITExperience November weekend course (Nov. 7-29, 2020).\nCriteria\n\nEncourage to work in teams, but individual project is still accepted\nUse Google CoLab\nUse GitHub to collaborate with teammates and for version control\nUse Slack channel for communication between teammates and instructors\n\nSummary\nFunctionality\nDesign\n\nPrinciples of Clean Coding and Coding Structure has been implemented\nMarkdown language has been used to enhanced the readability of the CoLab notebook\nUtilize the ""Pima Indians Diabetes Database""\n\nRun Locally\nTech Stack\n\nGoogle CoLab\nSlack\nGitHub\nPandas\nNumpy\nMatplotlib\n\n'], 'url_profile': 'https://github.com/psalinas505', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'KERALA', 'stats_list': [['2', '          followers'], ['2', '          following'], ['12']], 'contributions': '36 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Alister-Dcruz', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'Nuapada', 'stats_list': [['27', '          followers'], ['42', '          following'], ['7']], 'contributions': '258 contributions\n        in the last year', 'description': ['Diabetes Predictor\nDescription\nIts a linear regression model made using python, matplotlib library, sklearn.\nLinearRegressionModel-1\nHere we have to fit the line so we will take only one feature and one label from the dataset.\nand plot into the linearRegressionGraph.\nLinearRegressionModel-2\nHere we are not making a graph, rather we are taking all the features to bring more accuracy to our Linear regression model.\nIt will give more presise and accurate output than LinearRegressionModel-1 .\nOur Mean squared error became almost half because here we have used more relevant features to calculate it.\nTools and Languages:\n\n\n\n\n\n\n\nInstalling Libraries\n-Code snippet 1\npip install numpy\npip install sklearn\npip install matplotlib\n\n-> We will use matplotlib library to draw our graph. Sklearn provides us with some default datasets which we can use to test our models.\nTo import datasets from sklearn we can simply import them through sklearn library.\nIn this program, we will take the dataset of diabetes from the sklearn library which will help us to identify if someone has diabetes.\nSteps to follow\n-Install the given libraries\n-Download the code from the given github repository\n-Run the code\nBreaking the code\n-Code snippet 2\ndiabetes = datasets.load_diabetes()\n\nprint(diabetes.keys())\n\nprint(diabetes.DESCR)\nAs shown in code snippet 2, we had assigned the dataset of diabetes to variable diabetes.\n(diabetes.keys()) gives Some description about the features from the dataset.\n(diabetes.DESCR) gives a brief description on Data Set Characteristics.\n-Code snippet 3\ndiabetes_X = diabetes.data[:, np.newaxis, 2]\n\ndiabetes_X_train  = diabetes_X[:-30]\ndiabetes_X_test = diabetes_X[-30:]\nAs we have to fit the line that‚Äôs why we will take only one feature and one label from the dataset.\nWe have only taken the index (2) from the dataset because we only need one feature\n-Code snippet 4\nmodel = linear_model.LinearRegression()\nmodel.fit(diabetes_X_train, diabetes_y_train)\ndiabetes_y_predicted = model.predict(diabetes_X_test)\n\nprint(‚ÄúMean squared error is:  ‚Äù, mean_squared_error(diabetes_y_test, diabetes_y_predicted))\nprint(‚ÄúWeights:  ‚Äù,  model.coef_)\nprint(‚ÄúIntercept:  ‚Äù,  model.intercept_)\nHere we have created our linear regression model. We have passed the training data to the (model.fit) then we will pass the testing data for prediction.\nThen we have printed the values for mean squared error, weights and intercept.\n-Code snippet 5\nplt.scatter(diabetes_X_test, diabetes_y_test)\nplt.plot(diabetes_X_test, diabetes_y_ predicted)\nplt.show()\nIn the code snippet 4, we have plotted the graph by using the testing features and labels. After that, we had made a line by using the predicted values of (y) from linear model.\nThe output graph made using matplotlib is shown below.\nLinear Regression graph:\n\nIn this program, we had only selected one feature but if we select multiple features for the same program then the output will be much better as shown in the figure below.\nOutput\n\nDeveloped by:\nSambit Kumar Tripathy\n'], 'url_profile': 'https://github.com/sambit221', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['5', '          following'], ['3']], 'contributions': '60 contributions\n        in the last year', 'description': ['Diabetes-Identification\nUsing machine learning to identify individuals with diabetes in the NHANES database\n'], 'url_profile': 'https://github.com/jjwoolley', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '47 contributions\n        in the last year', 'description': ['diabetes_prediction\n'], 'url_profile': 'https://github.com/unnmesh20', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '26 contributions\n        in the last year', 'description': ['Diabetes_detection\nweb app diabetes detection using sklearn\n'], 'url_profile': 'https://github.com/MHsafari', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['4', '          following'], ['5']], 'contributions': '71 contributions\n        in the last year', 'description': ['Diabetes Prediction\nIf you want to view the deployed model, click on the below link: Deployed at: https://sugartesting.herokuapp.com/_\nIf you are searching for all the code files related to data, modeling, api and website kindly check below github repository. Github profile link: https://github.com/amarjeet-cheema\nIf you find my work helpful. kindly ‚≠êÔ∏è my repository.\nRecreated by Amarjeet Cheema , Special thanks to Anuj Vyas @ https://github.com/anujvyas\n'], 'url_profile': 'https://github.com/amarjeet-cheema', 'info_list': ['Updated Nov 30, 2020', 'Dart', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 13, 2020', 'Updated Dec 5, 2020', '1', 'Python', 'Updated Dec 11, 2020', 'R', 'Updated Jan 15, 2021', 'HTML', 'Updated Dec 1, 2020', 'Python', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 7, 2020']}"
"{'location': 'New delhi', 'stats_list': [['4', '          followers'], ['3', '          following'], ['2']], 'contributions': '115 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/NeeruKumar', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'Pune', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nTo predict that a person is pruned to diabetes or not using historical data of  the person that was downloaded from kaggle  using svm as a machine learning algorithm.\n'], 'url_profile': 'https://github.com/PranotiG28', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'Malang', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '41 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/heriistantoo', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '57 contributions\n        in the last year', 'description': [""Diabetes Predictor\nThis is a model that uses machine learning and predicts whether or not a person is diabetic based on the data given.\nThe input provided would be a integer or a floating value in a HTML form and the fields are :-\n\n'Pregnancies'\n'Glucose'\n'BloodPressure'\n'SkinThickness'\n'Insulin'\n'BMI'\n'DiabetesPedigreeFunction'\n'Age'\n\n""], 'url_profile': 'https://github.com/am-ram', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'NONE', 'stats_list': [['8', '          followers'], ['8', '          following'], ['7']], 'contributions': '1,608 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/gabrielEscame', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'Eastern Mediterranean University', 'stats_list': [['11', '          followers'], ['24', '          following'], ['31']], 'contributions': '29 contributions\n        in the last year', 'description': ['Fighting with Diabetes\nGraduation project from Kodluyoruz\nThis project estimates about whether the diabetic patient will be hospitalized again within the first 30 days after discharge.\nThe dataset : Diabetes 130-US hospitals for years 1999-2008 Data Set\n'], 'url_profile': 'https://github.com/thealibrs', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '56 contributions\n        in the last year', 'description': ['Heroku_Diabetes_Predection\n2 Predection Algorithm Logistic Regression and Random Forest Algorithm.\nLogistic Regression is use to predict user can Buy SUV or Not .\nRandom forest Algorithm is used to predict the User suffering from Diabetes or not. Predection showing approximately 70%\nIDE use #Spyder # JupyterNotebook\nLanguage Use #Python module used like numpy , panda, Sklearn,pickle.\nLIVE HOSTED\nhttps://pydev-prediction-diabetes.herokuapp.com/\n'], 'url_profile': 'https://github.com/SushilkumarBarai', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': ['Diabetes_PredictionAPP\nI made a diabetes prediction app with AI!!!\nVideo Explanation\nhttps://www.youtube.com/watch?v=xNPaeuSvngE\n'], 'url_profile': 'https://github.com/Shervi28', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'Istanbul / Turkey', 'stats_list': [['0', '          followers'], ['0', '          following'], ['11']], 'contributions': '62 contributions\n        in the last year', 'description': ['pima-indians-diabetes-ANN\nANN_Classifier\nThis code creates an ANN model to predict diabetes patient with given medical records.\nYou can find the data in pima-indians-diabetes.csv file.\n'], 'url_profile': 'https://github.com/HamzaSahinn', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['14']], 'contributions': '323 contributions\n        in the last year', 'description': ['Diabetes_deep_learning\n'], 'url_profile': 'https://github.com/jameshyojaelee', 'info_list': ['Jupyter Notebook', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'HTML', 'Updated Dec 8, 2020', 'Python', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Nov 30, 2020', 'Python', 'Updated Dec 3, 2020', '1', 'Python', 'Updated Dec 1, 2020', '1', 'Python', 'Updated Dec 18, 2020']}"
"{'location': 'S√£o Paulo, Brasil ', 'stats_list': [['16', '          followers'], ['37', '          following'], ['12']], 'contributions': '108 contributions\n        in the last year', 'description': ['ML_PrevendoDiabetes\nDefinir, com 70% de precis√£o ou mais, se uma pessoa pode ou n√£o desenvolver diabetes.\n'], 'url_profile': 'https://github.com/JuniorTorresMTJ', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '18 contributions\n        in the last year', 'description': ['Diabetes-Prediction-System\n'], 'url_profile': 'https://github.com/Vaishalikash', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '39 contributions\n        in the last year', 'description': [""Allison et al. Diabetes 2018\nThis contains the count data from my mapping of the raw data in Allison et al. and an analysis file to recapitulate the results in that paper. This is not the actual results from the paper, but it's based on the original sequencing data.\nFiles\n\ncounts: folder containing all count files with the pattern Sample_[0-9]ReadsPerGenes.out.tab\nanalysis.R: R script for analysis of the count data\nmapping.py: python script for mapping the original FASTQ files\nsamples.csv: metadata describing the cells, treatment, and mutations for each sample\n\nOutputs\n\ncounts.csv: count file for uploading to GEO generated by the mapping.py and the analysis.R files\ntx2gene.csv: file generated from the GTF that maps Ensembl gene_id to gene_name\n\nCitation\nAllison MB, Pan W, MacKenzie A, Patterson C, Shah K, Barnes T, Cheng W, Rupp A, Olson DP, Myers MG Jr. Defining the Transcriptional Targets of Leptin Reveals a Role for Atf3 in Leptin Action. Diabetes 2018 Jun;67(6):1093-1104.\ndoi: 10.2337/db17-1395. Epub 2018 Mar 13.\n""], 'url_profile': 'https://github.com/alanrupp', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '88 contributions\n        in the last year', 'description': ['predicting-diabetes-rates\nDiabetes affects over 34 million Americans (~10% of the population). Moreso than many diseases, diabetes is linked to lifestyle choices, diet, and exercise. These lifestyle factors, and thus diabetes rates, are likely related to socioeconomic status, geographic region, and other factors. To better understand the factors that influence diabetes rates, I will analyze data on diabetes rates, socioeconomic factors, and demographics accross all counties in the United States. I will attempt to fit a model that can predict diabetes rates for US counties. Such a tool, if it were sufficiently accurate, could be used to inform counties of the number of cases they should expect, which could be used to estimate healthcare costs, and might also provide some indication of whether diabetes is underdiagnosed in a particular county.\nData Sources\nIntro statistics:\nhttps://www.diabetes.org/resources/statistics/statistics-about-diabetes\nDiabetes/obesity/physical activity rates: https://gis.cdc.gov/grasp/diabetes/DiabetesAtlas.html#\nSocioeconomic data: https://www.atsdr.cdc.gov/placeandhealth/svi/data_documentation_download.html\nRace/Demographics: https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/counties/asrh/cc-est2019-alldata.csv\nImporting Data\nAfter downloading, all datasets were cleaned and joined on state/county name in the python file import_data.py. See file for documentation on cleaning and joining datasets.\nFinal dataframe before feature selection:\n\nThis dataframe has 3141 rows (2 fewer than the total number of counties in the US due to missing data), and 273 columns/features. These features include many reduntant features from the socioeconomic dataset, and very granular racial demographics. Before doing any in depth EDA or modeling, I needed to select a subset of the columns.\nFeature selection/engineering was performed in the python file select_features.py\nExploratory data analysis and model testing was performed in the notebook Diabetes-feature-selection-and-EDA.ipynb\nExploratory Data Analysis\nFirst, lets look at the overall distribution of diabetes rates in US counties:\n\nMean: 8.7%\nStandard Deviation: 1.8%\nWe can see that diabetes rates vary over a large range, with some counties as low as ~4%, and others as high as ~18%, with the bulk of the counties falling between about 6-12%. Interestingly, we don\'t have symmetrical distribution - the peak is at about 7%, and there is a standard bell curve fall off to the right, but a much sharper drop to the left. That is, very few counties have less than ~7% diabetes. Ultimately this looks more like a Poisson distribution than a normal distribution - this will be important later.\nLets take a look at the counties with the highest and lowest diabetes rates:\n\nInteresting - it looks like southern and midwest counties make up the bulk of the top 15 counties, while western counties make up the bulk of the bottom 15. Let\'s see whether that pattern is maintained over the full dataset:\n\nAgain, we see more blue and now some purple toward the left, indicating that western and northeastern counties have lower diabetes rates, while we see more red to the right, indicating that southern counties have higher diabetes rates. Gray (midwestern) counties are sprinkled fairly uniformly throughout.\nFeature selection for modeling\nNow let\'s explore our other features and how they relate to diagnosed diabetes percentage. I selected 25 features to use in the analysis. These include two health-related features (obesity percentage and physical inactivity percentage), 8 socioeconomic factors (percent poverty, percent unemployed, percent with no high school diploma, etc.), total population, 10 demographic factors (including racial groups, age groups, and male/female split), and dummy variables indicating the region (south, midwest, northeast, west). For all racial demographics I aggregated male and female totals and calculated a percent of total population.\nAs a first pass to explore these variables we can plot all variables against diagnosed diabetes percentage:\n\nFrom this plot, we can see some variables that are likely to be useful. Obesity percentage and physical inactivity percentage correlate fairly well with diabetes rates. To a lesser degree, we can see correlations for EP_POV (the percentage of people living in below the poverty line), EP_UNEMP (percentage unemployed), EP_NOHSDP (percentage with no high school diploma), and E_PCI (estimated per capita income, a negative correlation in this case).\nThe 4th row of the plot (and the first plot of the 5th row) features various racial demographics. It is much less clear whether any of these will be useful in the regression. There does seem to be a very slight negative correlation with NHWA_PCT (non-hispanic white alone percent) and a slight positive correlation with NHBA_PCT (non-hispanic black alone percent), so these may be worth including. There is a fairly strong positive correlation with NHIA_PCT (non-hispanic american indian and alaskan native percent), however a fairly low number of counties have a high percentage.\nIn the bottom row, we see the same pattern for regions as we saw in the bar graphs above. Lower diabetes percentages in the northeast and west, and higher diabetes percentages in the south and midwest.\nNow that we have some sense of our variables, lets start testing some models!\nModeling Diabetes Rates\nOur first step is to split the data into test and train sets. I did an 80:20 Train:Test split. From here on, until we have a final model, we will be working exlusively with the training set, and saving the final test set for the end. From this point on, when I refer to a training set, it will really be training set within this initial training set.\nBaseline Model\nFirst, we will generate a ""dumb"" model to serve as a baseline to compare to our other models. Our dumb model will be to simply use the mean of our diabetes rates as an estimate.\nMean of Training Set = 0.087 (8.7% diabetes)\nBaseline model error\nWe will use root mean squared error (RMSE) as our error metric. A function to calculate RMSE is in the python file error.py\n\n\nBaseline error = 0.0177\nPerhaps a more fair comparison is to use KFold cross validation, even on this simple model. We will do so with a K of 6.\n\nReal baseline error = 0.018\nBecause we are using RMSE, we can actually interpret this value. On average, our predicted values differ from our real values by about 0.018, or 1.8 percent (remember, we are predicting a percentage). This might not sound bad, but recall that most of our values fall within 1-2% of the mean:\n\nAs a matter of fact, our RMSE for our dumb model is ~equal to our sample standard deviation (1.8%), as we should expect for a model that just uses the mean.\nSimple Linear Regression\nLet\'s build in complexity towards our final model. The next most basic approach is to use a simple linear regression.\nTo start, lets use a model with just the two health factors (obesity and physical activity) and see how we perform.\nRemember, these variables correlate reasonably well with diabetes rates:\n\nA function to test models with kfolds is in the python file test.py\nPlot for one of the folds:\n\nAverage RMSE: 0.0123\nGreat, we have improved slightly over our \'dumb\' model from 0.018 to 0.012 (about 2/3 of the initial error). However, we can see from our predicted vs. actual histogram that our predicted values take on a normal distribution while our actual values look more like poisson. Lets try a poisson regression!\n\nAverage RMSE: 0.0121\nOkay, so we are only very slightly better, but the distribution does look slightly more similar, so we will stick with this regressor.\nSelecting our top features\nInstead of going through all features manually, lets try to optimize. We can write a function that tests all single features, chooses the feature that gives the lowest error score, and adds that to the list of features to use. This can be found in test.py under the function name add_features. We can loop this process, sequentially adding more features and always choosing the feature that gives the lowest error.\nWhat are our top features?\n\nThis plot displays the error as we add features. For example, the fourth row (+ Obesity Percentage) is the error when we use Physical Inactivity Percentage, EP_UNEMP, and Obesity Percentage.\nHow many should we use?\n\nAt around 7 features we begin to get diminishing returns. This seems like a good number of features to have an interpretable model that is not overfit.\nHow do our residuals and predictions look with this model?\n\nAverage RMSE: 0.0103\nThe model has improved from 1.21% to 1.03% RMSE, and the distribution of the predictions looks much more like the poisson distribution of the actual values.\nWhat can we learn from this model?\nOur best predictors of diabetes percentage (according to a poisson regression) are:\n\nPhysical Inactivity Percentage\nEstimated Percent Unemployed\nObesity Percentage\nNon-hispanic black alone percentage\nIn south (dummy variable)\nNon-hispanic american indian and alaskan native percentage\nEstimated per capita income\n\nSo these are likely factors that have a real relationship with diabetes.\nMore complex models:\nFor the scope of this project, the above model will serve as the main model from which I will draw conclusions; however, for the sake of comparison, I will do a quick test of a few more complex models to see how they perform relative to the poisson regression.\nRandom Forest\nRandom forest with max_features set to 10 (2/5 of our total features):\n\nAverage RMSE: 0.0102\nThis model performs just slightly better than our poisson regressor (RMSE 0.0102 vs 0.0103) despite using all 25 features compared to the poisson regressor\'s 7. The costs of using this more complex model easily outway the benefits for our purposes, given that it is much harder to interpret.\nLasso\nLasso model with a range of alphas:\n\nMinimum RMSE: 0.0104\nA lasso using all features hits a minimum RMSE score of 0.0104, which is worse than the poisson regression. This makes some sense, as the poisson regression uses the appropriate distribution while lasso is expecting a normal distribution. A model that combines the two (poisson distribution with lasso) might work better, but that is out of the scope of this project.\nRidge\nRidge model with a range of alphas:\n\nMinimum RMSE: 0.0104\nSimilar to the lasso, even using all 25 features and an optimal alpha, the ridge does not perform as well as the poisson. It suffers from the same problem - expecting a normal distribution when the target is poisson.\nFinal model\nFinal model testing is in the jupyter notebook Final_Model.ipynb\nUsing the training and test sets generated at the beginning of the project, we can test the final poisson model\nModel: PoissonRegressor, alpha = 0\nFeatures used:\n\nPhysical Inactivity Percentage\nEstimated Percent Unemployed\nObesity Percentage\nNon-hispanic black alone percentage\nIn south (dummy variable)\nNon-hispanic american indian and alaskan native percentage\nEstimated per capita income\n\nPerformance:\nBaseline(mean) model RMSE: 0.0175\nFinal model RMSE: 0.0106\n\nConclusions:\nMy exploratory data analysis generated some interesting conclusions. I found that diabetes rates varied in US counties from below 4% to above 17%, and that most of the counties with the worst (highest) diabetes rates were in the south (with some in the midwest), while most of the counties with the best rates were in the west. This can perhaps be explained by differences in lifestyle and socioeconomics. However, as I found at the modeling phase, simply being in the south was the 5th most powerful predictor of diabetes rates, even though the model also included socioeconomic and lifestyle factors. Perhaps other differences in the south - like diet - that were not included in this dataset can account for this variable\'s predictive power.\nIn the modeling phase, I found that a poisson regression was the best model for this dataset. This makes sense given that I was predicting a proportion. I found that more complex models like random forest, ridge, and lasso did not perform substantially better than the regression on this dataset.\nBy iterating through all features and adding the best features to the model one-by-one, I was able to determine the most useful features in predicting diabetes rates. I was surprised to find that physical inactivity - not obesity - was the most important factor, and even more surprised to find that percent unemployment was ahead of obesity as well.\nInterestingly, per capita income was only 7th most important, while unemployment was 2nd, implying that your diabetes risk is affected more by having a job at all than by making a lot of money.\nFuture directions:\n\n\nMore lifestyle features\n\nMore granular information on diet and exercise\n\n\n\nPolitical leanings\n\nAre liberals or conservatives at higher risk?\n\n\n\nMore model optimization and feature engineering\n\nmaybe some features would have worked better if they were transformed in some way.\n\n\n\nHow universal is this model?\n\nfor example, could a model like this (with some tweaks) predict diabetes rates in Canada? Europe? etc.\n\n\n\nPredicting a more useful variable related to diabetes, like diabetes associated healthcare costs.\n\n\nBonus:\nI didn\'t have time to incorporate dimension reduction into any of my models, but I did run PCA and get some interesting plots. This PCA did not include diabetes rates or region data, because that data was used after the fact to color the markers.:\n\nWhile the first two principal components did not separte the counties into clear clusters, they did do a decent job of moving counties with higher diabetes rates to the right (and lower to the left). The first two components also sort of clustered counties by region. This is interesting given that there was no geographic or diabetes information in the actual dimension reduction process.\n'], 'url_profile': 'https://github.com/Nick-Henderson', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['2']], 'contributions': '38 contributions\n        in the last year', 'description': ['ML-Intermediate-Project--Diabetes\nThis is a project to predict occurrence of Diabetes at an early stage in patients based on their clinical indicators\n\n'], 'url_profile': 'https://github.com/shikha55', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '82 contributions\n        in the last year', 'description': ['Capstone - Diabetes Prediction\nCapstone - Diabetes Prediction\nProject Organization\n‚îú‚îÄ‚îÄ README.md           <- The top-level README \n‚îú‚îÄ‚îÄ data\n‚îÇ    diabetes.csv       <- raw diabetes data downloaded from Kaggle\n‚îÇ    df_dw.csv          <- data after data wrangling stage\n‚îÇ    X_train.csv        <- data after pre-processing stage\n‚îÇ    X_test.csv  \n‚îÇ    y_train.csv  \n‚îÇ    y_test.csv  \n‚îÇ\n‚îú‚îÄ‚îÄ models              <- trained models \n‚îÇ    final_model.pkl\n‚îÇ\n‚îú‚îÄ‚îÄ notebooks           <- Jupyter notebooks. \n‚îÇ    DataWrangling.ipynb       \n‚îÇ    Exploratory Data Analysis.ipynb       \n‚îÇ    Preprocessing.ipynb       \n‚îÇ    Training and Modeling.ipynb       \n‚îÇ\n‚îú‚îÄ‚îÄ reports            \n‚îÇ\n‚îÇ   Capstone - Diabetes Prediction - R Smith.pdf    <- final report\n‚îÇ   Capstone - Diabetes Prediction - R Smith.pptx   <- final presentation\n\n\n'], 'url_profile': 'https://github.com/ruthcaswellsmith', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['Capstone-2\nDiabetes prediction With Neural network Model\n'], 'url_profile': 'https://github.com/Manikanta5815', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '23 contributions\n        in the last year', 'description': ['Diabetes_ML_Project\n'], 'url_profile': 'https://github.com/effieklestz', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'Charlotte, NC, USA', 'stats_list': [['1', '          follower'], ['1', '          following'], ['5']], 'contributions': '28 contributions\n        in the last year', 'description': ['PySpark-Diabetes-Classifier\nThis is a simple Demonstration of how Spark (PySpark) can be used for creating pipelines for various Machine Learning Algorithms.\n'], 'url_profile': 'https://github.com/Manojython', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['DataAvengers-Diabetes-Predictor-Project\nPredicting the occurrences of Diabetes in Women using Machine learning in Python.\n'], 'url_profile': 'https://github.com/farukhjabeen', 'info_list': ['Jupyter Notebook', 'Updated Dec 7, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020', 'Python', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Jupyter Notebook', 'Updated Jan 20, 2021', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 9, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 2, 2020']}"
"{'location': 'Brazil', 'stats_list': [['11', '          followers'], ['2', '          following'], ['4']], 'contributions': '311 contributions\n        in the last year', 'description': ['diabetes-diagnostician-app\n'], 'url_profile': 'https://github.com/gomesluiz', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'Nagpur', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '32 contributions\n        in the last year', 'description': ['Predict-whether-diabetes-or-not\nPredict whether a person will have diabetes or not, using KNN.\nDataset - attached.\nPerformance metrics - F1-Score & Accuracy_score.\n'], 'url_profile': 'https://github.com/Samyakb-24', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'Germany', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '212 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Sam-Power', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'Barcelona,Spain', 'stats_list': [['1', '          follower'], ['0', '          following'], ['14']], 'contributions': '66 contributions\n        in the last year', 'description': [""Predict-Diabetes-With-Random-Forest-Using-R\nThe dataset used for this project is the Pima Indians Data Set:\nIt is divided into the following tasks:\nTask 1: Load libraries required to execute a Random Forest Model using R and the Pima Indians Data set.\nTask 2:  Perform Exploratory Analysis using ggplot2 to observe the balance of the data, especially as it relates to the Response Variable.\nTask 3: Create Testing and Training Data Sets using both the 'base' way and the 'caret' way.\nTask 4: Create a Random Forest Model.\nTask 5: Analysis and inferences on multiple models using RMSE among other metrics.\n""], 'url_profile': 'https://github.com/mahinanwar', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'Srinagar', 'stats_list': [['3', '          followers'], ['1', '          following'], ['3']], 'contributions': '31 contributions\n        in the last year', 'description': ['Diabetes-Disease-Prediction-\nDiabetes Mellitus (TY2) has secured the status of a global pandemic. Thus, the diagnosis of the disease at an early stage plays a very significant role as the early prediction of the disease will minimize the health risks associated with the disease. This projects aims to predict whether a person is diabetic or not via six different classification algorithms namely Support Vector Machine(SVC), K- Nearest Neighbour(Knn), Decision Tree, Naive Bayes, Logistic Regression and Random Forest. Moreover, early prediction of the diabetes disease with a higher accuracy can be found using various machine learning techniques.\n'], 'url_profile': 'https://github.com/taibasangien', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['1']], 'contributions': '23 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/markaziz10', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '46 contributions\n        in the last year', 'description': ['Deployment of the Diabetes-Patient-s-Hospital-Readmission-Prediction-Deployment\nhttps://readmission-diabetic.herokuapp.com/\n'], 'url_profile': 'https://github.com/rahulgyansharma', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '34 contributions\n        in the last year', 'description': ['Diabetes-Predictor-webApplicition-using-ML\n'], 'url_profile': 'https://github.com/princekr3010', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'Berlin, Germany', 'stats_list': [['3', '          followers'], ['11', '          following'], ['810']], 'contributions': '199 contributions\n        in the last year', 'description': ['Transfer Nightscout data to LibreView\nTransfer your diabetes data from Nightscout to LibreView.\nRequirements\n\ngit\nnodejs\n\nFirst use\nOpen command line in your favorite folder:\ngit clone https://github.com/creepymonster/nightscout-to-libreview\ncd nightscout-to-libreview\nnpm install\nnpm start\n\nFuture use\nOpen command line in your favorite folder:\ncd nightscout-to-libreview\nnpm start\n\nTodo\n\nmany many testing!\nbetter error handling\nclean up entry point\nclean up user input\nadd frequent unscheduledContinuousGlucoseEntries\nadd notes from libreview\nadd basal insulin?!?\ndifferent libreview api endpoints\n\n'], 'url_profile': 'https://github.com/creepymonster', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}","{'location': 'NONE', 'stats_list': [['19', '          followers'], ['0', '          following'], ['0']], 'contributions': '125 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/smartinternz02', 'info_list': ['Jupyter Notebook', 'Updated Dec 12, 2020', 'Jupyter Notebook', 'Updated Dec 8, 2020', 'Updated Dec 4, 2020', 'HTML', 'Updated Dec 2, 2020', '1', 'Jupyter Notebook', 'Updated Dec 1, 2020', 'Jupyter Notebook', 'Updated Dec 4, 2020', 'HTML', 'Updated Jan 5, 2021', 'HTML', 'Updated Dec 3, 2020', 'JavaScript', 'Updated Dec 8, 2020', 'Updated Nov 30, 2020']}"
"{'location': 'Tampere,Finland ', 'stats_list': [['4', '          followers'], ['6', '          following'], ['119']], 'contributions': '280 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/FAHID-KHAN', 'info_list': ['1', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 12, 2020', 'CSS', 'GPL-3.0 license', 'Updated Dec 5, 2020', 'Python', 'Updated Dec 11, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['3']], 'contributions': '33 contributions\n        in the last year', 'description': ['AIHD-P3-PATIENT-SELECTION-FOR-DIABETES-DRUG-TESTING\n'], 'url_profile': 'https://github.com/CDA70', 'info_list': ['1', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 12, 2020', 'CSS', 'GPL-3.0 license', 'Updated Dec 5, 2020', 'Python', 'Updated Dec 11, 2020']}","{'location': 'Catalonia', 'stats_list': [['8', '          followers'], ['468', '          following'], ['421']], 'contributions': '281 contributions\n        in the last year', 'description': [""Diabetic-Retinopathy-Analyzer\nLive Web App: http://intelligendiab.ehealthai.eu/\nFor best results please use the Chrome browser to access the app.\nIn other browsers the app may freeze.\nThis is a prototype for an online tool that can detect Diabetic Retinopathy on a fundus photo.\nDiabetic Retinopathy (DR) is the fastest growing cause of preventable blindness. All people with diabetes are at risk. They need to be screened once a year. In many parts of the world there's a shortage of eye doctors. As a result, in India about 45% of people suffer some form of vision loss before the disease is detected. This app can help detect diabetic retinopathy early and hopefully help doctors prevent blindness.\nThe process used to build and train the model is described in Kaggle kernel of vbookshelf\nThe dataset used to train the model is part of the APTOS 2019 Blindness Detection Kaggle competition. The original dataset has 5 classes. I changed them to two and treated this as a binary classification problem.\nhttps://www.kaggle.com/c/aptos2019-blindness-detection\nAll javascript, html and css files used to create the web app are available in this repo (primary source: vbookshelf).\n""], 'url_profile': 'https://github.com/gcjordi', 'info_list': ['1', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 12, 2020', 'CSS', 'GPL-3.0 license', 'Updated Dec 5, 2020', 'Python', 'Updated Dec 11, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['0']], 'contributions': '66 contributions\n        in the last year', 'description': [""Akikatest\nHellomedi Description\nHellomedi is the online platform  which helps you to request and book a doctor whenever you need to. We provide delivery for HIV/AIDS,Tuberculosis,hepatitis B&C and Diabetes. just register your medecines and we'll take care of the rest\nPrerequisites\n\nVirtual environment\nPython3.6\nPostgres\npip\nDjango 3.1\n\nActivate virtual environment\n$ python3.6 -m venv --without-pip virtual \n$ source venv/bin/activate\n\nInstalling\nInstall dependancies that will create an environment for the app to run\nCreate Database\n$ psql\nCREATE DATABASE myproject\n\nRun initial Migrations\n$ python manage.py makemigrations Medi\n$ python3.6 manage.py migrate\n\nRunning the app\n$ python3.6 manage.py runserver\n\nBuilt With\n\nDjango 3.1 - The web framework used\n\nSupport and contact details\nHaving any issues?\nEmail:kangabejuliette@gmail.com\ncontact:0789557608\nLicense\nCopyright (c) 2020 KANGABE JULIETTE\n""], 'url_profile': 'https://github.com/juru-juliette', 'info_list': ['1', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Dec 12, 2020', 'CSS', 'GPL-3.0 license', 'Updated Dec 5, 2020', 'Python', 'Updated Dec 11, 2020']}",,,,,,
