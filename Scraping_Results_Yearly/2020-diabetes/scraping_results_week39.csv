"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '51 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kushalkushi96', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/dsketron', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['DiabetesPredictor\n'], 'url_profile': 'https://github.com/spareta', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['DiabetesPrediction\nDiabetes Prediction\n'], 'url_profile': 'https://github.com/sangita-nag', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'Dhaka, Bangladesh', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/UtshaDas', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '52 contributions\n        in the last year', 'description': ['DiabetesPredictor\n'], 'url_profile': 'https://github.com/GurushanthaDoddamani', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/jamalirfan', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'Hyderabad, Telangana', 'stats_list': [['8', '          followers'], ['9', '          following'], ['102']], 'contributions': '55 contributions\n        in the last year', 'description': ['niroggyan\nDiabetes Profile\n'], 'url_profile': 'https://github.com/AnimeshPandey', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['dataset : https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008\n'], 'url_profile': 'https://github.com/mohadesesd', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '35 contributions\n        in the last year', 'description': ['Diabetes Paivakirja\n“Diabetes päiväkirja” on sovellus jonka avulla diabetestä sairastava potilas voi itse\nseurata verensokerinsa arvoa ja onko viikoittainen verensokeriarvo liian korkea tai\nmatala.\nSovelluksen käyttö vaatii verensokeri mittarin jonka avulla potilas saa arvon ja\nmanuaalisesti kirjoittaa juuri mittaamassa verensokeriarvon sovellukseen.\nKäyttäjä voi nähdä mittaus historiansa ja viikoittaisen verensokerin arvon.\nDiagrammi näyttää myös värillä jos arvo on liian matala tai korkea (punaisella) ja\njos arvo on hyvä (sinisellä).\n""Diabetes päiväkirja"" seuraa ja analysoi glukoosin taso veressä. Käyttäjä voi\ntarkastella interaktiivisella kaavioita tai lähettää ne suoraan lääkärille. Hyvä ja\ntarvittava diabetes avustaja diabeetikoille.\n“Diabetes päiväkirja” on päivittäinen itsehoito-sovellus, ei ole lääkinnällinen laite.\nSovellus motivoi käyttäjiä tekemään mittauksia ja pistämään insuliinia. “Diabetes\npäiväkirja” on täysin suomenkielinen sovellus ilman liikaa tarpeettomia ja turhia\ninformaatioita.\nSovelluksen kohderyhmänä ovat kaikki diabeetikot ja diabeetikoiden hoitoon\nosallistuvat läheiset.\nSovellusta tulisi käyttää useita kertoja päivässä. Fyysinen ympäristö ei vaikuttaa\nkäyttöön. Sovellus voisi käyttää missä vaan, missä on mahdollista käyttää\nverensokerimittarin.\n'], 'url_profile': 'https://github.com/j0elr4u', 'info_list': ['Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Jan 5, 2021', 'HTML', 'Updated Sep 27, 2020', 'HTML', 'Updated Sep 27, 2020', 'R', 'MIT license', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'TypeScript', 'Updated Sep 28, 2020', 'Python', 'Updated Sep 25, 2020', 'Java', 'Updated Oct 7, 2020']}"
"{'location': 'NONE', 'stats_list': [['2', '          followers'], ['8', '          following'], ['0']], 'contributions': '24 contributions\n        in the last year', 'description': ['Project1\nPima Indian Diabetes Prediction\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a\npatient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database.\nIn particular, all patients here are females at least 21 years old of Pima Indian heritage.\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their\nBMI, insulin level, age, and so on.\nAccomplishments\nModels without Hyperparameter Optimization\nLR: 0.8607594936708861\nKNN: 0.8860759493670886\nCART: 0.7341772151898734\nRF: 0.8481012658227848\nSVC: 0.8227848101265823\nXGBoost: 0.8481012658227848\nLGBM: 0.810126582278481\nModels with Hyperparameter Optimization\nKNN: 0.8860759493670886\nCART: 0.7974683544303798\nRF: 0.810126582278481\nLGBM: 0.8607594936708861\nXGB: 0.8607594936708861\n'], 'url_profile': 'https://github.com/Sadnyx', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['Reference :\n\nhttps://www.udemy.com/course/applied-machine-learning-for-healthcare\n\n'], 'url_profile': 'https://github.com/enesbasbug', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['llSPS-INT-3917-Diabetes-Milletus-Prediction\nDiabetes Milletus Prediction\n'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '192 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/HiyaShah', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '92 contributions\n        in the last year', 'description': ['Diabetes Prediction Web App\nI have made Flask web app using PIMA diabetes dataset for the prediction of diabetic patient and deployed it on Heroku platform\nLink for Heroku app\nhttps://quiet-coast-25108.herokuapp.com/\n'], 'url_profile': 'https://github.com/rsg-iik', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Oct 2, 2020', 'Python', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Updated Sep 24, 2020', 'Updated Sep 25, 2020', 'Updated Sep 26, 2020', 'Updated Sep 23, 2020']}"
"{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'Durban, KZN', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['Healthcare_diabetes\nPredicting patients with diabetes or not\n'], 'url_profile': 'https://github.com/Philani58', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['6', '          following'], ['0']], 'contributions': '85 contributions\n        in the last year', 'description': ['diabetes_prediction\nCourse Code: CSI 6011 \nCourse Title: Data Mining \nFaculty: Prof. Dr. Mohammad Nurul Huda  \nProject: Diabetes Prediction \nDataset: PIma Indian Dataset  \nNumber of Classifiers: 6 \nNames: Multilayer Perceptron, Naive Bayes, Random Forest, K-Nearest Neighbor, Support Vector Machine, XGBoost \nHyperparameters: Deafult for all except MLP  \nLibraries: scikit-learn, NumPy, pandas, Matplotlib, Streamlit\n'], 'url_profile': 'https://github.com/faizahfarzana', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'Chicago, IL', 'stats_list': [['7', '          followers'], ['2', '          following'], ['0']], 'contributions': '180 contributions\n        in the last year', 'description': ['Motivation\nDiabetes has become a more and more severe problem. According to the following   website , more than 10% of Americans had diabetes in 2018.\nIn 2017 alone, diabetes caused more than 200,000 deaths in America. In the same year, the total cost to treat diabetes is $327 billion.\nThese alarming numbers urge scientists to build more precise models to predict diabetes so that appropriate actions could be taken to combat the disease. That is precisely the aim of our project. We will use a public dataset to train and evaluate several machine learning models to predict diabetes. More precisely, we will use the data set ""Pima Indians Diabetes Database""-which is available on  Kaggle  to find factors that could be correlated with diabetes and build our machine learning models.\nSome challenges\nThis problem poses some rather severe challenges. Some of them are:\n(1) The dataset is relatively small. There are only 768 samples.\n(2) Some of the features have missing values. Note that this is a subtle issue because missing values are recorded by 0 in the dataset.\nOur methodology\nWe built a comprehensive pipeline to solve this problem.\nWe solved the missing values issue by replacing them with the mean of each class. We used data visulization with Pandas and Seaborn to gain a deep undertanding of all the features and their relationship.\nFor classical machine learning models, we chose decision trees and KNN models because of their power, and interpretability both to doctors and patients. Furthermore, decision tree models also help us identify features that are most relevant in detecting diabetes.\nAdditionally, we also built some neural network models. The use of deep learning in medical research has proved to be powerful lately, and we want to demonstrate that point in this project.\nIn all of our models, we had to tune-in important hyperparameters. We did so by doing a GridSearchCV or an Randomized GridSearch.\nOur results\nIn our project, we focus on optimizing our ability to predict someone with diabetes correctly. Most of our models can predict this disease at least 75% of the time. Our most powerful model (decision tree) can detect at least 93% of women with diabetes.\nReferences\n[1] Jack W. Smith, J.E. Everhart, W.C. Dickson, W.C. Knowler, and R.S. Johannes,  Using the ADAP Learning Algorithm to Forecast the Onset of Diabetes Mellitus \n[2] https://www.kaggle.com/ravichaubey1506/predictive-modelling-knn-ann-xgboost\n[3] Aurélien Géron, Hands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, Second edition\n'], 'url_profile': 'https://github.com/tungprime', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'Pune, Maharashtra', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '53 contributions\n        in the last year', 'description': ['diabetes-analysis\nMy 1st implementation of ML concepts\n'], 'url_profile': 'https://github.com/SumanthBenhur', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['7', '          following'], ['37']], 'contributions': '236 contributions\n        in the last year', 'description': ['diabetes_ml\nPredicted diabetes progression after 1 year using seven different regression ML techniques and the predictors (age, sex, BMI, etc) found in the LARS diabetes dataset. Selected best model of the seven (LASSO) using RMSE and R^2 on test data.\nRequired Packages/Modules\n\npandas\nnumpy\nsklearn\nmatplotlib\nmath\n\nDiabetes Predictors\n\nage in years\nsex\nBMI\naverage blood pressure\ns1 tc, T-Cells (a type of white blood cells)\ns2 ldl, low-density lipoproteins\ns3 hdl, high-density lipoproteins\ns4 tch, thyroid stimulating hormone\ns5 ltg, lamotrigine\ns6 glu, blood sugar level\n\nRegression Techniques Used\n\nElasticNet\nLASSO\nRidge\nLinear Regression\nPolynomial Regression\nSupport Vector Regression (SVR)\nRandom Forest Regression\n\n'], 'url_profile': 'https://github.com/sakoya00', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'Berkeley, CA', 'stats_list': [['7', '          followers'], ['3', '          following'], ['0']], 'contributions': '615 contributions\n        in the last year', 'description': ['Diabetes Prediction using Machine Learning\nDescription\nThis simple web application predicts whether a patient has diabetes based on a variety of physiological attributes (i.e glucose, blood pressure, insulin levels) by creating a training model using machine learning. The training data can be found here. This application uses Streamlit as a web frame to quickly and neatly display the data and receive user input.\nView the deployed site here\nTechnologies used\n\nPython\nStreamlit\nPandas\nScikit\n\nTraining Model\nTo create our model, I split the diabetes linked above, into 75% training, and 25% testing.\nI used a random forest classifier to generate a decision tree based on the sample dataset that used averageing to improve the predictive accuract and control over-fitting data.\nQuestions\nIf there are any questions about this application feel free to contact me at eddyyang@berkeley.edu\n'], 'url_profile': 'https://github.com/eddyangang', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '86 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Mahaveer123-y', 'info_list': ['Updated Sep 27, 2020', 'Updated Sep 25, 2020', 'Updated Sep 24, 2020', 'HTML', 'Updated Sep 21, 2020', '1', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 24, 2020', 'Python', 'Updated Oct 23, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '91 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/guptaanuj9907', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['PIMA-Diabetes\n'], 'url_profile': 'https://github.com/gourikomti', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '110 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shvm61', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Rady110', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '27 contributions\n        in the last year', 'description': ['Diabetes_pred\nThis is a diabetes detection problem. This problem uses the pima dataset for making the prediction.\nThis model uses Random Forest classifier and as the training completes the pickle file is saved.\nRunning the model\nFor running the model i suggest you to make a new python environment and install the requirements.txt file.\nAfter installing the requirement.txt run the ""app.py""\nSome useful commands\nCreating a new env - ""conda create -n env_name python=3.6""\nActivating the environmrnt - ""activate env_name""\nInstalling the requirements.txt - ""pip install -r requirements.txt""\nRunning the app.py - ""streamlit run app.py""\n'], 'url_profile': 'https://github.com/kunall99', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['3', '          following'], ['46']], 'contributions': '27 contributions\n        in the last year', 'description': ['diabetes-prediction\nDiabetes is a commonly known disease that consist of a group of metabolic disorders characterized by a high blood sugar level. Left untreated, it will bring people with many complications and hurt people’s health. Moreover, people nowadays have very high possibility to get this disease due to their unhealthy lifestyle. As a result, it’s quite significant to make people aware of their risk to diabetes, which can help people take further medical actions.\nIn this project, our goal is to give users a diabetes prediction intelligent system with user-friendly interactive interface, high prediction accuracy of 90% and customized suggestion.\n'], 'url_profile': 'https://github.com/jacey-wjx', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '38 contributions\n        in the last year', 'description': ['diabetes_predictior\nA simple model to predict diabetes\n'], 'url_profile': 'https://github.com/guptanik', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Subhroja', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'Waterloo, Ontario, Canada', 'stats_list': [['18', '          followers'], ['14', '          following'], ['74']], 'contributions': '160 contributions\n        in the last year', 'description': [""Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to set up your Anaconda environment to get started!\nDependencies\nUsing Anaconda consists of the following:\n\nInstall miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nCreate and activate * a new conda environment.\n\n* Each time you wish to work on any exercises, activate your conda environment!\n\n1. Installation\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2. Create and Activate the Environment\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nGit and version control\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\nIf you'd like to learn more about version control and using git from the command line, take a look at our free course: Version Control with Git.\nNow, we're ready to create our local environment!\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/udacity/nd320-c1-emr-data-starter.git\ncd nd320-c1-emr-data-starter/project/\n\n\n\nCreate (and activate) a new environment, named udacity-ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\nconda create -n udacity-ehr-env python=3.7\nsource activate udacity-ehr-env\n\n\nWindows:\n\nconda create --name udacity-ehr-env python=3.7\nactivate udacity-ehr-env\n\nAt this point your command line should look something like: (udacity-ehr-env) <User>:USER_DIR <user>$. The (udacity-ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there. I also added a line for installing the environment in your notebook in case this is new for you. You should be able to now look for the environment when you select the kernel.\n\n\npip install -r requirements.txt\nipython3 kernel install --name udacity-ehr-env --user\n\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md\n""], 'url_profile': 'https://github.com/felixglush', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}","{'location': 'Mumbai', 'stats_list': [['18', '          followers'], ['83', '          following'], ['198']], 'contributions': '684 contributions\n        in the last year', 'description': ['Diabetes Prediction Web App\n\n\n\nDemo\n\n'], 'url_profile': 'https://github.com/kazimsayed954', 'info_list': ['Jupyter Notebook', 'Updated Sep 25, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 23, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', '1', 'JavaScript', 'Updated Nov 1, 2020', 'HTML', 'Updated Sep 27, 2020', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'Updated Sep 25, 2020']}"
"{'location': 'Goiânia', 'stats_list': [['12', '          followers'], ['31', '          following'], ['18']], 'contributions': '74 contributions\n        in the last year', 'description': ['Dados-Sobre-Diabetes\nDados sobre a ocorrência de diabetes\nO conjunto de dados de Diabetes das Índias Pima do Arizona nos EUA, foi desenvolvida pelo National Institute of Diabetes and Digestive and Kidney Diseases e cedida em 1990 ao repositório da Universidade da Califórnia, Irvine. O conjunto de dados descreve 768 pacientes do género sexual feminino com idades compreendidas entre 21 e 81 anos, divididos em 500 casos que não padecem de Diabetes Mellitus e os restantes sim.\n'], 'url_profile': 'https://github.com/allanbraquiel', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['5']], 'contributions': '97 contributions\n        in the last year', 'description': ['Diabetes-prediction-using-ML\nThe project is to build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes, based on certain diagnostic measurements.\nThe dataset used in this project was downloaded from Kaggle and is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n(Acknowledgements Smith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.)\nAzure Machine Learning Designer was used thoughout the project to build up a ""Two-class Logistic Regression"" model. A real-time inference endpoint was created for real-time prediction based on provided diagnostic measurements.\nThis model trained could serve as a useful tool for early screening for diabetes of females at least 21 years old, particular with Pima Indian heritage.\n'], 'url_profile': 'https://github.com/Sara-cos', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'Mexico', 'stats_list': [['8', '          followers'], ['9', '          following'], ['2']], 'contributions': '114 contributions\n        in the last year', 'description': ['Diabetes-prediction-model\nPredicting diabetes with Supervised Machine Learning models\n'], 'url_profile': 'https://github.com/cesarcamp', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'Bebek,Istanbul', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '9 contributions\n        in the last year', 'description': ['Predicting-Diabetes-of-Individuals\n• This project is aimed to be able to predict whether a new individual is a diabetic patient or not by using the health\ndata of people with diabetes, by using the decision tree learning infrastructure.\n• In order to deal with continuous data, algorithms were implemented and cutoff values were determined, if the\nincoming cutoff value is smaller, the branch on the left side, if it is greater than the cutoff value, the tree on the\nright side is accessed.\n• Decision Tree classifier has been directly implemented, ready-made libraries were not used\n'], 'url_profile': 'https://github.com/basarantugay', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'Katraj,Pune', 'stats_list': [['0', '          followers'], ['0', '          following'], ['33']], 'contributions': '246 contributions\n        in the last year', 'description': ['Diabetes Prediction:\nTable of Content\n\nDemo\nOverview\nDeployement on Heroku\nDirectory Tree\n\nDemo\nLink: https://diabetes-prediction-app-tvarma.herokuapp.com/\n\n\nOverview\nThis is a simple Flask web app which predicts whether a patient is having diabetes or not.\nDeployement on Heroku\nLogin or signup in order to create virtual app. You can either connect your github profile or download ctl to manually deploy this project.\n\nOur next step would be to follow the instruction given on Heroku Documentation to deploy a web app.\nDirectory Tree\n├── static \n│\xa0\xa0 ├── css\n├── template\n│\xa0\xa0 ├── home.html\n├── Procfile\n├── diabetes.ipynb\n├── app.py\n├── diabetes_model.pkl\n├── requirements.txt\n\nTechnologies Used\n\n \n'], 'url_profile': 'https://github.com/tarun0319', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'Greater Noida', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '59 contributions\n        in the last year', 'description': ['PimaIndiansDiabetesDatabase\nIt is a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not.\nSuccesslully implemented Support Vector Machine Classifier and achieved an accuracy of 75%\n'], 'url_profile': 'https://github.com/mdtaha11', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '133 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes\n# PREREQS:\nrm(list = ls()) #removes all variables stored previously in Environment (good habit to include)\n\nlibrary(Rmisc) # transform integers to factors, must be first or will mask other packages. We only need multiplot!\nlibrary(lubridate) #to modify date-time entries, if you do not have it: install.packages(""lubridate"")\nlibrary(scales) #allows to modify scientific notation for values\nlibrary(dplyr)\nlibrary(wesanderson)\nlibrary(tidyverse) #Run tidyverse, if you do not have: install.packages(""tidyverse"")\nlibrary(ggcorrplot) # pearon\'s correlation and heatmaps\n\n# URL: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n\n#READ DATA SET AND STORE INTO OBJECT:\ndata <- read.csv(""C:/Users/Kevin/Desktop/Pima-Indians-Diabetes #6/diabetes.csv"")\n\ndiabetes_data <- as.tibble(data)\n\nAbstract\nDiabetes is defined as a group of metabolic diseases that is categorized by chronic hyperglycemia. This can result from defects in insulin secretion, insulin action, or both. [@kharroubi2015diabetes] Throughout this analysis, we will analyze multiple variables and understand their prevalence in diabetes. We will first analyze each variable and its correlation to diabetes. From there, we will group each variable together that share similar correlations whether it is positive, negative, or neutral and analyze them further. Lastly, we will formulate a linear regression model to predict which variables are good predictors of having diabetes and which are not.\nThe data analysis will be broken down by the following sections:\n\n\nPearson\'s Correlation - Heatmap\n\n\nBlood Pressure and Skin Thickness vs Diabetes\n\n\nPregnancies, Age, Diabetes Pedigree Function, and Insulin vs Diabetes\n\n\nGlucose Levels and BMI vs Diabetes\n\n\nLinear Regression Model - Binomial\n\n\nGood Predictors of Diabetes - Analysis\n\n\nUnits:\n\n\nPregnancies: number of times pregnant\n\n\nGlucose: in mg/dL\n\n\nBlood pressure: in mm Hg - based on the numbers, it seems that our values are of DBP (diastolic blood pressure)\n\n\nSkinthickness: triceps skin fold in mm\n\n\nInsulin: mu U/ml\n\n\nBMI in kg/m^2^\n\n\nDiabetesPedigree: likelihood of having diabetes based on familial history\n\n\nAge: in years\n\n\nOutcome: 0 if no diabetes and 1 if diabetic\n\n\nsummary(diabetes_data)\nstr(diabetes_data)\n\n\ndiabetes_data$Outcome <- as.factor(diabetes_data$Outcome)\n\nPearson\'s Correlation - Heat Map\nggcorrplot(cor(data), hc.order = TRUE, lab = TRUE, lab_size = 3) +\n  labs(title = ""Correlation Between Variables and outcome"",\n       subtitle = ""Netural and Positive Correlation"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\nBased on this correlation plot, we are more interested in how outcome fares with the other numeric variables.\n\n\nBlood pressure and skin thickness do not appear to show either a positive or negative correlation with Outcome.\n\n\nPregnancy, age, diabetes pedigree function, and insulin have a slightly positive correlation with outcome.\n\n\nGlucose and BMI have a strong positive correlation with Outcome.\n\n\nThis will be our overhead analysis and we will now dive deeper into each section. We will see if there is a statistically significant correlation between each variable and the Diabetic outcome and if the results of the heat map correspond to the linear regression model formulated at the end of our analysis.\nBlood Pressure and Skin Thickness vs Diabetes\nWe want to see if Blood Pressure and Skin Thickness are good indicators of Diabetes. According to our heat map in the previous section, both Blood Pressure and Skin Thickness did not show a positive or negative correlation to diabetes.\n\nDue to that we will hypothesize no statistical significance in the average blood pressure and skin thickness between diabetic and non-diabetic patients.\n\nggplot(diabetes_data, aes(x = Outcome, y = BloodPressure)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest2"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Blood Pressure"",\n       title = ""No Statistically Significant Difference"",\n       subtitle = ""Between the Avg BP of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n\nt.test(diabetes_data$BloodPressure ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\n\nBased on the t.test there is not a statistically significant difference between the average blood pressure of someone that is diabetic vs not diabetic.\n\n\nZero is also in the confidence interval, therefore, we fail to reject our null hypothesis that there is no significant difference between the average blood pressures.\n\n\nNext, we will analyze skin thickness in the same manner:\nggplot(diabetes_data, aes(x = Outcome, y = SkinThickness)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest2"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Tricep Skin Thickness"",\n       title = ""No Statistically Significant Difference"",\n       subtitle = ""Between the Avg Skin Thickness of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n\nt.test(diabetes_data$SkinThickness ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\n\nBased on the t-test, there is not a statistically significant difference between the Skin Thickness of the triceps of a diabetic and non-diabetic patient\n\n\nThe results similarly reflects that of blood pressure.\n\nBoth outcomes reflect the Pearson\'s correlation/heat map as it claims that both blood pressure and skin thickness do not positively nor negatively relate to Outcome (diabetic vs not diabetic)\n\n\n\nPregnancy, Age, Diabetes Pedigree Function, and Insulin vs Diabetes\nAs shown in our heat map, Pregnancy, Age, Diabetes Pedigree Function, and Insulin all showed a slight positive correlation to diabetes outcome.\nLet\'s analyze each separately and run a t.test to show statistical significance of each variable.\ndiabetes_data$Outcome <- as.factor(diabetes_data$Outcome)\n\nggplot(diabetes_data, aes(x = Outcome, y = Pregnancies)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Number of Pregnancies"",\n       title = ""Slight Statistically Significant Difference"",\n       subtitle = ""Between the Avg # of Pregnancies of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n# Showing a positive relation: diabetic patients have more pregnancies on average than non-diabetic patients\nt.test(diabetes_data$Pregnancies ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\nggplot(diabetes_data, aes(x = Outcome, y = Age)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Age"",\n       title = ""Slight Statistically Significant Difference"",\n       subtitle = ""Between the Avg Age of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n# Showing a positive relation: diabetic patients are older on average than non-diabetic patients\nt.test(diabetes_data$Age ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\nggplot(diabetes_data, aes(x = Outcome, y = DiabetesPedigreeFunction)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Diabetes Pedigree Function Score"",\n       title = ""Slight Statistically Significant Difference"",\n       subtitle = ""Between the Avg Diabetes Pedigree Frunction Score of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n# Showing a positive relation: diabetic patients have a higher diabetes pedigree function score on average than non-diabetic patients\nt.test(diabetes_data$DiabetesPedigreeFunction ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\nggplot(diabetes_data, aes(x = Outcome, y = Insulin)) +\n  geom_boxplot(fill = wes_palette(""GrandBudapest1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Insulin (mu U/ml)"",\n       title = ""Slight Statistically Significant Difference"",\n       subtitle = ""Between the Avg Insulin Level of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n# Showing a positive relation: diabetic patients have on average higher Insulin levels than non-diabetic\nt.test(diabetes_data$Insulin ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\n\n\nAll variables above show a statistically significant positive relationship with diabetic outcome.\n\n\nAlso, none of the confidence intervals included zero. Therefore, we can reject our null hypothesis.\n\nNull Hypothesis: there is no significant difference between the average values of a diabetic and non-diabetic patient.\n\n\n\nGlucose Levels and BMI vs Diabetes\n\nNext, we will look at glucose levels and BMI and their relationship to diabetes.\n\nBased on the heat map, we will assume a strong positive correlation (small p-values/closer to zero)\n\n\n\nggplot(diabetes_data, aes(x = Outcome, y = Glucose)) +\n  geom_boxplot(fill = wes_palette(""Darjeeling1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""Glucose (mg/dL)"",\n       title = ""Strong Statistically Significant Difference"",\n       subtitle = ""Between the Avg Glucose Level of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n\nt.test(diabetes_data$Glucose ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\nggplot(diabetes_data, aes(x = Outcome, y = BMI)) +\n  geom_boxplot(fill = wes_palette(""Darjeeling1"", n = 2)) +\n  theme_dark() +\n  labs(x = ""Diabetic"", \n       y = ""BMI (kg/m^2^)"",\n       title = ""Strong Statistically Significant Difference"",\n       subtitle = ""Between the Avg BMI of Diabetic and Non-Diabetic"",\n       caption = ""Source: https://archive.ics.uci.edu"") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5)) +\n  scale_x_discrete(limits = c(""0"", ""1""),\n                   labels = c(""No"", ""Yes""))\n\nt.test(diabetes_data$BMI ~ diabetes_data$Outcome, mu = 0, alt = ""two.sided"", conf = 0.95, var.eq = FALSE, paired = FALSE)\n\n\n\nAs expected, both outcomes show a strong positive correlation with Outcome.\n\nThe p-values for both t.test showed 2.2e-16 which was the p-value closest to zero out of all t.tests ran within this analysis.\n\n\n\nWe will hypothesize that on a linear regression model, that both glucose and BMI will be good predictors of diabetes and that both will have small p-values and the largest effect sizes of all variables.\n\n\nLinear Regression Model - Binomial\npredicted <- glm(Outcome ~ ., family = ""binomial"", data = diabetes_data)\nsummary(predicted)\n\n\n\nAs shown in the summary: Pregnancy, Glucose, and BMI have the smallest p-value of all variables (as indicated by the three stars), indicating the strongest statistical significance.\n\n\nNext, Diabetes Pedigree function and Blood pressure show statistical significant but with slightly higher p-values.\n\n\nLastly, Age, Insulin, and Skin Thickness all show large p-values (greater than 5%) which shows they are not good predictors of diabetes.\n\n\nCertain variables, such as Pregnancy, Blood Pressure, Age, and Insulin have shifted in significance in comparison to their Pearson correlation value. This can be explained as the linear regression model does not quantify the significance of the variables separately but rather together in reference to diabetic outcome.\n\nThe heat map/Pearson\'s correlation, quantify the relationship independently.\n\nNow we will plot the graph of our generalized linear model to see if it effectively captures the relationship. If so, closer to zero should represent no diabetes and closer to one should represent diabetes:\nprobability_data <- data.frame(fitted.values = predicted$fitted.values, outcome = diabetes_data$Outcome)\n\nprobability_data <- probability_data %>%\n  arrange(fitted.values)\n\n\nprobability_data <- probability_data %>%\n  mutate(rank = 1:nrow(probability_data))\n\nggplot(probability_data, aes(x = rank, y = fitted.values, color = outcome)) +\n  geom_point(alpha = 1, shape = 1, stroke = 2) +\n  xlab(""Rank"") +\n  ylab(""Predicted Probability of Having Diabetes"")\n\n\n\n\nOur graph makes sense, which means our generalized linear model above (predicted object) accurately captures the relationship between variables.\n\n\nGiven a sample of the same variables, we can predict the likelihood of an individual having diabetes.\n\n\nGood Predictors of Diabetes\nNow that we know Pregnancy, Glucose, BMI, Diabetes Pedigree Function, and Blood Pressure are all good predictors of Diabetes, we can dive deeper and examine each individually:\npreg_dp <- ggplot(diabetes_data, aes(x = Pregnancies, fill = Outcome)) +\n  geom_density(size = 1, alpha = .5)\n\ngluc_dp <- ggplot(diabetes_data, aes(x = Glucose, fill = Outcome)) +\n  geom_density(size = 1, alpha = .5)\n\nbmi_dp <- ggplot(diabetes_data, aes(x = BMI, fill = Outcome)) +\n  geom_density(size = 1, alpha = .5)\n\ndpf_dp <- ggplot(diabetes_data, aes(x = DiabetesPedigreeFunction, fill = Outcome)) +\n  geom_density(size = 1, alpha = .5)\n\nbp_dp <- ggplot(diabetes_data, aes(x = BloodPressure, fill = Outcome)) +\n  geom_density(size = 1, alpha = .5)\n\nmultiplot(preg_dp, gluc_dp, bmi_dp, dpf_dp, bp_dp, cols = 2)\n\n\nAs we can see, both non-diabetic (red) and diabetic (blue) are represented by density plots. Each peak represents the majority, and depending on where the peak falls within the x-axis will represent the average of the population.\n\nWe will dive into the averages of both diabetic and non-diabetic patients for each predictor.\n\n\n\nAs mentioned by [@corrado2003gestational], it has been suggested that in multiple pregnancies that the incidence of gestational diabetes may be increased in addition to decreased insulin sensitivity that is modified by several factors (some of which have been explored within this analysis).\n\nWithin our data set, the majority of non-diabetic patients will have 0-1 pregnancies as shown by the tall red peak! But the majority of diabetic patients have 1-8 pregnancies!\n\nAccording to [@mellitus2005diagnosis], there are criteria for the diagnosis of diabetes in regards to plasma glucose level. The criteria as stated in this article shows: In a patient with classic symptoms of hyperglycemia or hyperglycemia crisis, random plasma glucose greater than or equal to 200 mg/dL or a Fasted Plasma Glucose of greater than or equal to 126 mg/dL\n\nWithin our data set, the majority of non-diabetic patients will have a glucose level of 100 mg/dL as shown by the tall red peak. But the majority of diabetic patients have a glucose level of 125-175 mg/dL!\n\nNormal BMI is an individual who is between 18.5 and 25. However, as BMI increases, so does the risk of developing type 2 diabetes. Within a BMI score of 30 to 39.99 there is a 20.1% greater risk and with a BMI score greater than 40 there is a 38.8% greater risk. [@gray2015relationship]\n\nWithin our data set, the majority of non-diabetic patients will have a BMI of 21 as shown by the tall red peak. But the Majority of diabetic patients have a BMI score of 32-40!\n\nUnfortunately, Diabetes Pedigree Function scores seem to be specific to this particular data set, therefore, normal ranges have not been documented. However, the larger the number the higher the likelihood of diabetes onset formulated by family medical history\nIn regards to hypertension and diabetes, Diastolic Blood pressure of 90-99 mmHg should be treated in diabetic patients. [@volpe2015understanding]\nWe notice that the strong predictors (those with small p-values) have a slightly shifted density plot (they do not overlap completely) and/or have a much wider density.\n\n\nVariables (such as Diabetes Pedigree Function and Blood Pressure) with statistically significant variability (< 5%), but are not as strong of predictors as the top 3 - Pregnancies, Glucose, and BMI have overlapping density plots (with minimal rightward shifts) and similar wideness in density.\n\n\nAlthough the diabetes pedigree function and blood pressure are only slightly different, it is still statistically significant as shown by our linear regression model\n\n\nOverlapping density plots give us a good understanding of the spread within our good predictors and how they vary between diabetic and non-diabetic patients.\n\n\nConclusion\nUncontrolled diabetes can lead to stupor, coma, or even death if not treated. [@kharroubi2015diabetes] Therefore, understanding the different variables and their correlation to diabetes is extremely important to early diagnosis/treatment. As shown in this analysis, there are great predictors of diabetes, good predictors of diabetes, and not good predictors of diabetes. Pregnancy, glucose levels, and BMI scores are all great predictors of diabetes as they had the smallest p-value. Diabetes pedigree function scores and blood pressure are good predictors of diabetes as they had slightly higher p-values yet were still statistically significant. When all of the good and great predictors are analyzed together, we can determine the likelihood of diabetes within a patient. Within our data set, the majority of diabetic patients have 1-8 pregnancies, a glucose level of 125-175mg/dL, and a BMI score of 32-40. They also had a diabetes pedigree function score of .25-.75 and a blood pressure of 75-90mmHg. Knowing these values and how they compare to ""normal"" ranges will allow us to make a confident prediction for diagnosis.\nBibliography\n'], 'url_profile': 'https://github.com/Kevin-Nguyen-Tran', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'New Delhi', 'stats_list': [['2', '          followers'], ['2', '          following'], ['6']], 'contributions': '341 contributions\n        in the last year', 'description': ['Diabetes_Onset_Detection\n'], 'url_profile': 'https://github.com/varadsrivastava', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes-Prediction_Classification\n'], 'url_profile': 'https://github.com/heysworld', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '91 contributions\n        in the last year', 'description': ['Hypertuning-Diabetes-Prediction\n'], 'url_profile': 'https://github.com/guptaanuj9907', 'info_list': ['Jupyter Notebook', 'Updated Dec 3, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Python', 'MIT license', 'Updated Sep 26, 2020', '1', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes-Prediction_Classification\n'], 'url_profile': 'https://github.com/heysworld', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '91 contributions\n        in the last year', 'description': ['Hypertuning-Diabetes-Prediction\n'], 'url_profile': 'https://github.com/guptaanuj9907', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '21 contributions\n        in the last year', 'description': ['SuryaDiabetesPredictor\n'], 'url_profile': 'https://github.com/suryabakshi', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'Chennai, India', 'stats_list': [['5', '          followers'], ['3', '          following'], ['2']], 'contributions': '93 contributions\n        in the last year', 'description': [""Diabetes-Predictor-Web-App\nWeb Application: https://ml-diabetes-predictor-api.herokuapp.com\nIntroduction\nThis is a machine learning project based Flask Web app that predicts the presence of diabetes in a user. It uses Random Forest Classification Technique to detect the presence of diabetes based of each User's Record.\nThe dataset consists of some medical distinct variables, such as pregnancy record, BMI, insulin level, age, glucose concentration, diastolic blood pressure, triceps skin fold thickness, diabetes pedigree function etc.\nDemo\n\nInstallation\nInstall Python 3.6.10\nClone the repository.\nTo import all the required libraries:\n  pip3 install -r requirements.txt\n\nDeployment on Heroku\nLogin or signup in order to create virtual app.\nYou can either connect your github profile or download ctl to manually deploy this project.\n""], 'url_profile': 'https://github.com/ReshmikaD', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'Dallas', 'stats_list': [['0', '          followers'], ['1', '          following'], ['2']], 'contributions': '37 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Project\nDescription¶\nI have predicted the target values for the test.csv.\nAttributes\nA: Number of pregnancies\nB: Concentration of plasma glucose in a 2 hour oral glucose tolerance test\nC: Measured in mmHg\nD: Measured in mm\nE: Insulin concentration in serum in 2-hour period. Measured in (mu U/ml)\nF: Weight in kg/height in (m^2)\nG: Function that assigns probability of someone getting diabetes\nH: Age\nTarget: Value of 0 or 1 correspond to no diabetes and diabetes\n'], 'url_profile': 'https://github.com/Ektak3088', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['Scripts\nScripts utilized for data analysis for the paper ""Application of Differential Network Enrichment Analysis for deciphering metabolic alterations""\n(Manuscript ID: DB20-0960)\nDNEA_main.R: Code implementing DNEA algorithm.\nMa, Jing, et al. ""Differential network enrichment analysis reveals novel lipid pathways in chronic kidney disease."" Bioinformatics 35.18 (2019): 3441-3452.\nOriginal author is Dr. Jing Ma\ngglasso_code.R: Script implementing group lasso regression (with stability selection) to test association of Filigree subnetworks with infant birthweight (MMIP data)\n\'lib2\' folder: Associated functions\n'], 'url_profile': 'https://github.com/griyer', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'Hyderabad', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '85 contributions\n        in the last year', 'description': ['Iris-and-Diabetes\n'], 'url_profile': 'https://github.com/sandeepkumar81', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'Bangalore', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Arshita-Sukhesh', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'New York, NY', 'stats_list': [['2', '          followers'], ['10', '          following'], ['6']], 'contributions': '132 contributions\n        in the last year', 'description': ['Module 4 Project: Applying Classification Modeling\nScope of the project:\nFor this module\'s project, we have three days to answer a classification data science question using multiple models and present the results of the project.\nWe will utilize all of the different tools we have learned over this course: data cleaning, EDA, feature engineering/transformation,\nfeature selection, hyperparameter tuning, and model evaluation. This culminates in a four minute presentation to explain our project and findings.\nPrediction:\nPredicting Diabetes in Women of the Pima Indigenous People.\nData Set Info:\nThe data set came from Kaggle. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima heritage.\nDataset Attributes:\nPregnancies:  Number of times pregnant\nGlucose:  Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBlood Pressure:  Diastolic blood pressure (mm Hg)\nSkin Thickness:  Triceps skin fold thickness (mm)\nInsulin:  2-Hour serum insulin (mu U/ml)\nBMI:  Body mass index (weight in kg/(height in m)^2)\nDiabetes Pedigree Function:  measure of genetic influence and hereditary risk\nAge:  Age (years)\nOutcome:  Class variable (0 or 1)\nResearch Key Points:\nThe data came from a longitudinal study started in 1965.\nPima population has the world’s highest prevalence of diabetes.\n50% of Pima people will have diabetes by the age of 35.\nThe Pima have Type 2 diabetes which is caused by genetics and lifestyle.\n15% of diabetic Pima people develop end stage renal cancer after living with\ndiabetes for 20 years.\nTheir way of life was centered on the river, which is considered holy.\nTheir rivers are currently dry, due to the upstream dams that block the flow and\nthe diversion of water by non-pima farmers.\nThey engaged in a century long legal battle with the US which they eventually\nwon, but the river is still dry.\nThe diversion of the water and the introduction of non-native diet is said to\nhave been the leading contributing factor in the high rate of diabetes among the tribe.\nPima Film\nData Cleaning\nDropped the outliers first:\n\n\nInsulin > 600\n\n\nSkin thickness > 70\n\n\nBMI > 55\n\n\nDealing with missing data:\n\n\nDropped data with missing Glucose levels.\n\n\nReplaced BMI, Blood Pressure, and Insulin with their Median values.\n\n\nSkin Thickness and BMI have a linear relationship. Missing skin thickness measures were replaced by mean of skin thickness within a certain BMI range.\n\n\n\nBinBMI\n\n(10, 20]     9.642857\n\n(20, 30]    14.363309\n\n(30, 40]    23.373684\n\n(40, 50]    28.261364\n\n(50, 60]    32.714286\n\nExploratory Data Analysis\n\nLogged Insulin and DPF.\n\nlogging insulin did not improve the distribution.\nFeature Engineering\nAfter researching healthy levels of biometric measurements, I created binary features to determine if they are within healthy ranges,\nthen added binary data together to provide a health score.\n\nHealthy Number of Pregnancies < 5\nHealthy Glucose Level <= 100\nHealthy Blood Pressure <= 120\nHealthy Insulin Level <= 100\nHealthy BMI (18.5 - 24.9)\nOverall Health Score\n\nBinned Pregnancies and Age\n\n\nUsing sklearn Polynomial Features, I generated interaction features.\nFeature Selection\nUsing logistic regression, features were tested in combinations to determine if they would improve the F1 score.\nThe binned data did not improve the model.\nThe interaction features improved the model, but when the new ""healthy"" features were added the F1 score dropped.\nL1 Regularization (Lasso) was used to remove unnecessary features.\nThe resulting features are:\nIndex([\'glucose\', \'pregnancies skinthickness\', \'pregnancies bmi\', \'glucose^2\',\n   \'glucose bmi\', \'glucose healthy_bmi\', \'bloodpressure healthy_bmi\',\n   \'skinthickness dpf_log\', \'insulin healthy_bmi\', \'insulin healthy_ins\',\n   \'bmi age\', \'age healthy_preg\'],\n\nClass Imbalance\nUsing resampling, the training data outcomes were balanced evenly.\n\nModels\nKNN\nUsing a for loop function, best K = 46.\n   [[74 21]\n    [10 46]]\n\n\n              precision    recall  f1-score   support\n\n           0       0.88      0.78      0.83        95\n           1       0.69      0.82      0.75        56\n\n   micro avg       0.79      0.79      0.79       151\n   macro avg       0.78      0.80      0.79       151\nweighted avg       0.81      0.79      0.80       151\n\n\nDecision Tree\nGridsearch gave the hyperparamters:  criterion= \'gini\', max_depth= 2, min_samples_leaf= 110\n [[69 26]\n  [15 41]]\n\n                 precision    recall  f1-score   support\n\n              0       0.82      0.73      0.77        95\n              1       0.61      0.73      0.67        56\n\n      micro avg       0.73      0.73      0.73       151\n      macro avg       0.72      0.73      0.72       151\n   weighted avg       0.74      0.73      0.73       151\n\n\nRandom Forest\nGridsearch gave the hyperparamters:  criterion= gini, max_depth= 10, min_samples_leaf=  5, \'min_samples_split\': 20, \'n_estimators\': 300\n [[68 27]\n  [ 9 47]]\n                  \n                   precision    recall  f1-score   support\n\n                0       0.88      0.72      0.79        95\n                1       0.64      0.84      0.72        56\n\n        micro avg       0.76      0.76      0.76       151\n        macro avg       0.76      0.78      0.76       151\n     weighted avg       0.79      0.76      0.77       151\n\nXGBoost\nMax depth = 3\n[[71 24]\n [12 44]]\n                   precision    recall  f1-score   support\n\n               0       0.86      0.75      0.80        95\n               1       0.65      0.79      0.71        56\n\n       micro avg       0.76      0.76      0.76       151\n       macro avg       0.75      0.77      0.75       151\n    weighted avg       0.78      0.76      0.77       151\n\nResults\nThe primary metric used to predict model strength is the F1 score which is the harmonic average of precision and recall.\nThe secondary metric used is Recall, because it would be more harmful to fail to recognize whether someone is at risk for diabetes then it would be to falsely diagnose them.\nKNN is the strongest model with a weighted F1 = .80 and Recall = .79.\n'], 'url_profile': 'https://github.com/jen-mckaig', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}","{'location': 'pune', 'stats_list': [], 'contributions': '18 contributions\n        in the last year', 'description': ['diabetes-detaction-System\n'], 'url_profile': 'https://github.com/rupal-singh', 'info_list': ['Jupyter Notebook', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Sep 25, 2020', 'HTML', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', '1', 'R', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 22, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Jupyter Notebook', 'Updated Sep 26, 2020', 'Python', 'Updated Sep 21, 2020']}"
"{'location': 'B.Tech Final Year Student', 'stats_list': [['1', '          follower'], ['6', '          following'], ['0']], 'contributions': '75 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nDiabetes Prediction Using ML\n'], 'url_profile': 'https://github.com/Prabhat244', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'Dilhi NCR', 'stats_list': [['2', '          followers'], ['4', '          following'], ['6']], 'contributions': '135 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/RAGHAVJHA01', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'Indore', 'stats_list': [], 'contributions': '25 contributions\n        in the last year', 'description': ['Pregnant-Women-Diabetese-Prediction-System\nA project based on predicting the diabetic risk for a pregnant lady using a dataset of Pregnant Women from Kaggle, and by doing the EDA and applying the machine learning algorithm to predict the best results, also used micro framework Flask for the connectivity to the front end implemented using Bootstrap and JavaScript.\nTo run the code just type python app.py\nHarsh Agrawal\nMinor Project\n2020\nSVVV\n'], 'url_profile': 'https://github.com/agrawal2699', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'Thailand', 'stats_list': [['2', '          followers'], ['9', '          following'], ['1']], 'contributions': '200 contributions\n        in the last year', 'description': ['Diabetes-prediction-using-Naive-Bayes\n'], 'url_profile': 'https://github.com/suppy25', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/harshmasnani', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['Exploratory-Data-Analysis-on-Diabetes-dataset\nThis is practice session of mine that I am have worked on to learn Exploratory Data Analysis.\nFrom this website https://medium.com/datadriveninvestor/exploratory-data-analysis-on-diabeties-dataset-b172589e3a1c\n'], 'url_profile': 'https://github.com/addidascode', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'Mogi-Guaçu SP', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '184 contributions\n        in the last year', 'description': ['I.A_Treinamento_Diabete\nI.A para saber através de Gravidez, glicose, pressão arterial, espessura da pele, insulina, IMC, diabetes, idade de função genealógica se a pessoa tem diabetes. 80% de assertividade\nEm caso de o arquivo solto nao funcinar baixe a pasta\n'], 'url_profile': 'https://github.com/dev-ViniciusMonteiro', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ericitguy', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'Mumbai , India', 'stats_list': [['9', '          followers'], ['7', '          following'], ['31']], 'contributions': '85 contributions\n        in the last year', 'description': ['Dr. Macro Health App\nAndroid Application to get the Details of\nthe Macro Nutrients of the Product by\ntaking the picture of the product. also Warns\nthe user for specific health Condition like\nHigh/Low BP, Diabetes, Lactose and\nPeanut Allergies. Currently trained to detect only 10 Products.\nTools Used\n\nAndroid Studio - Java\nTensorFlow Lite\nGoogle Teacheble Machine\n\nScreenshots\n\n'], 'url_profile': 'https://github.com/Mandar800', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}","{'location': 'PUNE', 'stats_list': [['2', '          followers'], ['6', '          following'], ['37']], 'contributions': '243 contributions\n        in the last year', 'description': ['Diabetes Prediction \nHello Kagglers, \nIn this notebook I tried to create an optimal model for Diabetes Prediction from given .csv data. \nPoints covered are:\n0] Exploratory Data Analysis and Visualization \n1] Data Normalized Distribution \n2] Data Up-Sampling for Imbalance data \n3] Feature Engineering and Selection \n4] Fine tuning of Models. \n\nIf you found this notebook helpful, your Upvote Will Encourage Me !!! 😀😇😊\n\nResults 💹📈\nBenchmark :-> 75.97  Without any processing \nXGBoost :-> 87.50  After Distribution Normalization + Up-Sampling + Feature Selection \nXGBoost & Random Forest :-> 89.00  After Distribution Normalization + Up-Sampling + Feature Selection + Fine Tuning + Random State in Data Spliting \nGradient Boosting Classifier :-> 92.20  After removing outliers \nVisit for outlier removal techniques \nhttps://www.kaggle.com/akhileshdkapse/starter-guide-eda-acc-87-precision-92/notebook#Removing-outliers-! \nAnd \nhttps://www.kaggle.com/abdulrahmanahajj/diabetes-acc-92-auc-0-914 \nProblem Statement : Diabetes Prediction  \nSome EDA  \nGiven data visualized in a single window  \n \nXGB_feature_importance-1 \n \nXGB_feature_importance-2 \n \nData is normally distributed using boxcox \n \nRandom Forest 89% Acc, Confusion Matrix \n \n'], 'url_profile': 'https://github.com/OMIII1997', 'info_list': ['Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Python', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 24, 2020', 'Updated Sep 24, 2020', 'Jupyter Notebook', 'Updated Sep 27, 2020', 'Jupyter Notebook', 'Updated Sep 23, 2020', 'Updated Sep 24, 2020', '1', 'Jupyter Notebook', 'Apache-2.0 license', 'Updated Oct 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 21, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': [""\nDiabetes Care Insulin, Blood Sugar, Carbs Graph\n\n\nDescription\nUpdate(7-20-2008): Fixed Saving File, Disclaimer added, May now view data by day, week, month, etc...Next updates will likely include Insulin dosage adjustments, patient education, Nutritional education. Update(7-15-08): I left out the short data file. The screenshot was incomplete and fixed. The graph displays the values at the cursor and opens the particular record when clicked. One may zoom and contract the view as well...This is the initial part of a comprehensive medical Diabetes care program. At present, one inputs meal data, blood sugars, insulin dosage, gms carbohydrate and times. This is then plotted against time in a three tiered line graph. One may optimize and adjust therapy using this. It will likely be linked with an email option and autoresponder to send/receive from a care-giver's computer. Insulin titration information may be added but I am hesitant to put this on the patient side of the program. In addition, calculating gmCHO, glycemic index and Hba1c data will be added.\nMore Info\n\n\n\n\n\n\n\n\n\nSubmitted On\n2008-07-20 04:00:08\n\n\nBy\nWarren Goff\n\n\nLevel\nBeginner\n\n\nUser Rating\n5.0 (10 globes from 2 users)\n\n\nCompatibility\nVB 6.0\n\n\nCategory\nComplete Applications\n\n\nWorld\nVisual Basic\n\n\nArchive File\nDiabetes_C2121137202008.zip\n\n\n\n""], 'url_profile': 'https://github.com/Planet-Source-Code', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': 'Melbourne', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '93 contributions\n        in the last year', 'description': ['type2beat - Industrial Experience Project\n1  in every 6 Australian senior citizens age above 65 years suffers from diabetes and 90% percent of them have diabetes type 2. There are several factors that contribute to thrive diabetes type 2 but bad eating habits especially high sugar intake and less physical activities  are the major contributing factors.\nCore Technologies\nThis project is developed using Django, Django Rest Framework, HTML, CSS and JavaScript\nProject Structure\n|-- awareness     -> Django app consisting functionality focusing on spreading awareness about\n|                    diabetes and its cause and precautions.\n|\n|-- dashboard     -> Django app consisting functionality to assist users to record their medical report data\n|                    and daily glucose food intake through food\n|\n|-- static        -> collection of all static files used in the project\n|\n|-- type2beat     -> core app\n|\n|-- users         -> Django app to manage user login, register and logout functionalities\n|\n|-- manage.py     -> to run Django management commands\nDependencies\nPython 3\nDjango\nDjango Rest Framework\nDjango Widget Tweaks\n'], 'url_profile': 'https://github.com/princedograAU', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['6', '          following'], ['0']], 'contributions': '72 contributions\n        in the last year', 'description': ['Preditix\nA Non-profitable website for Diabetes and Cardio-vascular disease prediction based on symptoms of a patient.\nPlease visit the "" report_to_disease_predition/views.py "" file.\n'], 'url_profile': 'https://github.com/husnulAbid', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': 'Manipal', 'stats_list': [['2', '          followers'], ['12', '          following'], ['2']], 'contributions': '122 contributions\n        in the last year', 'description': ['Heart-attack-Prediction-using-ML\nplotting a graph and predciting with the help of data like age, anaemia, creatinine phosphokinase, diabetes, ejection fraction, high blood pressure, platelets, serum creatinine, serum sodium,\tsex, smoking time, death event.\n'], 'url_profile': 'https://github.com/vish-777', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': '29115', 'stats_list': [['7', '          followers'], ['20', '          following'], ['22']], 'contributions': '63 contributions\n        in the last year', 'description': ['IF you want to fork or see the app part please follow the following repo link. That includes everything about making an web application of Machine learning result using Django platform\nhttps://github.com/ghsagar/diabetic-prediction-\n'], 'url_profile': 'https://github.com/ghsagar', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': 'Guadalajara, México', 'stats_list': [['2', '          followers'], ['3', '          following'], ['0']], 'contributions': '173 contributions\n        in the last year', 'description': ['OSID--Open-Source-Insuline-Dispenser-\nAutonomous system that gives people with diabetes tools and functions that help them improve their quality of life. Consisting of an integrated glucometer, an insulin pump, and a mobile application, whose function is to keep the blood sugar of patients under control through automatic insulin injections or scheduled injections.\n'], 'url_profile': 'https://github.com/RicardoGLeal', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '127 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tipowers', 'info_list': ['VBA', 'Updated Sep 28, 2020', '1', 'JavaScript', 'Updated Nov 25, 2020', 'JavaScript', 'Updated Sep 21, 2020', 'Jupyter Notebook', 'Updated Oct 5, 2020', '1', 'Jupyter Notebook', 'Updated Oct 19, 2020', 'Java', 'GPL-3.0 license', 'Updated Sep 23, 2020', 'Java', 'Updated Sep 26, 2020']}",,,
