"{'location': 'Lagos,Nigeria', 'stats_list': [['11', '          followers'], ['36', '          following'], ['30']], 'contributions': '138 contributions\n        in the last year', 'description': [""diabetesDiagnosis\nThis is a project for the front end of a final year project I'm working on.\nThe whole idea of the project is to have inputs from a form interact with a backend algorithm in python\nThis algorithm which has already been trained with real life data theen predicts the possibility of a patient being diabetic or not.\nResults annd suggestions are sent back to the user to help make lifestyle choices that would improve their health with regards to being\ndiabetic.\n""], 'url_profile': 'https://github.com/temideewan', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/Rumeisa', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '24 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ch0004wa', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'NONE', 'stats_list': [['14', '          followers'], ['10', '          following'], ['0']], 'contributions': '100 contributions\n        in the last year', 'description': ['DiabetesPrediction\nDiabetes prediction is developed for my AI&Data mining project using machine learning to predict if the patient is diabetic or not\n'], 'url_profile': 'https://github.com/NorahAlShaikhMubarak', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'San Francisco, CA', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '77 contributions\n        in the last year', 'description': ['DiabetesPrediction\nThis projects builds classification machine learning models in Python for diabetes prediction using LogisticRegression, SVM, RandomForest classification algorithms. Besides, GridSearchCV was applied to find the best hyperparameters for the three models. Model performances are measured via confusion matrix, precision, recall, ROC AUC.\n'], 'url_profile': 'https://github.com/raynaji', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'Dehradun', 'stats_list': [['0', '          followers'], ['12', '          following'], ['18']], 'contributions': '652 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/itsvivekghosh', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'Gurugram, India', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/Pramod-Bhardwaj', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'Mohammedia', 'stats_list': [['8', '          followers'], ['7', '          following'], ['3']], 'contributions': '58 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/medelbadaoui', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['4', '          following'], ['0']], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/emmaCIT', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['diabetes-prediction\nIt predicts the diabetes\n'], 'url_profile': 'https://github.com/MADHULIKAGANGARAJULA', 'info_list': ['2', 'CSS', 'Updated Jun 1, 2020', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 19, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Java', 'Updated May 18, 2020', 'Updated May 23, 2020', 'Updated May 24, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['6', '          following'], ['4']], 'contributions': '5 contributions\n        in the last year', 'description': ['Data Analysis Of Factors Affecting Diabetes In Python\n'], 'url_profile': 'https://github.com/naudiyal30', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'Mathura, India', 'stats_list': [['5', '          followers'], ['9', '          following'], ['13']], 'contributions': '76 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Shashank-Mittal', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['Diabetes-Prediciton-System\nIt is about predicting diabetes\n'], 'url_profile': 'https://github.com/SwatantraManandhar', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['2', '          following'], ['0']], 'contributions': '26 contributions\n        in the last year', 'description': ['HEKA\nDiabetes Detector for Planet Hacks\nPresenting Project Heka, the health innovation that aims to efficiently diagnose diabetes as well spread awareness.\nSplit up into two components, Project Heka incorporates machine learning in order to detect diabetes with an accuracy of 98%. The machine learning platform determines the best possible algorithm, from Logistic Regression, K-Nearest Neighbors, SVC, Gaussian Naive Bayes, Decision Tree, and Random Forest. The algorithm with the best accuracy is chosen to be incorporated and uses number of pregnancies, glucose levels, blood pressure, skin thickness, insulin levels, BMI, diabetes Pedigree Function, and age in order to make an accurate prediction.\nAfter predicting a given input’s diagnosis, the result is then sent to firebase, from which the Heka website displays on the diagnosis page. Firebase acts as the intermediary project database.\nThe website utilizes html, css, and javascript in order to create an efficient user-interface for the patient. All in all, not only does Project Heka spread awareness of a very common health condition, but it also eases the ability to diagnose a patient using technology.\n'], 'url_profile': 'https://github.com/satvikel4', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['2', '          following'], ['0']], 'contributions': '26 contributions\n        in the last year', 'description': ['diabetes-detection\nProject for Planet Hacks\nPresenting Project Heka, the health innovation that aims to efficiently diagnose diabetes as well spread awareness.\nSplit up into two components, Project Heka incorporates machine learning in order to detect diabetes with an accuracy of 98%. The machine learning platform determines the best possible algorithm, from Logistic Regression, K-Nearest Neighbors, SVC, Gaussian Naive Bayes, Decision Tree, and Random Forest. The algorithm with the best accuracy is chosen to be incorporated and uses number of pregnancies, glucose levels, blood pressure, skin thickness, insulin levels, BMI, diabetes Pedigree Function, and age in order to make an accurate prediction.\nAfter predicting a given input’s diagnosis, the result is then sent to firebase, from which the Heka website displays on the diagnosis page. Firebase acts as the intermediary project database.\nThe website utilizes html, css, and javascript in order to create an efficient user-interface for the patient. All in all, not only does Project Heka spread awareness of a very common health condition, but it also eases the ability to diagnose a patient using technology.\n'], 'url_profile': 'https://github.com/satvikel4', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '12 contributions\n        in the last year', 'description': ['Diabetes Prediction\nUsing various machine learning algorithms to get the best prediction accuracy if possible for the Pima Indians dataset.\nThe best result was found with GradientBoosting with an accuracy of 83%.\nInstall\n\xa0\xa0\xa0 Python version used in this project: 3.6.6\n\xa0\xa0\xa0 Libraries used:\n\n\nPandas 0.23.4\nNumpy 1.15.3\nMatplotlib 2.2.2\nScikit-learn 0.20.0\nScipy 1.1.0\n\n\nHow to Run\nTo run this project you will need some software, like Anaconda.\nFrom Anaconda just set as working directory the folder of the project, open the .py file you want from Models folder and run this file or press F5.\n'], 'url_profile': 'https://github.com/ashvinmaverick', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['9']], 'contributions': '67 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Nimisha89', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['diabetes-prediction\n\uf0b7Creating a website where users can login and know whether they are suffering from diabetes or not.The front end is build using HTML,CSS and flask is also used as an intermediate.Various machine learning algorithms-Random Forest,Decision Trees,Logistic Regression are used for prediction.\n'], 'url_profile': 'https://github.com/subhodevroy', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '35 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/abhishek-kashyap-4', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '63 contributions\n        in the last year', 'description': ['eda-diabetes\nThis is my first Exploratory Data Analysis using Python on Pima-Indian Diabetes data set\nWhat I have tried:\n\n\nExplore the distributions, correlations, outliers, missing values etc.\n\n\nDo univariate and bivariate analysis with multitude of plots\n\n\nUpdate the data set to take care of missing values and / or outliers\n\n\nCreate correlation maps for different data set versions and correlation heat maps\n\n\nProvided domain interpretation for each plot\n\n\n'], 'url_profile': 'https://github.com/sudarshanvaidya', 'info_list': ['1', 'Jupyter Notebook', 'Updated May 20, 2020', '1', 'Jupyter Notebook', 'Updated May 20, 2020', 'Updated May 18, 2020', 'HTML', 'Updated May 24, 2020', 'Updated May 24, 2020', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 18, 2020', 'JavaScript', 'Updated Nov 30, 2020', 'Jupyter Notebook', 'Updated Jun 6, 2020', 'HTML', 'Updated Aug 9, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '204 contributions\n        in the last year', 'description': ['detection-diabetes\n'], 'url_profile': 'https://github.com/franckalainai', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '68 contributions\n        in the last year', 'description': ['Diabetes-prediction\nAbout DATA:\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nColumns\n1.Pregnancies = Number of times pregnant\n\n2.Glucose = Plasma glucose concentration a 2 hours in an oral glucose tolerance test\n\n3.BloodPressure = Diastolic blood pressure (mm Hg)\n\n4.SkinThickness = Triceps skin fold thickness (mm)\n\n5.Insulin = 2-Hour serum insulin (mu U/ml)\n\n6.BMI = Body mass index (weight in kg/(height in m)^2)\n\n7.DiabetesPedigreeFunction = Diabetes pedigree function\n\n8.Age = Age (years)\n\n9.Outcome = Class variable (0 or 1) 268 of 768 are 1, the others are 0\n\nDescription of the model buidling process\n\n\nData cleaning : Missing data analysis is done by replacing nan and data having 0 value with mean.\n\n\nData analysis and visualization : Data is analyse and visualize by using histogram, scatter plot and heatmap.\n\n\nHandel categorical data : Categorical data is handled by using get dummy variable approach.\n\n\nSplit data set : Total data set is splited into train and test data set in the ratio 4:1.\n\n\nCentering and scaling : Centering and scaling is done by using StandardScalar.\n\n\nBuild models : Regression is done using ""Decision Tree"",\n""Random Forest"",\n""Naive Bayes"",\n""Logistic Regression"",\n""Support Vector Machine"",\n""XGboost"" .\n\n\nBuild pipelines of classifiers : Pipelines of above mentioned classifiers are build to achieve the following results:\n\n\nDecision Tree\nAccuracy:  0.7662337662337663\nBalanced Accuracy:  0.7601908928216345\nPrecision/Recall/F1 score:  (array([0.87368421, 0.59322034]), array([0.77570093, 0.74468085]), array([0.82178218, 0.66037736]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[83 24]\n[12 35]]\nAUC:  0.7601908928216345\nprecision    recall  f1-score   support\n       0       0.87      0.78      0.82       107\n       1       0.59      0.74      0.66        47\n\naccuracy                           0.77       154\n\nmacro avg       0.73      0.76      0.74       154\nweighted avg       0.79      0.77      0.77       154\nRandom Forest\nAccuracy:  0.7987012987012987\nBalanced Accuracy:  0.711970570689998\nPrecision/Recall/F1 score:  (array([0.80645161, 0.76666667]), array([0.93457944, 0.4893617 ]), array([0.86580087, 0.5974026 ]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[100   7]\n[ 24  23]]\nAUC:  0.7119705706899979\nprecision    recall  f1-score   support\n       0       0.81      0.93      0.87       107\n       1       0.77      0.49      0.60        47\n\naccuracy                           0.80       154\n\nmacro avg       0.79      0.71      0.73       154\nweighted avg       0.79      0.80      0.78       154\nNaive Bayes\nAccuracy:  0.7857142857142857\nBalanced Accuracy:  0.7384171803539471\nPrecision/Recall/F1 score:  (array([0.83636364, 0.65909091]), array([0.85981308, 0.61702128]), array([0.84792627, 0.63736264]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[92 15]\n[18 29]]\nAUC:  0.7384171803539471\nprecision    recall  f1-score   support\n       0       0.84      0.86      0.85       107\n       1       0.66      0.62      0.64        47\n\naccuracy                           0.79       154\n\nmacro avg       0.75      0.74      0.74       154\nweighted avg       0.78      0.79      0.78       154\nLogistic Regression\nAccuracy:  0.8181818181818182\nBalanced Accuracy:  0.7558162656591767\nPrecision/Recall/F1 score:  (array([0.83760684, 0.75675676]), array([0.91588785, 0.59574468]), array([0.875     , 0.66666667]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[98  9]\n[19 28]]\nAUC:  0.7558162656591767\nprecision    recall  f1-score   support\n       0       0.84      0.92      0.88       107\n       1       0.76      0.60      0.67        47\n\naccuracy                           0.82       154\n\nmacro avg       0.80      0.76      0.77       154\nweighted avg       0.81      0.82      0.81       154\nSupport Vector Machine\nAccuracy:  0.7727272727272727\nBalanced Accuracy:  0.7052097832571087\nPrecision/Recall/F1 score:  (array([0.81034483, 0.65789474]), array([0.87850467, 0.53191489]), array([0.84304933, 0.58823529]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[94 13]\n[22 25]]\nAUC:  0.7052097832571087\nprecision    recall  f1-score   support\n       0       0.81      0.88      0.84       107\n       1       0.66      0.53      0.59        47\n\naccuracy                           0.77       154\n\nmacro avg       0.73      0.71      0.72       154\nweighted avg       0.76      0.77      0.77       154\nXGboost\nAccuracy:  0.8246753246753247\nBalanced Accuracy:  0.8261085702923046\nPrecision/Recall/F1 score:  (array([0.91666667, 0.67241379]), array([0.82242991, 0.82978723]), array([0.86699507, 0.74285714]), array([107,  47], dtype=int64))\nConfusion Matrix:  [[88 19]\n[ 8 39]]\nAUC:  0.8261085702923046\nprecision    recall  f1-score   support\n       0       0.92      0.82      0.87       107\n       1       0.67      0.83      0.74        47\n\naccuracy                           0.82       154\n\nmacro avg       0.79      0.83      0.80       154\nweighted avg       0.84      0.82      0.83       154\n\n\nHyperparameter optimization : Randomized searchCV with 4 fold cross validation is used to find the optimum values of parameter for xgboost regression.\n\n\nThe final value of R2 we get is 0.82 which is quiet good for this project.\n\n\n'], 'url_profile': 'https://github.com/khanal-ananta', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Pune, India', 'stats_list': [], 'contributions': '133 contributions\n        in the last year', 'description': [""Diabetes Prediction - Deployment\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at: https://predicting-diabetes.herokuapp.com/\n• If you are searching for Code, Algorithms used and Accuracy of the model.. you won't find it here. Click the link mentioned below for the same:\nLink: https://github.com/Anaghapawale/Diabetes-Prediction\n• Please do ⭐ the repository, if it helped you in anyway.\n""], 'url_profile': 'https://github.com/Anaghapawale', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Medellin, Colombia', 'stats_list': [['2', '          followers'], ['3', '          following'], ['1']], 'contributions': '339 contributions\n        in the last year', 'description': ['Prototype system for the diagnosis of type 2 diabetes mellitus using Bayesian classifiers and intelligent systems\nInstall node modules:\nnpm install\n\n'], 'url_profile': 'https://github.com/SebasRiv', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tumul3277', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/fear-rush', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Delhi', 'stats_list': [['0', '          followers'], ['1', '          following'], ['5']], 'contributions': '16 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/Ishan-1100', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'new delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '156 contributions\n        in the last year', 'description': ['This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\n'], 'url_profile': 'https://github.com/a9ush', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Sweden', 'stats_list': [['2', '          followers'], ['8', '          following'], ['7']], 'contributions': '41 contributions\n        in the last year', 'description': ['PIMA_Diabetes_Prediction\nPima Indians Diabetes Prediction using Logistic Regression\nDiabetes is a chronic condition in which the body develops a resistance to insulin, a hormone which converts food into glucose. Diabetes affect many people worldwide and is normally divided into Type 1 and Type 2 diabetes. Both have different characteristics. This article intends to analyze and create a model on the PIMA Indian Diabetes dataset to predict if a particular observation is at a risk of developing diabetes, given the independent factors. This article contains the methods followed to create a suitable model, including EDA along with the model.\n'], 'url_profile': 'https://github.com/poulrohan23', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}","{'location': 'Bangalore', 'stats_list': [['3', '          followers'], ['0', '          following'], ['0']], 'contributions': '53 contributions\n        in the last year', 'description': ['Basic-Statistice-pima-diabetes\nObjective\nTo explore the given dataset for all basic statistics such as the distributions, correlations, outliers, missing values, etc.\nDataset used\nPima-Indian-Diabetes Dataset\nSteps followed\n\n\nLoad the dataset.\n\n\nUnderstand the structure of the dataset.\n\n\nPlot various graphs to explore the dataset.\n\n\nUse descriptive statistics elements to describe the dataset.\n\n\nFind the relationship between various attributes.\n\n\nState your insights from the dataset.\n\n\n'], 'url_profile': 'https://github.com/Kavitha-Kothandaraman', 'info_list': ['CSS', 'Updated May 21, 2020', 'Jupyter Notebook', 'Updated Dec 26, 2020', 'HTML', 'Updated Jun 16, 2020', '1', 'JavaScript', 'Updated Sep 3, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'JavaScript', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 31, 2020', 'Jupyter Notebook', 'Updated May 21, 2020', '1', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 29, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['5']], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/santhoshyeravelli', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '96 contributions\n        in the last year', 'description': ['PIMA-Indian-Diabetes-Analysis\nUsing Python Libraries and Basic Statistics\nSome years ago, a research was done on a tribe in America(PIMA Tribe/PIMA Indians). In this tribe, apparently the ladies are prone to diabetes very early on.\nThe whole survey was done to understand if a model can be build on it and using the values of various parameters we could predict whether a person has diabetes or not. If a person is having diabetes, then early prevention can be done.\nFollowing are the parameters(features) used to collect the data:\nPregnancies: Number of times pregnant\nGlucose: Plasma glucose concentration over 2 hours in an oral glucose tolerance test\nSkinThickness: Triceps skin fold thickness (mm)\nInsulin: 2-Hour serum insulin (mu U/ml)\nBMI: Body mass index (weight in kg/(height in m)2)\nDiabetesPedigreeFunction: Diabetes pedigree function (a function which scores likelihood of diabetes based on family history)\n'], 'url_profile': 'https://github.com/dahalsulav', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['This repository represents how to create a web app (API and UI) plus a Mobile App, to work with IOTA and FHIR. It is part of the Untangle Care EDF grant, that has been concluded on May the 15th 2020.\nWhile the approach used here can be applied to all FHIR resources, this demostration usecase evolves around diabetes glucose exchange along with clinical resources.\nThe steps included, can be described as follows (technical explanations left out on purpose, see https://florencedigitalhealth.atlassian.net/wiki/spaces/IF/pages/64126981/Introduction+and+Goals and https://github.com/PACTCare/Pact.Fhir for more details):\n\nThe first step is the data extraction from the blood glucose sensor. In this example, the data is retrieved from the Dexcom API. The Dexcom API is RESTful and utilizes the OAuth 2.0 standard for authentication. This sensor generates one BG measurement every 10 minutes\nAfter the raw data is read via the API, it is converted into a FHIR JSON resource. This conversation is done by filling an FHIR observation blueprint for each generated glucose data measurement with the date of when the glucose measurement is generated and the value of this measurement. The output of this module is one FHIR JSON file per each BG measurement.\nThese files are stored locally on the device and the patient can access it from a “patient interface” (similar to a personal health record, dedicated to diabetes)\nWhen the patient provides consent, the FHIR JSON resources receive an ID and are uploaded into a decentralized storage solution (IOTA/the Tangle) that is used to enable the sharing of this data into the physician dashboard\nReceiving the glucose data can finally be done by reading the data stream shared by the patient and by parsing the glucose JSON resources into the doctor’s dashboard\nThis dashboard provides an overview of the patients diabetes management status and enables exporting of this data (using the FHIR format) into any compatible Electronic Medical Record system (via a FHIR API)\n\n'], 'url_profile': 'https://github.com/PACTCare', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'India', 'stats_list': [['4', '          followers'], ['5', '          following'], ['5']], 'contributions': '101 contributions\n        in the last year', 'description': ['Classifying a Diabetic Patient\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on. This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset.\nDataset : https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/riya1103', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'NONE', 'stats_list': [['13', '          followers'], ['10', '          following'], ['3']], 'contributions': '607 contributions\n        in the last year', 'description': ['Tools for identifying risky diabetes behavior using unsupervised machine learning\nRunning the Virtual Environment\nTo recreate the Virtual Environment\n\nThis environment was developed with Anaconda. You\'ll need to install Miniconda or Anaconda for your platform.\nIn a terminal, navigate to the directory where the environment.yml\nis located (likely the diabetes-risk-analysis folder).\nRun conda env create; this will download all of the package dependencies\nand install them in a virtual environment named risk-analysis. PLEASE NOTE: this\nmay take up to 30 minutes to complete.\n\nTo use the Virtual Environment\nIn Bash run source activate risk-analysis, or in the Anaconda Prompt\nrun conda activate risk-analysis to start the environment.\nRun deactivate to stop the environment.\nQuick Start\nSituation: I have CSV with a Data Export & Want to Visualize It\n\nEnsure data-export CSV is in an acceptable format, essentially the first ""row"" of the CSV contains the column titles (not a patient ID number).\nRun that data-export file through the processing script in optimized_analysis_pipeline.py.\noptimized_analysis_pipeline.py will create a \'results\' folder containing a sub-folder with the title \'TaskMergePreprocessingTogether\'. The processed file from this folder is the one you will use as an input to the visualize_bg_plots.py.\nRun visualize_bg_plots.py; when it prompts you for the path to the data, enter the file path to the file contained the \'TaskMergePreprocessingTogether\' folder (not the initial data-export file).\n\nUsing the Tools\nFile Formatting & Information\noptimized_analysis_pipeline.py can process an export of Tidepool data and identify the outliers in the data. Currently, this export must include CGM data and insulin dosing data. More specifically, the following columns should be present in the data:\nColumns:\n""jsonRowIndex""\n""type"" (type of data: CBG, basal, bolus, etc)\n""time"" (time of the event)\n""subType"" (subtype of bolus: normal, extended, dual wave)\n""deliveryType"" (type of basal: scheduled (according to programmed basal schedule) vs temp)\n""normal"" (units of insulin delivered via a ""normal"" bolus)\n""extended"" (units of insulin delivered via an extended bolus)\n""rate"" (absolute basal rate)\n""insulinCarbRatio"" (insulin to carb ratio)\n""carbInput"" (number of carbs input into bolus calculator)\n""insulinOnBoard"" (insulin on board)\n""bgInput"" (input BG into the dose calculator)\n""insulinSensitivity"" (insulin to BG ratio)\n""duration"" (temp basal length)\n""percent"" (percent of basal rate)\n""value"" (CGM reading in mmol/L)\nNot all of these fields are filled for every dosing type, but all columns must be present in the file, even if they are empty. For example, boluses can have information in ""type"", ""time"", ""normal"", ""subType"", ""normal"", ""extended"", ""insulinCarbRatio"", ""carbInput"", ""insulinOnBoard"", ""bgInput"", and ""insulinSensitivity"".\nConfiguring the Run\nThis code is designed to be used with python3, and the Anaconda environment is configured appropriately. If you\'re processing multiple files, you\'ll want to use the script in bulk_processing.py. If you\'re only processing one file, you can use bulk_processing.py or optimized_analysis_pipeline.py.\nTo use bulk_processing.py, run the file. This file uses concurrent processes to run multiple files in parallel, which is significantly faster. You\'ll be prompted for a path to a txt file with information about the files that should be processed. This txt file should contain the absolute path(s) of the csv raw data file(s) to be processed (for example on Mac, /Users/juliesmith/Downloads/diabetes-risk-analysis/raw_data.csv), with each path being on a new line. The program will check that this path is correct before doing anything.\nTo use optimized_analysis_pipeline.py, you\'ll need to edit the code to specify the path to the file to be processed. You can do this by editing the file_path variable in optimized_analysis_pipeline.py. You should include the absolute path to the csv file (for example on Mac, /Users/juliesmith/Downloads/diabetes-risk-analysis/raw_data.csv). The program will check that this path is correct before importing the file.\nConfiguring Tasks to Be Run\nIn the function process_one_file in bulk_processing.py, or at the bottom of optimized_analysis_pipeline.py, you can uncomment certain lines of code to mark that parts (or all) of the analysis should be re-run. By default, d6tflow will not re-run operations that have already been performed; for example, if the task to import the raw data. TaskGetInitialData(path=file_path), had already been run (and generated an output) for a particular file path, you would need to uncomment TaskGetInitialData(path=file_path).invalidate(confirm=False) if you wanted to re-load that data. This will also mean that all processes that rely on TaskGetInitialData would be re-run if called.\nThis invalidation is specific to the particular \'configuration\' of the task - if the task has configuration variables, you must ensure you uncomment the version with those variables in it. If we wanted to run TaskGetAbnormalBoluses(path=file_path, model_type=""isolation_forest"", identifier=identifier), you\'d need to invalidate the version with path=file_path, model_type=""isolation_forest"", and identifier=identifier; invalidating TaskGetAbnormalBoluses() would have no effect.\nNote that you must also run the task in order for it to execute; if we wanted to run (or re-run) the abnormal bolus classifier, we\'d uncomment d6tflow.run(TaskGetAbnormalBoluses(path=file_path)). Running the whole pileline on a file with ~63,000 entries takes 50-60 seconds.\nIf you run into the situation where the code is not running the tasks as intended, more information about task-run configuration can be found in the documentation at https://d6tflow.readthedocs.io/en/latest/.\nPassing Variables Into Tasks\nTasks can have variables passed in to change their behavior.\n\nFor all tasks, you need to pass in the path variable to tell the code which file should be analyzed; this makes it so the tasks won\'t accidentally overwrite the run data for other files.\nFor all tasks, you can pass in the identifier variable to add a file identifier to the title of the output file; this makes it easier to figure out which output files came from which raw data files. Note that only the first 16 characters will be present in the file title.\nFor TaskGetInitialData(), you can also pass in the desired number of days of data to be analyzed; default is all data. This variable is annoying to try to pass in due to the way d6tflow configures runs, and I would recommend just changing the default within the code itself to be the desired number of days.\nFor TaskGetAbnormalBoluses(), you can pass in the desired unsupervised learning algorithm to use to analyze the data; default is ""knn"" (for k-nearest neighbors), but you can pass in ""isolation_forest"" to use an isolation forest model. Note that the isolation forest is currently configured to accept the 4% of most-abnormal boluses, and this can be changed within bolus_risk_analysis.py.\n\nOutput\nOutputs for the tasks are saved to individual folders (per task) within a results folder. If we wanted to find the csv output file from the abnormal bolus task, that would be contained in results/TaskGetAbnormalBoluses.\nUsing the Graphing Tools\n\nThe file visualize_bg_plots.py can take csv files that have been run through the dose pre-processing script (preprocess_data.py) and visualize the BG values surrounding the event. Upon running, you will be prompted for the absolute path to the csv file (example Mac path: /Users/juliesmith/Downloads/diabetes-risk-analysis/results/processed_doses.csv), and the row number you\'d like to be visualized. The indexing for the row number is how Excel and similar programs index the csv - with the header being index 1, and the first \'actual\' line of data values being at index 2. Once you enter the line number, a graph will pop up with the results; close that graph to be prompted for a new line number. Enter any non-valid line number to quit the program.\nInformation on Data Fields\nNot all of the fields below are present for every type of data (ex: basals have a duration, boluses have an associated carb entry)\nFields\n“type”: data type (basal, bolus, CGM value, etc)\n“time”: time of the event/reading\n“value”: BG reading in mmol/L, multiply by 18 to get it in mg/dL\n“subtype”: type of bolus (normal, extended, dual wave)\n“normal”: Units delivered via a ’normal’ bolus\n“extended”: Units delivered via a form of extended bolus (can be dual wave)\n“insulinCarbRatio”: insulin to carb ratio\n“carbInput”: number of carbs that were input into bolus calculator\n“insulinOnBoard”: IOB at time of event (this isn’t present for all bolus events)\n“bgInput”: BG in mmol/L that was put into bolus calculator\n“insulinSensitivity”: insulin to BG ratio\n“deliveryType”: type of basal (scheduled, aka from the programmed basal schedule, vs temp)\n“duration”: length of the basal\n“percent”: percent of the regularly-scheduled basal rate\n“rate”: the absolute basal rate\nThis doesn\'t cover all of the datatypes, but if there’s a field you’re wondering about, there’s a good chance you can get more info at https://developer.tidepool.org/data-model/, which is Tidepool\'s data model documentation.\n'], 'url_profile': 'https://github.com/novalegra', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '109 contributions\n        in the last year', 'description': ['Summary\nThe average age of people having diabetes is 45 years old. On this project, I want to see classify if medication provided by doctors will reduce patients going back to the hospital. The data has over 80,000 entries and the models performed are Decision Tree and Random Forest.\nExploratory Data Analysis\n\n\n\n\nModel Evaluation\nI used a 70/30 training test data split to evaulate the model\nDecision Tree = with the amount of features provided, I think this model would appropriate\nRandom Forest = a group of decision tree that predicts the best outcome.\nDecision Tree Results:\n          precision    recall  f1-score   support\n\n      NO       0.62      0.62      0.62     13441\n     yes       0.56      0.57      0.56     11683\n\nRandom Forest Results:\n          precision    recall  f1-score   support\n\n      NO       0.67      0.74      0.70     13441\n     yes       0.66      0.58      0.61     11683\n\n'], 'url_profile': 'https://github.com/blater54', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'Haryana,India', 'stats_list': [['90', '          followers'], ['108', '          following'], ['241']], 'contributions': '949 contributions\n        in the last year', 'description': ['Diabetes-Online-Consultant\n'], 'url_profile': 'https://github.com/Ankuraxz', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'Singapore', 'stats_list': [['1', '          follower'], ['1', '          following'], ['2']], 'contributions': '305 contributions\n        in the last year', 'description': ['Summary\nA website to predict the probability of having diabetes\nWebsite\nhttps://portfolio-cmq.herokuapp.com/\nIPYNB analysis\nhttps://nbviewer.jupyter.org/github/mqchua/Diabetes-Prediction-API/blob/master/Analysis.ipynb\n'], 'url_profile': 'https://github.com/mqchua', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'Hyderabad', 'stats_list': [['17', '          followers'], ['4', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['Diabetes-prediction-PIMA\nDiabetes disease prediction using PIMA dataset\n'], 'url_profile': 'https://github.com/EpuriHarika', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}","{'location': 'Charlotte, NC', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '45 contributions\n        in the last year', 'description': ['diabetes-prediction-ensemble\nUsing ensemble models for diabetes prediction\nRead requirements.txt for the needed libraries and infra needs\n'], 'url_profile': 'https://github.com/udaysatapathy', 'info_list': ['Jupyter Notebook', 'Updated May 19, 2020', 'HTML', 'Updated May 18, 2020', 'CSS', 'MIT license', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated Oct 15, 2020', '1', 'Python', 'Updated Sep 10, 2020', 'Jupyter Notebook', 'Updated May 30, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 22, 2020', 'Jupyter Notebook', 'Updated May 22, 2020']}"
"{'location': 'Pune', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '410 contributions\n        in the last year', 'description': ['Diabetes_Prediction_PIMA_Dataset\n'], 'url_profile': 'https://github.com/mandar196', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '33 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes---Prediction\nContent\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nAcknowledgements\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus. In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\nInspiration\nCan you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\n'], 'url_profile': 'https://github.com/abby5503', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'New Delhi', 'stats_list': [['1', '          follower'], ['14', '          following'], ['47']], 'contributions': '91 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-KNN\nThis repository demonstrates the project of ""Diabetes Prediction using Machine Learning"". This project has been created by implementing the K Nearest Neighbors Algorithm. Initially, the Machine Learning model of KNN Algorithm is trained using diabetes_train dataset and later on the expected results are tested and obtained successfully. The accuracy of around 87.4 % was achieved after the successful execution of the Machine Learning Model.\n'], 'url_profile': 'https://github.com/Ronny-22-Code', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '14 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/athinabarbul', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '27 contributions\n        in the last year', 'description': ['Pima-India-Diabeties\nPredicted Diabetes diagnosis for Pima Females Indian.\n'], 'url_profile': 'https://github.com/abpandey4', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '66 contributions\n        in the last year', 'description': ['KNN-Predict-diabetes\nA model using KNN which can predict whether a persion will have diabetes or not.\n'], 'url_profile': 'https://github.com/Vinaykumargond', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '27 contributions\n        in the last year', 'description': ['Diabetes\nThis folder contains all the code for Project three: HTML files, CSS code, Images and Jupyter Notebook code.\nSetUp_Related\nThis folder conatins  scripts to set up a database in SQLite and import the data used for the project into the same database.\nInstructions to create a Database\nPlease clone this repository to your desktop and then do the following:\nSteps to create the database:\n\ndownload SQLite utility to create the database (https://www.sqlite.org/download.html option: A bundle of command-line tools for managing SQLite database files, including the command-line shell program, the sqldiff.exe program, and the sqlite3_analyzer.exe program.\n(sha1: 84de665d28cff0f8c512889cd356712e17310637)\nGo to the folder where SQLite utility is installed and copy the csv file (diabetes.csv from Setup_Related)\nGo to the Windows command prompt pointing to SQLite folder\nRun all the comands mentioned on the create_table_statements.txt within the Setup_Related folder. At this point the diabetes.db has been created.\nCopy the diabetes.db to the Diabetes folder within the downloaded repository\n\nSteps to run the application:\n\nOpen Visual Studio\nOpen Diabetes Folder\nNavigate to templates folder\nRight Click on Index.html and Open in Live Server\nEnjoy!\n\n'], 'url_profile': 'https://github.com/Lydia-MSP', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '12 contributions\n        in the last year', 'description': ['20200520_diabetes_zhiyuan_AI\n'], 'url_profile': 'https://github.com/aaronwolf1995', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['6', '          following'], ['5']], 'contributions': '82 contributions\n        in the last year', 'description': ['awareness\nA page to raise diabetes awareness\n'], 'url_profile': 'https://github.com/fatimaavilesfa', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'Colchester, United Kingdom', 'stats_list': [['5', '          followers'], ['4', '          following'], ['0']], 'contributions': '57 contributions\n        in the last year', 'description': ['PyCaret-on-Diabetes-Dataset\nPyCaret library is applied on Diabetes Dataset and the goal is to predict patient outcome (binary 1 or 0) based on several factors such as Blood Pressure, Insulin Level, Age etc.  The dataset is available on PyCaret’s github repository.\n'], 'url_profile': 'https://github.com/Inshalkhan', 'info_list': ['Jupyter Notebook', 'Updated May 18, 2020', 'Python', 'Updated May 19, 2020', '1', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 19, 2020', '1', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated May 20, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Updated May 21, 2020', 'HTML', 'Updated Jun 4, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}"
"{'location': 'Orlando, FL', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '58 contributions\n        in the last year', 'description': ['Introduction\nThe rate of diabetic patients has been increasing in USA. In the next coming years, it is predicted that proportion of people suffering from diabetes can go up to one person in three by 2050 from one person in seven. In order to address this issue before it gets more sever, machine learning was used in this project to predict the diabetes. The goal of this project is to build significantly efficient models to predict diabetes of an individual so that depending on the prediction one can take care of the lifestyle and diet in a healthy way which would not cause diabetes. This study implements traditional classification models and evaluated using different evaluation matrices.\nData Collection\nThe diabetes dataset is taken from UCI Machine Learning Repository. It consists of 768 datapoints and 9 features. Outcome was the dependent variable. Zero indicates an outcome means no diabetes whereas one value of diabetes means diabetes. The nine features in dataset are as:  Pregnancies, Glucose, Blood Pressure, Skin Thickness, Insulin, BMI, Diabetes Pedigree Function, Age, Outcome.\nMethods Implemented\n\nLogistic Regression\nDecision Trees\nKNN\nRandom Forest\nGradient Boosting\n\nConclusion\nThe feature Glucose was observed to be one of the most influential features towards diabetes as it had a high importance compared to the classification algorithms used in this project.\nThe best model for this dataset is Gradient Boosting as it has high accuracy when compared to other classification model used in this project.\n'], 'url_profile': 'https://github.com/JahnaviSLanka', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['Binary-classification-of-diabetes-patient\n'], 'url_profile': 'https://github.com/indra-prog', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '20 contributions\n        in the last year', 'description': ['DeteksiDiniPenyakitDiabetesMellitus\nABSTRACT\nDiabetes Mellitus is the body still produces insulin but does not produce enough amounts or the body has difficulty using insulin efficiently, it is called insulin resistance. Factors that cause Diabetes Mellitus can be grouped into three groups, namely sociodemography consisting of age, sex, and occupation. Behavioral and lifestyle factors such as vegetable and fruit consumption, smoking habits, alcohol consumption and physical activity. Clinical or mental states such as time indexes of the body (obesity), waist circumference (central obesity) and stress. Based on these factors often the public does not realize that he entered the category of Pre Diabetes Mellitus or is certainly exposed to Diabetes Mellitus. Most people are aware of themselves being exposed to Diabetes Mellitus when people experience other complications. This becomes a serious problem to prevent people from being exposed to Diabetes Mellitus\nand may soon be aware of whether it is exposed to Diabetes Mellitus or not. With the problem of the issue, in this final task will be designed a system that can know of Dicky detection of dillius diabetes. This system is designed by using a computer - core forward system\'s method system that can via some data or some of the facts that are moving forward towards conclusions (goal). This drumpling deteer question is in the application of the application that was resources at the expert or doctors about factors and symptoms of diabetus and conclusions whether user diagility was exposed to mellius\'s diabetes or was not gained on the results of the accurate and valid\nBACKGROUND\nDiabetes Mellitus (DM) and its complications have become a serious public health problem and are an important cause of morbidity, mortality and disability rates throughout the world. Globally the DM day of the world is celebrated every November 14th, this proves that DM is a global problem that occurs in every country, both in developed countries and in poor and developing countries.\nIn this final project that needs to be detected early is Diabetes Mellitus Type 1 and Type 2 because Diabetes Mellitus Type 2 (DMT2) is caused by age, environmental conditions, unhealthy lifestyles such as consuming foods or drinks that are high in sugar, smoking and rarely exercising and Diabetes Mellitus Type 1 (DMT1) is caused by genetic factors (hereditary disease inherited from previous offspring) and autoimmune (destruction of pancreatic beta cells that have little or no insulin secretion can be determined by the level of cpeptide protein whose numbers are few or not detected at all). In addition, DMT1 and DMT2 need to do early detection because DM is a disease that tends to be less aware, usually someone only realizes it if they already experience complications of DM.\nTo implement this system design, an expert system method is needed, namely Forward Chaining. Expert system is useful for analyzing in solving a problem in order to get a solution or answer that is valid and accurate in analyzing a problem, in this case is to analyze whether someone has DM, pre-DM or not DM. Expert system analysis based on the Forward Chaining method that represents expert knowledge (knowledge base) in accordance with the facts of the conditions experienced by the user (initial state) who move forward to take the decision tree Depth First Search to get conclusions (goals).\nTherefore the title of this thesis is ""Designing of Early Diabetes Mellitus Detection Application Using Forward Chaining Classification Method on Android-Based Expert System"" in order to have a positive and beneficial impact on the community because it does not have to cost a fortune and spend a lot of time for consultation and checking to hospital.\nGOALS\n\nMake an android-based application to detect DM early on the basis of DM early detection questions sourced from experts (doctors) so that the data and conclusions are accurate and valid.\nThe benefits to be achieved from the research are the development of Android-based applications that can detect DM disease early based on expert data so that people do not need to spend a lot of money, time and energy to check at the hospital.\nImplementation of this application uses the expert system method that is Forward Chaining aims to represent expert knowledge and use the decision tree Depth First Search to obtain the conclusion whether the user is affected by DM, Pre-DM or not DM based on the answer to the user\'s early detection question.\n\nDESIGN AND BUILD\nThis system is designed on an Android-based smartphone, which aims to detect early DM disease. In the system, the input starts with the stage where the user answers 51 questions for the detection of DM in the application. The question is based on the doctor (expert) and medical reference about DM disease so that the data obtained is valid and accurate data. The answer process can be done through the early detection feature on the smartphone. After the user answers the question, the system will process the input using the Forward Chaining expert system method in order to obtain output in the form of a Goal (the conclusion) whether the user is suffering from DM, Pre-DM or not DM.\nExperts are needed to get data and conclusions that are valid and accurate. The expert in this study was a doctor named Dr. Woro Hapsari Wahyuningrum, Sp.PK NIP 19820519 200902 2 004 who holds the position of Head Laboratory Installation at the Occupational Health Hospital of West Java Province. Data sourced from experts are expert knowledge about Diabetes Mellitus and the expert system method of Forward Chaining, Depth First Search, literature studies in the form of medical references about Diabetes Mellitus and expert system references regarding Forward Chaining methods, Depth First Seacrh, symptoms of DMT1 , symptoms - signs of DMT2, knowledge base, grouping of DM, results of disease conclusions, weight of answers, 51 questions of early detection of DM disease, DM decision tree, Pre-DM, and not DM use Depth First Search to get the conclusion of diagnosis from experts applied in the Forward Chaining expert system method whether someone has DM, Pre-DM or not DM.\n\nInput (input) is input from users who have answered 51 questions of early detection of Diabetes Mellitus sourced from Experts (Doctors). The input is in the form of Symptoms - Signs of Diabetes Mellitus.\nInference Engine (inference engine) is the brain of the expert system, this section contains the mechanism of thinking functions and patterns of system reasoning used by an expert. This mechanism will analyze a particular problem and then look for the best answer or conclusion. From the facts obtained during the question-answer process with the user, as well as the rules stored in the knowledge base, the inference engine can draw an accurate and valid conclusion. The Inference Engine uses the Forward Chaining expert system method that starts from the intial state (the initial facts obtained from the input ""yes"" user answers) then represents knowledge base that moves forward to find goals (user diagnosis results). Knowledge base is the knowledge base of Doctors (Experts) about Diabetes Mellitus which contains IF-THEN rules in order to explain the purpose and rules (rules) based on the knowledge of Doctors (Experts). The rules applied were 51 pieces. The conclusion table contains some conclusions of the disease whether a person has DM, Pre-DM or not DM.\nDecision Tree is used to draw conclusions from the problem at hand. In this decision making using the decision tree DepthFirst Search method. Depth First Search is a method of searching a tree by tracing a branch of a tree to find a solution. The search is performed on one node in each level from the far left and continued on the right node. If a solution is found then there is no need for a backtracking process, i.e. search back to get the desired path. In addition, if the solution sought is at the far left and or at a deep level, DFS will find it quickly.\nOoutput System. This result, called Goal, is obtained after all processes are completed in order to obtain accurate and valid conclusions whether the user is exposed to DM, Pre-DM or not DM.\n\nFor more describe, please look my Final Project Book in my GitHub\n'], 'url_profile': 'https://github.com/Leo16081997', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '20 contributions\n        in the last year', 'description': ['DeteksiDiniPenyakitDiabetesMellitus2\n'], 'url_profile': 'https://github.com/Leo16081997', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'Czech Republic', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '104 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/yogenderPalChandra', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '88 contributions\n        in the last year', 'description': ['Diabetes-Readmission-and-Effective-Treatment-Prediction\n'], 'url_profile': 'https://github.com/sharmin2697', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'Pune', 'stats_list': [['2', '          followers'], ['16', '          following'], ['5']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MayurG25', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '40 contributions\n        in the last year', 'description': ['ShinyApp\nKidney Transplant Rejection Predictor for Type II Diabetes\n'], 'url_profile': 'https://github.com/SherryShiruiWang', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '114 contributions\n        in the last year', 'description': ['Imbalance Rectification\nTraining a Machine Learning Model on disease dataset\n'], 'url_profile': 'https://github.com/heraclitus007', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}","{'location': 'Mumbai', 'stats_list': [['8', '          followers'], ['18', '          following'], ['7']], 'contributions': '223 contributions\n        in the last year', 'description': ['A exploratory project to predict if a subject has diabetes\nDataset source: https://www.kaggle.com/uciml/pima-indians-diabetes-database\nAbout the project:\nIn this project-based exploration, I made a training and test set using an R function, practiced looking at data distribution using R and ggplot2, applied a Random Forest model to the data and examined the results using RMSE and a Confusion Matrix.\n'], 'url_profile': 'https://github.com/dhairyap99', 'info_list': ['Jupyter Notebook', 'Updated Jun 16, 2020', 'Jupyter Notebook', 'Updated Jun 28, 2020', 'Java', 'Updated May 26, 2020', 'Java', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 23, 2020', 'Jupyter Notebook', 'Updated May 22, 2020', '1', 'R', 'Updated May 18, 2020', 'R', 'Updated Jun 3, 2020', 'Jupyter Notebook', 'Updated Jun 21, 2020', 'Updated May 23, 2020']}"
"{'location': 'Nigeria', 'stats_list': [['2', '          followers'], ['15', '          following'], ['52']], 'contributions': '94 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Model-using-Machine-Learning-Ensemble-Algorithms\nThis is a Machine Learning Model that predicts if a patient is diabetic or not diabetic, using Ensemble Algorithms in Python\n'], 'url_profile': 'https://github.com/otoosakyidavid', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '242 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nicokinazoko', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/aminiqbal', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['11', '          following'], ['380']], 'contributions': '187 contributions\n        in the last year', 'description': ['Welcome!\nPancreatlas is a a web application front-end for browsing and investigating collection-based bioimages.\nWe are still in the process of having our institution prepare the appropriate licensing documentation so that we may share our source code to other academics and researchers! Please star this repository and check back later.\n'], 'url_profile': 'https://github.com/c5creative', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ManiKumarReddy35', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'Washington, DC', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '7 contributions\n        in the last year', 'description': ['Predicting Diabetes\nUsing a k-NN model to predict whether or not a patient has diabetes with Scikit-Learn and Python.\n\n'], 'url_profile': 'https://github.com/michael-wessel', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'Bogotá, Colombia', 'stats_list': [['1', '          follower'], ['2', '          following'], ['84']], 'contributions': '168 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/juanesmendez', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}","{'location': 'Indonesian', 'stats_list': [['4', '          followers'], ['1', '          following'], ['2']], 'contributions': '327 contributions\n        in the last year', 'description': ['Training-SKLearn-SVM-for-Classification\nMachine learning models to classify patients who are diabetic positive or not. Try to use the SVM model available in the SKLearn library. using the Indian Pima dataset. This dataset was collected by the National Institute of Diabetes and Digestive and Kidney Diseases.\n'], 'url_profile': 'https://github.com/taufiqwahid', 'info_list': ['Jupyter Notebook', 'Updated May 20, 2020', 'R', 'Updated May 28, 2020', 'Java', 'Updated May 19, 2020', '2', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated Jan 3, 2021', 'Python', 'Updated May 19, 2020', 'Jupyter Notebook', 'Updated May 24, 2020', 'Jupyter Notebook', 'Updated May 21, 2020']}",,
