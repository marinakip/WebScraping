"{'location': 'NONE', 'stats_list': [['8', '          followers'], ['20', '          following'], ['33']], 'contributions': '270 contributions\n        in the last year', 'description': ['End-to-End Diabetes Prediction Application using Machine Learning (MINI Project)\nTable of Content\n\nOverview\nMotivation\nDemo\nLearning Objective\nTechnical Aspect\nTechnologies Used\nBug / Feature Request\nInstallation\nTeam\nCredits\nNote\nLicense\n\nOverview\nIn this project, the objective is to predict whether the person has Diabetes or not based on various features suach as\n\nPregnancies\nInsulin Level\nAge\nBMI.\nThe data set that has used in this project has taken from the kaggle . ""This dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage."" and used a simple random forest classifier.\n\nMotivation\nThe motivation was to experiment  with end to end machine learning project and get some idea about deployment platform like Heroku and offcourse this ""\nDiabetes is an increasingly growing health issue due to our inactive lifestyle. If it is detected in time then through proper medical treatment, adverse effects can be prevented. To help in early detection, technology can be used very reliably and efficiently. Using machine learning we have built a predictive model that can predict whether the patient is diabetes positive or not."".\nThis is also sort of fun to work on a project like this which could be beneficial for the society.\nDEMO\nVisit this link for live demo\nLearning Objective\nThe following points were the objective of the project . If you are looking for all the following points in this repo then i have not covered all in this repo. I\'m working on blog about this mini project and I\'ll update the link of blog about all the points in details later . (The main intention was to create an end-to-end ML project.)\n\nData gathering\nDescriptive Analysis\nData Visualizations\nData Preprocessing\nData Modelling\nModel Evaluation\nModel Deployment\n\nTechnical Aspect\n\nTraining a machine learning model using scikit-learn.\nBuilding and hosting a Flask web app on Heroku.\nA user has to put details like Number of Pregnancies, Insulin Level, Age, BMI etc .\nOnce it get all the fields information , the prediction is displayed on a new page .\n\nTechnologies Used\n\n\n\n\n\n\nBug / Feature Request\nIf you find a bug (the website couldn\'t handle the query and / or gave undesired results), kindly open an issue here by including your search query and the expected result.\nIf you\'d like to request a new function, feel free to do so by opening an issue here. Please include sample queries and their corresponding results.\nInstallation\n\nClone this repository and unzip it.\nAfter downloading, cd into the flask directory.\nBegin a new virtual environment with Python 3 and activate it.\nInstall the required packages using pip install -r requirements.txt\nExecute the command: python app.py\n\nTeam\nAnurag Singhania - Ml  Model Evaluation and Deployment\nHemant Kumar - Data Preprocessing & Gathering\nVikram Kumar - HTML & CSS\nManish Kumar Rajak -Presentation\nCredits\n\n\nTook inspiration from Krish Naik Who is a youtuber he makes contents on Data science his youtube channel link\n\n\nDitikrushan Giri\n\n\nNote:\n\nWebapp can handle concurrency upto some extent but can be scaled.\n\nLicense\nDistributed under the MIT License. LICENSE\n'], 'url_profile': 'https://github.com/itzanuragsinghania', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Belgium', 'stats_list': [['6', '          followers'], ['10', '          following'], ['32']], 'contributions': '796 contributions\n        in the last year', 'description': ['Welcome to Gluco Check\nformerly Nightscout Status\n\n\n\nGetting started\n\nLink your Nightscout site\nAsk for beta access\nSay: ""Hey Google, talk to Gluco Check""\n\nThings you can ask Gluco Check\n\nBlood sugar\nInsulin on Board\nCarbs on Board\nSensor age\nInfusion set age\nPump battery level\nPump reservoir level\nAnd more\n\nProtip: Using a shorter invocation\nUse Routines to turn ""Hey Google, ask Gluco Check my blood sugar"" into\n""Hey Google, check my sugar"".\nNote: Routines are not supported in all languages.\n\nContributing\nPull requests are welcome.\nFor detailed tech docs, check CONTRIBUTING.md\nLicense & Privacy Policy\nGluco Check is licensed under the MIT License\nCopyright (c) 2021\nNiels Maerten & David D\'Amico\nPrivacy Policy\n'], 'url_profile': 'https://github.com/nielsmaerten', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/CaitlinAitken', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '31 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/siva4162', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/lucksor', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Mumbai', 'stats_list': [['1', '          follower'], ['2', '          following'], ['0']], 'contributions': '105 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/tejas198606', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '50 contributions\n        in the last year', 'description': ['Análise de Dados sobre Diabetes no Brasil - VIGITEL\nData Analysis on Diabetes in Brazil - VIGITEL\nDescrição Resumida do Projeto\nNeste projeto, foi avaliada a prevalência de diabetes no Brasil utilizando a base de dados Vigitel (Sistema de Vigilância de Fatores de Risco e Proteção para Doenças Crônicas por Inquérito Telefônico) de 2007 a 2019. Também foram avaliados fatores que poderiam ser associados a esta doença e realizadas análises estatísticas utilizando a linguagem de programação Python 3 e as bibliotecas Matplotlib, Pandas, Seaborn e Ploty, a fim de compreender melhor a diabetes ao longo do tempo, no Brasil. Pode-se inferir que a prevalência de diabetes: aumentou 6% em 13 anos; apresentou tendência de redução entre os que recebem o auxílio bolsa família do Governo Federal, diferentemente da tendência global; e é maior entre mulheres em relação aos homens. Além disso, o fator consumo de refrigerantes teve diminuição na prevalência.\nAbstract in English\nIn this project, the prevalence of diabetes in Brazil was evaluated using Vigitel (Surveillance System for Risk and Protective Factors for Chronic Diseases by Phone Survey) as database from 2007 to 2019. Factors that could be associated with this disease were also evaluated and statistical analyses were performed using Python 3.0 as programming language and Matplotlib, Pandas, Seaborn and Ploty as libraries, in purpose of understand diabetes in Brazil over time. It can be inferred that the prevalence of diabetes: increased by 6% in 13 years; there was a downward trend among those who has been receiving “bolsa familia” (a financial social assistance) from the Federal Government, unlike the global trend; and it is higher among women compared to men. In addition, the prevalence of soft drink consumption decreased.\nEquipe\n\nHeitor Soares Mattosinho      - 262947\nTainá Peres Passos            - 194220\nStephania Slis Raggio Santos  - 137608\nJoão Guilherme Ito Cypriano   - 061701\n\nMídias\nVídeo do Projeto\n\nO vídeo pode ser acessado aqui\nApresentação do projeto\nAcesso à apresentação\nIntrodução e Motivação\nO diabetes é uma doença crônica que pode ser caracterizada por altos níveis de açúcar no sangue no caso do diabetes mellitus ou por falta ou não absorção de ADH (hormônio antidiurético) no caso do diabetes insipidus, que é uma doença mais rara. O diabetes afeta várias funções corporais, por isso é  uma doença metabólica (Figueiredo, 2009;Maraschin, 2010; WHO, 2020).\nO diabete mellitus (DM) se divide em tipo um, dois, gestacional e relacionada a outros fatores. O DM tipo 1 ocorre porque as células beta do pâncreas produzem pouca ou nenhuma insulina por razões imunológicas ou por fatores idiopáticos (desconhecidos), acometendo normalmente crianças, mas também pode acometer outras faixas etárias e o tratamento consiste na administração de insulina. Há também o tipo 2, que acomete 90% do total de casos de diabetes, dentre eles há mais adultos acima de 30 anos, ele é relacionado a fatores genéticos e não há necessidade de uso de insulina, sendo recomendada a alteração de hábitos alimentares e perda de peso antes da doença ser instalada,  após a sua instalação é receitado o uso de hipoglicemiantes orais. Também há o DM gestacional e outros tipos de diabetes relacionados a doenças no pâncreas, infecções, síndromes genéticas, defeitos genéticos ou uso de drogas (Maraschin, 2010).\nCerca de 422 milhões de pessoas ao redor do mundo são acometidas por diabetes, sendo a maioria em países em desenvolvimento, e as mortes atribuídas a esta doença chegam a 1,6 milhões por ano.2 No Brasil, em 2016 as DCNT(doenças crônicas não transmissíveis) foram responsáveis por 74% das mortes, sendo 5% provenientes de diabetes (Brasil, 2020).\nTodas essas informações motivam o estudo dos dados de amostras da população brasileira disponíveis no Vigitel (Sistema de Vigilância de Fatores de Risco e Proteção para Doenças Crônicas por Inquérito Telefônico) de 2007 a 2019 para verificar a prevalência desta doença e se há alguma relação com outros fatores também disponíveis nos dados do Vigitel (Brasil, 2020).\nPortanto este projeto está dividido nas seguintes seções:\n├── Introdução e Motivação        <- apresentação do projeto\n│   ├── O VIGITEL                   \n│   ├── Perguntas da Pesquisa     <- O que pretendemos responder.\n│   ├── Objetivos do projeto      <- Nossa proposta de abordagem.\n│   └── Referências               <- Referência bibliográfica;\n│\n├── Recursos e Métodos               \n│   ├── Base de Dados             <- Acesso às bases VIGITEL.\n│   └── Ferramentas               <- Ferramentas e bibliotecas de programação utilizadas.\n│\n├── Metodologia                      \n│   ├── Detalhamento do Projeto   <- Como o projeto foi estruturado.\n│   └── Evolução do Projeto       <- Possíveis problemas enfrentados e possíveis mudanças de trajetória.\n│\n├── Resultados e Discussão        <- Conclusões finais do trabalho e as lições aprendidas.\n│\n├── Conclusões                    <- Este trabalho respondeu nossa pergunta?\n│\n└── Trabalhos Futuros             <- O que pretendemos evoluir para este projeto.\n\nO VIGITEL\nO Vigitel foi implantado em 2006 em todas as capitais dos 26 estados brasileiros e no Distrito Federal, é um sistema de vigilância de fatores de risco e proteção para doenças crônicas por inquérito telefônico com pessoas maiores de 18 anos, nas 26 capitais brasileiras e no Distrito Federal, realizado pelo Ministério da Saúde.\nO monitoramento dos fatores de risco, da frequência e distribuição das principais doenças crônicas fornece informações importantes para o planejamento de políticas públicas de promoção e prevenção que reduzam a ocorrência e a gravidade destas doenças, melhorando assim a saúde da população, além de descrever a evolução anual desses indicadores.\nEntre as doenças incluem-se diabetes, obesidade, câncer, doenças respiratórias crônicas e cardiovasculares como hipertensão arterial, que têm grande impacto na qualidade de vida da população.\nSeu processo de amostragem é iniciado com o sorteio de números telefônicos fixos das capitais do país a partir dos cadastros de empresas telefônicas.\nPrimeiramente são sorteadas 5 mil linhas telefônicas por cidade, de forma sistemática e estratificada por CEP. A seguir, as linhas passam por um segundo sorteio e são divididas em réplicas de 200 linhas, sendo que cada réplica reproduz a mesma proporção de linhas por CEP do cadastro original.\nA próxima etapa é identificar, entre as linhas sorteadas, aquelas que são elegíveis, excluindo empresas, linhas que não existem ou se encontram fora de serviço e linhas que não atendem a seis tentativas de chamadas feitas em dias e horários variados.\nAs consideradas elegíveis passam por uma segunda etapa da amostragem do inquérito, com sorteio de um dos adultos moradores no domicílio para responder o questionário.\nPerguntas de Pesquisa\nCom base nos dados do Vigitel de 2007 a 2019 qual a prevalência de diabetes em amostras da população brasileira e quais fatores podem estar associados a esta doença?\nObjetivos do projeto\nAvaliar a prevalência de diabetes em brasileiros e verificar se há associação com outros fatores da pesquisa Vigitel de 2007 a 2019.\nRecursos e Métodos\nBases de Dados\nFoi utilizado, exclusivamente, os dados disponíveis no portal do Departamento de Informação e Análise Epidemiológica da base de dados do VIGITEL. Foram utilizados os dados anos de 2007 a 2019, para avaliar a evolução da prevalência de diabetes ao longo dos anos da pesquisa e suas associações. O uso das tabelas foi orientado pelo Dicionário disponibilizado no VIGITEL.\n\n\n\nBase de Dados\nEndereço na Web\nResumo descritivo e uso\n\n\n\n\nBase 01\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2007-peso-rake.xls\nPesquisa VIGITEL do ano de 2007\n\n\nBase 02\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2008-peso-rake.xls\nPesquisa VIGITEL do ano de 2008\n\n\nBase 03\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2009-peso-rake.xls\nPesquisa VIGITEL do ano de 2009\n\n\nBase 04\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2010-peso-rake.xls\nPesquisa VIGITEL do ano de 2010\n\n\nBase 05\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2011-peso-rake.xls\nPesquisa VIGITEL do ano de 2011\n\n\nBase 06\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2012-peso-rake.xls\nPesquisa VIGITEL do ano de 2012\n\n\nBase 07\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2013-peso-rake.xls\nPesquisa VIGITEL do ano de 2014\n\n\nBase 10\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2014-peso-rake.xls\nPesquisa VIGITEL do ano de 2014\n\n\nBase 11\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2015-peso-rake.xls\nPesquisa VIGITEL do ano de 2015\n\n\nBase 12\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2016-peso-rake.xls\nPesquisa VIGITEL do ano de 2016\n\n\nBase 13\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2017-peso-rake.xls\nPesquisa VIGITEL do ano de 2017\n\n\nBase 14\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2018-peso-rake.xls\nPesquisa VIGITEL do ano de 2018\n\n\nBase 15\nhttp://svs.aids.gov.br/download/Vigitel/Vigitel-2019-peso-rake.xls\nPesquisa VIGITEL do ano de 2019\n\n\n\nFerramentas\n\n\n\nFerramenta\nEndereço na Web\nResumo descritivo e uso\n\n\n\n\nPython 3\nhttps://www.python.org/\n<Descrição da Ferramenta 1 e para que ela foi usada no projeto.>\n\n\nPandas\nhttps://pandas.pydata.org/\n<Descrição da Ferramenta 2 e para que ela foi usada no projeto.>\n\n\nPlotly\nhttps://plotly.com/\n<Descrição da Ferramenta 2 e para que ela foi usada no projeto.>\n\n\nMatplotlib\nhttps://matplotlib.org/\n<Descrição da Ferramenta 2 e para que ela foi usada no projeto.>\n\n\nSeaborn\nhttps://seaborn.pydata.org/\n<Descrição da Ferramenta 2 e para que ela foi usada no projeto.>\n\n\n\nMetodologia\nEste projeto foi baseado na estruturação e visualização de dados. Separados em dois fluxos: transformação de dados e visualização de dados. O primeiro faz a leitura dos arquivos originais, na base do VIGITEL e cria novas tabelas, filtrando as colunas principais utilizadas neste trabalho. A segunda parte, de visualização de dados, é responsável por criar as associações e análises da diabetes, além da criação dos gráficos, mostrados na parte de resultados.\nTodo o desenvolvimento foi feito utilizando linguagem de programação Python e o uso de bibliotecas para manipulação (pandas) e visualização de dados (matplotlib, plotly ee seaborn).\nDetalhamento do Projeto\nPara este projeto, as planilhas para analise e visualização de dados foram geradas. Para leitura basta utilizar o código abaixo, conforme o ano desejado:\ndf = pd.read_csv(""https://raw.githubusercontent.com/ajjaum/Diabetes/master/data/processed/2019.csv"", sep=\';\', header = 0)\nPara a visualização dos gráfico em Plotly, no notebook, é necessário utilizar a seguinte função:\ndef configure_plotly_browser_state():\n  import IPython\n  display(IPython.core.display.HTML(\'\'\'\n        <script src=""/static/components/requirejs/require.js""></script>\n        <script>\n          requirejs.config({\n            paths: {\n              base: \'/static/base\',\n              plotly: \'https://cdn.plot.ly/plotly-1.5.1.min.js?noext\',\n            },\n          });\n        </script>\n        \'\'\'))\nAs bibliotecas criadas foram baseadas na prevalência da diabetes e suas associações com outras características (pressão alta, alimentação, idade, etc).\nEvolução do Projeto\nNo começo do projeto o grupo tinha uma ideia muito geral sobre como abordaríamos o uso e a visualização dos dados e ao longo do processo conseguimos focar mais em visões mais específicas. Durante a escolha dos bancos de dados que seriam usados, o grupo decidiu tentar encontrar um banco único que abrangesse o máximo de variáveis relevantes para o projeto. Partimos por esse caminho para evitar o grande desafio que é fazer a integração de diferentes bases de dados que contêm diferentes variáveis e também diferentes cortes da população, e que em sua maioria resultando em dados heterogêneos e desbalanceados, gerando uma complexidade muito grande para um projeto de curto prazo. O banco que mais nos pareceu interesse foi o Vigitel, que é uma coleta anual do Ministério da Saúde de dados obtidos por ligações telefônicas nas capitais do Brasil, com um questionário volumoso e bem abrangente.\nInicialmente, o Vigitel aparentava ser uma base excelente para o que procurávamos, já que a bases possuíam dados bem sólidos -- anualmente uma tabela contava com, em torno de 51.000 adultos que respondiam um questionário com uma média de 180 perguntas, o que gerava 9.000.000\u202c de respostas. Essa base de dados começou em 2006, contudo descartamos a tabela do primeiro ano, visto que ela gerava dados que estavam fora do padrão dos outros anos, provavelmente por algum motivo de diferença de código das colunas ou ordem dos valores. Os dados originais, somando as tabelas de 2007 até 2019, contabilizaram 128.931.758 células de resposta, e após a limpeza e seleção das colunas conseguimos diminuir para 15.546.620 células.\nO Vigitel conta com um dicionário contendo a descrição de cada nome-código de coluna e o tipo do dado armazenado. Como exemplo, veja a figura abaixo sobre como a diabetes aparece nesse dicionário:\n\nUma dificuldade grande que tivemos com a leitura das tabelas é que existem muitas colunas que não estão descritas nesse dicionário. Portanto, podemos ter potencialmente perdido colunas que seriam importantes para uma visualização melhor dos dados e, consequentemente, de gráficos mais significativos. Algumas das tabelas só existiram por um período, como as tabelas que forneciam informações sobre a pessoas que comem doce, ou também a tabela sobre quem recebia bolsa família, que só começou a existir a partir de 2015.\nResultados e Discussão\nOs dados do VIGITEL amostram o estudo em 26 capitais brasileiras e o Distrito Federal.\n\nObserva-se um aumento da prevalência na população estudada ao longo dos último 13 anos.\n\nA média da idade de início da diabetes aumentou 3 anos desde 2015. Isso pode ser um sinal de que a população está melhorando seus hábitos, visto que elas estão tendo diabetes em um período mais tardio. Após a visualização dos dados essa pesquisa pôde concluir que a população das capitais estão diminuindo o consumo de refrigerantes de forma significativa. Não foi encontrado nenhuma pesquisa que fizesse essa relação durante os anos com a população adulta brasileira.\n\nPode-se observar a partir dos gráficos com dados de nível de escolaridade, que a prevalência de diabetes e o nível de escolaridade são inversamente proporcionais, ou seja, quanto maior o nível de instrução menor é a prevalência de diabetes, na literatura já foi estudado este componente socioeconômico em uma unidade básica de saúde em Ribeirão Preto (SP) (Rodrigues, 2012), em que portadores de diabetes mellitus tipo 2 apresentavam em média 4,54 anos de estudo.\n\nOutro fato interessante de ser observado é o aumento da prevalência de diabetes mellitus ao longo dos anos, de 2007 a 2019, em todos níveis de instrução, porém há um aumento mais acentuado nos níveis de instrução mais baixos,  isso pode ser visto no grupo de indivíduos que nunca estudou em que o aumento foi de 8% e no grupo com ensino fundamental incompleto que foi de 9%, ao passo que no grupo que possuía ensino superior completo ou pós graduação esse aumento foi de apenas 4% para cada um. Além disso, analisando intragrupo, isto é, somente dentro de um grupo de nível de escolaridade, a prevalência de diabetes é maior entre os que nunca estudaram e  também no fundamental incompleto, comparado aos demais.\n\nSobre o programa bolsa família (PBF), pode-se observar no gráfico que a prevalência de diabetes caiu neste grupo, isto pode estar associado às condicionalidades do programa em que o acesso a saúde e educação são condições para o recebimento do benefício (Brasil, 2004), mas é importante ressaltar que o decréscimo foi de 1% então há necessidade de mais estudos nesta área para afirmar se há relação entre bolsa família e diabetes.\n\nA partir da análise do gráfico de prevalência do diabetes por gênero, foi possível concluir que o perfil predominante foi o do sexo feminino e através da literatura (Busnelo, 2020) também foi constatado que a maioria dessa população pertence ao sexo feminino, o que pode ter sido contribuído pelo fato de que as mulheres procuram com mais frequência os serviços de saúde e também devido às alterações hormonais, visto que a idade de início é aproximado à idade da menopausa, foi relacionado a hipertensão como doença concomitante e ao nível de escolaridade no qual a maioria não concluiu o ensino médio; vale ressaltar que esse estudo citado foi realizado em uma amostra de 222 pessoas, em uma cidade do interior do estado do Rio Grande do Sul, o que também limita a generalização dos resultados.\n\nConsumo de refrigerante também houve uma mudança; em 2007 68% da população sem diabetes tomavam refrigerante por pelo menos três dias na semana, e em 2019 isso caiu para 47%, uma diminuição de 21% em 13 anos. Para a população com diabetes a porcentagem era de 27% e caiu para 11% em 2019. Isso pode significar que o consumo de refrigerante não está altamente ligado a prevalência de diabetes, mas é necessário pesquisas mais aprofundadas sobre os dados para uma conclusão.\n\n\nConclusões\nOs resultados da visualização das tabelas da Vigitel mostram um aumento da prevalência de diabetes nas capitais, com tendência a continuar subindo nos próximos anos. Ligando grau de escolaridade, houve uma alta considerativa de pessoas que nunca estudaram, que possuem fundamental incompleto e fundamental completo. Contudo, nos últimos dois anos essa prevalência vem diminuindo para os que nunca estudaram ou possuem fundamental incompleto e aumentando para pessoas com ensino médio completo e fundamental completo. Pessoas que fazem exercício físico por pelo menos três vezes na semana tiveram uma redução. Tiveram também uma redução na população que consome refrigerante.\nNo entanto, é necessário fazer uma visualização mais aprofundada desses dados, usando a ponderação pelo método rake para que possamos chegar em uma visualizações mais significativas e consistente dos dados.\nTrabalhos Futuros\nEste trabalho demonstrou o quão importante é entender a base de dados e saber quais gráficos e tabelas melhor representam o resultado de uma análise. No caso do VIGITEL, por ser em formato de pesquisa (Survey) encontramos a dificuldade de se utilizar o peso rake, conforme citado na página do VIGITEL. Portanto, como trabalhos futuros precisamos aprofundar a programação para que leve em consideração esta ponderação nos dados, além de procurar outras bases de dados brasileiras referentes à incidência e prevalência de diabetes, fazendo interligações mais profundas com outros dados, tais como os hábitos alimentares completos.\nReferência\n\nBRASIL. Lei n. 10.836. Cria o Programa Bolsa Família e dá outras providências. 9 jan. 2004 a.\n\n\nBRASIL. Ministério da Saúde. Vigitel Brasil 2019: vigilância de fatores de risco e proteção para doenças crônicas por inquérito telefônico. Brasília, DF: Ministério da Saúde, 2020. p. 14.\n\n\nBUSNELO, E. D. S. et al. Perfil epidemiológico de pessoas com diabetes mellitus atendidas nas estratégias saúde da família. Revista de Enfermagem e Atenção à Saúde, v. 8, n. 2, 2020.\n\n\nDiabetes overview. Disponível em https://www.who.int/health-topics/diabetes#tab=tab_1. Acesso em: 01 jul. 2020.\n\n\nFIGUEIREDO, Danielly Mesquita; RABELO, Flávia Lúcia Abreu. Diabetes insipidus: principais aspectos e análise comparativa com diabetes mellitus. Semina: Ciências Biológicas e da Saúde, v. 30, n. 2, p. 155-162, 2009.\n\n\nMARASCHIN, Jorge de Faria et al. Classificação do diabete melito. Arq. Bras. Cardiol.,  São Paulo ,  v. 95, n. 2, p. 40-46,  Aug.  2010 .\n\n\nRODRIGUES, Flávia Fernanda Luchetti et al . Relação entre conhecimento, atitude, escolaridade e tempo de doença em indivíduos com diabetes mellitus. Acta paul. enferm.,  São Paulo ,  v. 25, n. 2, p. 284-290,    2012 .\n\nEstrutura de Arquivos e Pastas\n├── README.md          <- apresentação do projeto e estrutura das pastas\n│\n├── data\n│   ├── external       <- dados de terceiros (não utilizado)\n│   ├── interim        <- dados intermediários (não utilizado)\n│   ├── processed      <- dados finais usados para a modelagem\n│   └── raw            <- dados originais sem modificações\n│\n├── docs               <- Padrão do Sphinx (python documentation generator)\n│\n├── notebooks          <- Jupyter notebooks criados\n│\n├── references         <- Documentos de referência para esse estudo\n│\n└── reports            <- ppt do projeto\n    ├── figures        <- imagens geradas\n    └── videos         <- vídeo de introdução\n\n'], 'url_profile': 'https://github.com/ajjaum', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'London, UK', 'stats_list': [['1', '          follower'], ['6', '          following'], ['6']], 'contributions': '135 contributions\n        in the last year', 'description': ['Diabetes\n'], 'url_profile': 'https://github.com/ArmanHussainDS', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Edison, New Jersey', 'stats_list': [['4', '          followers'], ['5', '          following'], ['0']], 'contributions': '179 contributions\n        in the last year', 'description': [""DiabetesDetection\nThis is an application used to detect whether a user has diabetes given certain parameters and locate the nearest doctor.\nFeatures\n\nPredicts Whether User May Have Diabetes: Uses a custom machine learning model which has been trained by using over 10000 data points of users with diabetes and their pre-exisitng conditions. This machine learning model has been trained to an accuracy of 99.6% on microsoft azure's machine learning service.\nRecomends Nearest Docter: Using Google Maps API and Better Doctors API, this application recommends the highest rated doctors within the span of 20 miles of your current locaitonl\n\nTech Stack\n\nApp Development: Xamerin C#\nLocation and Maps: Google Maps API\nDiabetic Detection ML model: Azure Machine Learning Service\n\n""], 'url_profile': 'https://github.com/jeevanantham2002', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Dhaka, Bangladesh', 'stats_list': [['14', '          followers'], ['43', '          following'], ['28']], 'contributions': '36 contributions\n        in the last year', 'description': ['Diabetes predictions application in Python\nThis application is made using sklearn machine learning libraries and pyqt5 for its graphical user interface.\nSupport Vector Machine classifies input data with a 80% accuracy. We have choosen the PIMA indians diabetes dataset from UCI archive.\n\nUSAGE\nFirstly install all dependencies via the following command.\npip3 install -r requirements.txt\nNow train the application in you pc as\npython3 diabetes.py\nFinally run the application :\npython3 gui.py\nNow insert all the requires details.\n'], 'url_profile': 'https://github.com/razuswe', 'info_list': ['3', 'HTML', 'MIT license', 'Updated Nov 22, 2020', '8', 'TypeScript', 'MIT license', 'Updated Feb 16, 2021', 'Updated Jul 1, 2020', 'CSS', 'Updated Jun 29, 2020', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'Updated Aug 12, 2020', 'C#', 'Updated Aug 29, 2020', 'Python', 'Updated Jul 2, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '67 contributions\n        in the last year', 'description': [""Diabetes Free\nA machine learning ensemble model that predicts whether a patient has diabetes or not. Google Collaboratory was used to easily organize the code and data visualization.\nLibraries used:\nData preprocessing and visualization:\n\npandas, numpy, matplotlib and seaborn\n\nModel developement:\n\nsklearn and xgboost.\n\nThe ensemble is composed of 3 models:\n\nDeep Neural Network (MLPClassifier from sklearn.neural_network)\nRandom Forests (RandomForestClassifier from sklearn.ensemble)\nXGBoost (XGBClassifier from xgboost)\n\nEach model's hyperparameters are individually fine-tuned by performing GridSearchCV (from sklearn.model_selection) and then the ensemble is built with VotingClassifier from sklearn.ensemble.\nThere is a detailed description of the dataset and it's features in the Google Collaboratory notebook.\nAcknowledgements:\n\n\nSmith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988). Using the ADAP learning algorithm to forecast the onset of diabetes mellitus.   In Proceedings of the Symposium on Computer Applications and Medical Care (pp. 261--265). IEEE Computer Society Press.\n\n\nTensorflow 2.0 Practical: https://www.udemy.com/course/tensorflow-2-practical\n\n\nKaggle: https://www.kaggle.com/kumargh/pimaindiansdiabetescsv\n\n\n""], 'url_profile': 'https://github.com/giuliano-barrella', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '52 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Tesmic', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'Grand Rapids, Michigan', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MrudulaGithub', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '49 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/tracythun', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'Noida', 'stats_list': [['3', '          followers'], ['12', '          following'], ['3']], 'contributions': '126 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Prediction Analysis from Kaggle.\nhttps://www.kaggle.com/johndasilva/diabetes\nThis Repository includes all the details of modeling and its implementation in Flask.\nI have done a detailed explanation in the links below:\nhttps://medium.com/@banerjee.devleena/diabetes-prediction-analysis-in-python-and-its-implementation-in-flask-part-1-78dde25e154\nhttps://medium.com/@banerjee.devleena/diabetes-prediction-analysis-in-python-and-its-implementation-in-flask-part-2-62c95a940813?source=your_stories_page\n'], 'url_profile': 'https://github.com/DevleenaBanerjee', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/DudeInTheWood', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['dms-practice\nDiabetes Management Solution practice project\nDMS Installation Prerequisites\n\nInstalling Docker\n\nRunning Docker Authorization server on local machine\nExecute docker command docker run -p 8083:8083 mgharib/keycloack-auth-server to run Authorization server on port 8083. Once it is up, you should be able to access it via http://localhost:8083/auth/\nconfiguring OpenEMR with HAPI FHIR on local machine\n\nClone current repo\nNavigate with CMD into openemr-compose\nExecute docker-compose -f openemr-compose.yml up -d\nWhen all containers are started, you can access to:\n\nThe FHIR server http://localhost:8080/home\nThe OpenEMR server: http://localhost:80/\nThe MySql database: http://localhost:3306\nLogin into OpenEMR\n\nUsername: admin\nPassword: pass\n\n\nLogin for SQL\n\nUsername: openEMR\nPassword: openEMR\n\n\n\n\nFollow steps in below article to configure OpenEMR to be able to export to the FHIR server\n\nhttps://medium.com/@ben.che/openemr-fhir-how-to-setup-your-instance-dd646b0daec3\n\n\n\nAdditional Set up for MySQL and Adding Data to MySql\n\nEither add Patients manually using OpenEMR OR run the Database populator program in the Setup Tools Folder\nFollow the Document on the Teams Wiki to set up Procedures\n\nBlood Glocuse\'s discrete result Code needs to be \'2339-0\'\nA1C\'s discrete result Code needs to be \'41995-2\'\nCheck the Mapping document on the wiki for any other codes that my have been added\n\n\nUsing a SQL Program like MySql WorkBench or DBeavers, Run the SQL scripts in the Folder: ""\\dms-practice\\Setup Tools\\Required Stored Procedures for MySQL""\n\nRunning Spring Authorization server on local machine\n\nClone current repo\nOpen with prefered Java IDE\nuse the following commands inside the terminal\n\nmvn clean\nmvn install\nmvn spring-boot:run\n\n\nOnce running, visit http://localhost:8083/auth/\n\nlogin: emr-admin\npassword: pass\n\n\n\nRunning HDI-HUB server on local machine and testing with PMS\n\nClone current repo\nRunning HDI-HUB lcoally (port 8080)\n\nmvn clean\nmvn install\nmvn jetty:run\n\n\nRunning HDI-HUB on Docker (assign port)\n\nInside project ide terminal execute mvn package to generate war file\nInside HDI-HUB directory using Powershell/Terminal\n\nInstall Docker Jetty using docker run -d jetty\nExecute docker build -t fhir/hapiserver .\nExecute docker run -p 8090:8080 fhir/hapiserver\n\nruns fhir server on port 8090\n-Running PMS to test HDI-HUB\n\n\n\n\n\n\nRun Spring Authorization Server (docker works fine)\nuse the following commands inside the ide terminal\n\nmvn clean\nmvn install\nmvn spring-boot:run\n\n\nOnce running, PMS will post patient and organization information to HDI-HUB server every 5 seconds\nEnter CTRL+C to terminate once enoough patient information is populated\n\nRunning DMS UI on local machine and starting development\n\nMake sure you have the latest image of authorization server docker image pull mgharib/keycloack-auth-server\nRun the authorization server docker run -p 8083:8083 mgharib/keycloack-auth-server\nMake sure to bring up database-api service on local machine (refer to \'Running Database-api on local machine\' given in the last section of this file)\nNavigate with CMD into dms-ui\nInstall dependencies npm install\nRun the server npm run start\nYou should be able to access the ui through http://localhost:4200\nYou can login using john@test.com/123\n\nOpenEMR- Local Development using Docker.\n\nInstallation of docker and pull mariadb and mysql.\nPull the latest image of openemr using docker pull openemr/openemr.\nFrom command line Run docker-compose up\nAccess http://localhost:8300/ to login as admin. Password is pass.\nMore details at https://hub.docker.com/r/openemr/openemr/.\n\nRunning Database-api on local machine\n\nClone current repo\nRun locally (port 15437 is defualt)\n\nmvn clean install\nspring-boot:run\n\n\nOnce the Service is running you can hit it using Postman or similar program to send REST requests\n\nSample requests and URLs to hit are in the folder \'Database-API\\Sample API Calls\'\n\n\n\n'], 'url_profile': 'https://github.com/g2o-HDI', 'info_list': ['Jupyter Notebook', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Jul 8, 2020', 'Python', 'Updated Jul 7, 2020', 'Python', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 22, 2020', 'Jupyter Notebook', 'Updated Jul 6, 2020', 'Jupyter Notebook', 'Updated Aug 21, 2020', 'Kotlin', 'Updated Oct 26, 2020', '1', 'Java', 'Updated Nov 3, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '7 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/DishaUmat', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'Stockholm, Sweden ', 'stats_list': [['4', '          followers'], ['5', '          following'], ['0']], 'contributions': '11 contributions\n        in the last year', 'description': ['\n\n\npage_type\nlanguages\nproducts\ndescription\n\n\n\n\nsample\n\n\n\npython\n\n\n\n\n\n\n\nazure\nazure-machine-learning-service\nazure-devops\n\n\n\n\nCode which demonstrates how to set up and operationalize an MLOps flow leveraging Azure Machine Learning and Azure DevOps.\n\n\n\nMLOps with Azure ML\n\nMLOps will help you to understand how to build a Continuous Integration and Continuous Delivery pipeline for an ML/AI project. We will be using the Azure DevOps Project for build and release/deployment pipelines along with Azure ML services for model retraining pipeline, model management and operationalization.\n\nThis template contains code and pipeline definitions for a machine learning project that demonstrates how to automate an end to end ML/AI workflow.\nArchitecture and Features\nArchitecture Reference: Machine learning operationalization (MLOps) for Python models using Azure Machine Learning\nThis reference architecture shows how to implement continuous integration (CI), continuous delivery (CD), and retraining pipeline for an AI application using Azure DevOps and Azure Machine Learning. The solution is built on the scikit-learn diabetes dataset but can be easily adapted for any AI scenario and other popular build systems such as Jenkins and Travis.\nThe build pipelines include DevOps tasks for data sanity tests, unit tests, model training on different compute targets, model version management, model evaluation/model selection, model deployment as realtime web service, staged deployment to QA/prod and integration testing.\nPrerequisite\n\nActive Azure subscription\nAt least contributor access to Azure subscription\n\nGetting Started\nTo deploy this solution in your subscription, follow the manual instructions in the getting started doc. Then optionally follow the guide for integrating your own code with this repository template.\nRepo Details\nYou can find the details of the code and scripts in the repository here\nReferences\n\nAzure Machine Learning (Azure ML) Service Workspace\nAzure ML CLI\nAzure ML Samples\nAzure ML Python SDK Quickstart\nAzure DevOps\n\nContributing\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\n'], 'url_profile': 'https://github.com/eriknorlander', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['Diabetes-classification\n'], 'url_profile': 'https://github.com/AmmarKhot', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['0', '          following'], ['5']], 'contributions': '52 contributions\n        in the last year', 'description': ['Diabetes Classification\n'], 'url_profile': 'https://github.com/generic-matrix', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'Antalya, Turkey', 'stats_list': [['51', '          followers'], ['81', '          following'], ['95']], 'contributions': '495 contributions\n        in the last year', 'description': ['Welcome!\nI developed a machine learning projects that predict diabetes using health data from people who have lived in Pima Arizona. I used the Random Forest Classification method in this project\nOne of the most important issues here is that all our patients are at least 21 years old to prevent diabetes that will occur at a young age.\nI shared the data set with the code. You can use it as you wish.\nAttributes (columns):\n\nPregnancies:  Number of times pregnant\nGlucose:  Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBloodPressure:  Diastolic blood pressure (mm Hg)\nSkinThickness:  Triceps skin fold thickness (mm)\nInsulin:  2-Hour serum insulin (mu U/ml)\nBMI  Body mass index (weight in kg/(height in m)^2)\nDiabetesPedigreeFunction:  Diabetes pedigree function\nAge:  Age (years)\nOutcome:  Class variable (0 or 1)\n\nThe target label indicates whether the patient has been diagnosed with diabetes (1) or not (0).\n'], 'url_profile': 'https://github.com/olcaneristi', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'Hyderabad', 'stats_list': [['2', '          followers'], ['3', '          following'], ['0']], 'contributions': '641 contributions\n        in the last year', 'description': [""Diabetes Prediction - Deployment\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• If you want to view the deployed model, click on the following link:\nDeployed at: https://taher-predicting-diabetes.herokuapp.com\n• If you are searching for Code, Algorithms used and Accuracy of the model.. you won't find it here. Click the link mentioned below for the same:\nLink: https://github.com/taherkayamkhani/AI-ML-projects/tree/master/Machine%20Learning%20Projects/Diabetes%20Prediction\n• Please do ⭐ the repository, if it helped you in anyway.\n• A glimpse of the web app:\n\n""], 'url_profile': 'https://github.com/taherkayamkhani', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'Dallas', 'stats_list': [['0', '          followers'], ['3', '          following'], ['14']], 'contributions': '60 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nPredicting whether a patient is diabetic or not based on the few attributes of patient. Predictions are performed using Supervised Machine Learning Techniques.\nAttributes of Patient considered for analysis:\nA: Number of pregnancies\nB: Concentration of plasma glucose in a 2-hour oral glucose tolerance test\nC: Diastolic blood pressure - Measured in mmHg\nD: Triceps skin fold thickness - Measured in mm\nE: Insulin concentration in the serum in 2 hours. Measured in (mu U/ml)\nF: Weight in kg/height in (m^2)\nG: Function that assigns the probability of someone getting diabetes\nH: Age\nTarget: Value of 0 or 1 corresponds to no diabetes and diabetes\nData Cleaning:\n\nvalues of attributes D,E,F are missing.\nalmost 50% of E column data is missing, so the row is removed for analysis.\nthe missing rows of D are replaced by the mean and of E by median(depending on the skewnwss of the data).\nthe outliers were removed based on the attribute and their relevance.(like blood pressure can never be equal to zero)\n\nModel building:\n\nKNN regression\nLogistic regression\nKerenilzed Support Vector Machine (rbf, poly, and linear)\nDecision Tree Model\n\nPrediction:\nFrom the above models, based on train and test scores Logistic regression was apt for making predictions on the test dataset.\n'], 'url_profile': 'https://github.com/sriramkreddy10', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '24 contributions\n        in the last year', 'description': ['Diabetes-Prediction\npredicts the chance of  getting the  Diabetes\n'], 'url_profile': 'https://github.com/Bhuvi520', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Kuchhal', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['8', '          following'], ['0']], 'contributions': '38 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vyshnavikatikala', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Python', 'MIT license', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jul 4, 2020', '1', 'Python', 'MIT license', 'Updated Oct 20, 2020', 'HTML', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Sep 4, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['1']], 'contributions': '24 contributions\n        in the last year', 'description': ['Diabetes-Prediction\npredicts the chance of  getting the  Diabetes\n'], 'url_profile': 'https://github.com/Bhuvi520', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Kuchhal', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['8', '          following'], ['0']], 'contributions': '38 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vyshnavikatikala', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'MUMBAI', 'stats_list': [['0', '          followers'], ['3', '          following'], ['6']], 'contributions': '45 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Prediction model built using Random Forest Classifier algorithm in Machine Learning.\n'], 'url_profile': 'https://github.com/abhiwaghmare', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'kurnool', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '14 contributions\n        in the last year', 'description': ['diabetes prediction\nit is used to predict whether the person has daibetes or not\n'], 'url_profile': 'https://github.com/Madhu25-swamy', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '8 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/zyilin8', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'San Francisco', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '64 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nThis is created to leverage various ML classification algorithms to predict whether a person has diabetes given several attributes such as weight, age, BMI and more.\nAuto ML is also explored to compare the model performances.\n'], 'url_profile': 'https://github.com/jx-mike', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '44 contributions\n        in the last year', 'description': ['""# diabetesprediction-flask""\n'], 'url_profile': 'https://github.com/MDPuneethReddy', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '17 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Firtoshkr', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['0', '          following'], ['4']], 'contributions': '255 contributions\n        in the last year', 'description': [""Diabetes Prediction\nDiabetes Prediction App\nA Machine Learning based project deployed on Heroku and developed with Python and streamlit library. Supervised Machine Learning Classification problem, solved using Ensemble Learning technique. Algorithms used here are Logistic Regresssion and Random Forest Classification with a model test accuracy of more than 94%\nEnsemble Learning\nAn ensemble-based system is obtained by combining diverse models (mainly classifiers). Therefore, such systems are also known as multiple classifier systems, or just ensemble systems. There are several scenarios where using an ensemble based system makes statistical sense. We use such an approach routinely in our daily lives by asking the opinions of several experts before making a decision. For example, we typically ask the opinions of several doctors before agreeing to a medical procedure, we read user reviews before purchasing an item , we evaluate future employees by checking their references, etc. In each case, a final decision is made by combining the individual decisions of several experts. In doing so, the primary goal is to minimize the unfortunate selection of an unnecessary medical procedure, a poor product, an unqualified employee or even a poorly written and misguiding article.\nSame is the case with Machine Learning models. One model may fail learn some records and other models may find it easy to learn. So in many cases Ensemble Learning can be a better option.\nLogistic Regression\nLogistic Regression is a Classification problem based on Supervised Machine Learning. Logistic regression models the probabilities for classification problems with two possible outcomes. It's an extension of the linear regression model for classification problems. The problem for Linear Regression in classification is that it predicts a range of values or continuous values, like as price prediction. But in classification only binary values are used that is either cat or dog, either suffering from diabetes or not. For this, in Logistic Regression we apply a sigmoid function. logistic(η) = 1 / 1+exp(−η)\nThis sigmoid function converts all values from - infinity to infinity in range 0 to 1. Then a threshold values is applied and values are compressed to binary format.\nRandom Forest\nRandom forests is a supervised learning algorithm. It can be used both for classification and regression. It is also the most flexible and easy to use algorithm. A forest is comprised of trees. It technically is an ensemble method of decision trees generated on a randomly split dataset. This collection of decision tree classifiers is also known as the forest. The individual decision trees are generated using an attribute selection indicator such as information gain, gain ratio, and Gini index for each attribute. Each tree depends on an independent random sample. In a classification problem, each tree votes and the most popular class is chosen as the final result. In the case of regression, the average of all the tree outputs is considered as the final result. It is simpler and more powerful compared to the other non-linear classification algorithms.\nPrediction\n\n\n\nNot Diabetic\nDiabetic\n\n\n\n\n\n\n\n\n\n""], 'url_profile': 'https://github.com/koshalnirwan', 'info_list': ['Jupyter Notebook', 'Updated Jun 29, 2020', 'Python', 'Updated Jun 30, 2020', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jun 29, 2020', 'Updated Jul 7, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Jun 30, 2020', 'HTML', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', 'Python', 'Updated Aug 25, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '41 contributions\n        in the last year', 'description': ['-Diabetes-Classification\nBuild a classifier using Logistic Regression which can classify if a person is diabetic or not, based on some features. Performed exploratory data analysis on health to gain the domain knowledge and built a binary classifier. Tech Stack :- Python, ML (Logistic Regression)\n'], 'url_profile': 'https://github.com/Anupama2330', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '52 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nPredicts whether a person has diabetes or not. Trained on the PIMA Indian Diabetes Dataset.\n'], 'url_profile': 'https://github.com/Harsh-Naicker', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '33 contributions\n        in the last year', 'description': ['diabetes_model\nIn this repo, step by step modelling process of Pima Indians Diabetes Database from www.kaggle.com in order to predict diabetes patient using ML/DL models is described.\nThe notebook discusses following steps in detail\n\nImporting Libraries.\nImporting Data.\nData Exploration illustrating test of imbalance in data,Correlation in data, exploration by violin plot, swarmplot.\nData Pre-processing & Feature Engineering.\nModel Selection illustrating k-fold cross validation and grid search method.\nArtificial Neural Network Modeling.\nSaving model and prediction using saved model.\nIt is found that, SVC algorithm performs better with the an accuracy of 80.05%\n\n'], 'url_profile': 'https://github.com/muralimambekar', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '26 contributions\n        in the last year', 'description': ['Project Topic :Diabetes Prediction\nReference : DLithe\nWebsite : www.dlithe.com\nProject done under the guidance of : DLithe\nDone by: Bhumika B\nUsn:4NM18CS038\nThe goal of the project is to see how accurately we can predict whether a given patient has diabetes or not. The dataset consists of some medical distinct variables, such as pregnancy record, BMI, insulin level, age, glucose concentration, diastolic blood pressure, triceps skin fold thickness, diabetes pedigree function etc. This dataset has 768 patient’s data where all the patients are female and at least 21 years old. The number of true cases are 268 (34.90%) and the number of false cases are 500 (65.10%), respectively, in the dataset. I used the classification technique Support Vector Machine (SVM)\n'], 'url_profile': 'https://github.com/BhumikaBekal', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Costa Rica', 'stats_list': [['2', '          followers'], ['2', '          following'], ['12']], 'contributions': '1,032 contributions\n        in the last year', 'description': ['keras-machine-learning-diabetes\n'], 'url_profile': 'https://github.com/brayanarrieta', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'Pune', 'stats_list': [['1', '          follower'], ['1', '          following'], ['7']], 'contributions': '735 contributions\n        in the last year', 'description': ['Diabetes Prediction - Deployment\n  \n• This repository consists of files required to deploy a Machine Learning Web App created with Flask on Heroku platform.\n• Please do ⭐ the repository, if it helped you in anyway.\n'], 'url_profile': 'https://github.com/Gladiator07', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '10 contributions\n        in the last year', 'description': ['diabetes_pred_app\n'], 'url_profile': 'https://github.com/venkatesh-akhouri', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['9', '          followers'], ['9', '          following'], ['1']], 'contributions': '39 contributions\n        in the last year', 'description': ['Prediction-Of-Diabetes\nThis machine learning model predicts whether a person is diabetic or not based on the features provided in the dataset.\nThe dataset used in this model is of PIMA.\nIt implements Random Forest Classifier algorithm.\nAnd further implements Hyperparameters optimization technique also.\nThe model has been deployed on a streamlit app.\n\n'], 'url_profile': 'https://github.com/jam-abhyansh06', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['24']], 'contributions': '81 contributions\n        in the last year', 'description': ['Diabetes-Patients-Readmission\nUse XGBoost and GBM to predict diabetes patients readmission\n'], 'url_profile': 'https://github.com/Tim-101', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}","{'location': 'solapur', 'stats_list': [['0', '          followers'], ['0', '          following'], ['3']], 'contributions': '69 contributions\n        in the last year', 'description': ['IOT_Project\nNon Invasive Diabetes detection and Diet Suggestion\n'], 'url_profile': 'https://github.com/shindesunil851', 'info_list': ['Jupyter Notebook', 'Updated Jul 5, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 12, 2020', 'Jupyter Notebook', 'Updated Jul 16, 2020', 'Python', 'Updated Jul 5, 2020', 'HTML', 'Updated Aug 13, 2020', 'HTML', 'Updated Jul 10, 2020', 'Jupyter Notebook', 'Updated Aug 6, 2020', 'R', 'Updated Jul 5, 2020', '1', 'Python', 'Updated Jul 2, 2020']}"
"{'location': 'Waterloo Canada', 'stats_list': [['1', '          follower'], ['2', '          following'], ['1']], 'contributions': '45 contributions\n        in the last year', 'description': ['Pima-indians-diabetes-project\nCreated a machine learning project on R which uses random forest to predict the if the test population of pima indians data set has diabetes also used repeatedCV and confusion matrix to check my outcomes\n'], 'url_profile': 'https://github.com/speedoduel', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'Singapore', 'stats_list': [['0', '          followers'], ['1', '          following'], ['8']], 'contributions': '194 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/HengTat', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '4 contributions\n        in the last year', 'description': ['Hospital-Readmission\nThe project is based on diabetes patient.\n'], 'url_profile': 'https://github.com/hari4231', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['Diabetes_Risk_Scoring\n'], 'url_profile': 'https://github.com/AmrutaInc', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'Cardiff, United Kingdom', 'stats_list': [['10', '          followers'], ['38', '          following'], ['68']], 'contributions': '66 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sethupavan12', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'Bangalore', 'stats_list': [], 'contributions': '32 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/gouherdanish', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'İstanbul', 'stats_list': [['6', '          followers'], ['8', '          following'], ['19']], 'contributions': '8 contributions\n        in the last year', 'description': [""Diabetes-Patient-Prediction\nAn algorithm needs to go through training-test steps for predictions, such as making numerical estimates and predicting class. In this context, data mining algorithms are evaluated in two categories: Supervised and Unsupervised. Supervised learning algorithms were used in the final project because i have the labeled value in the dataset. Providing information to the system is mentioned in case of supervised learning. It is to observe the system and determine which classes and quantities. Algorithms such as regression and classification are covered in this group. As a result of these operations, the model obtained is used to make predictions for test data and new data. In order for us to use algorithms based on supervised learning in the project, the data set must be suitable for it so must have labeled. that is, the patient / not patient. In order for us to use algorithms based on supervised learning in the project, the data set must be suitable for it. Must have tagged values. that is, the patient / not patient. That's why i downloaded the diabetes data set from kaggle. our goal is to educate this data set to predict whether people are sick and how much i have been able to predict correctly. I will allocate 20% of the data set for the test and then estimate the percentage of success in the data set which is trained. I used classification. KNN, decision tree, Logistic regression and random forest were used for classification. You can reach Diabetes Dataset from link. https://www.kaggle.com/johndasilva/diabetes\n""], 'url_profile': 'https://github.com/omerfarukfildisi', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'Srinagar', 'stats_list': [['1', '          follower'], ['1', '          following'], ['1']], 'contributions': '56 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Tabinda788', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'Bhopal, Madhya Pradesh, India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '338 contributions\n        in the last year', 'description': ['Diabetes Predictor - Deployment\nThis repository consists of files required to deploy a Machine Learning Web App created with Streamlit on Heroku platform.\n\n\nIf you want to view the deployed model, click on the following link : https://diabetes-predictor-streamlit.herokuapp.com/\n\n\nIf you are searching for Code, Algorithms used and Accuracy of the model, click on the following link: https://github.com/kapilthakre/Diabetes-Prediction\n\n\n'], 'url_profile': 'https://github.com/kapilthakre', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}","{'location': 'La Paz, Bolivia', 'stats_list': [['6', '          followers'], ['5', '          following'], ['61']], 'contributions': '21 contributions\n        in the last year', 'description': ['Kotlin-TabLayout\nTabLayout Using Kotlin in Android Studio\n'], 'url_profile': 'https://github.com/ZLTM', 'info_list': ['HTML', 'Updated Jun 30, 2020', '1', 'Jupyter Notebook', 'Updated Jul 6, 2020', '1', 'Updated Jul 4, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', '1', 'Jupyter Notebook', 'Updated Jul 2, 2020', 'Updated Jul 3, 2020', 'Jupyter Notebook', 'Updated Jul 11, 2020', 'Python', 'Updated Oct 18, 2020', '1', 'Python', 'Updated Aug 15, 2020', 'Kotlin', 'Updated Jul 8, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '4 contributions\n        in the last year', 'description': ['hospital-Readmission\nproject is based on diabetes patient\n'], 'url_profile': 'https://github.com/laxmipavan987', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '7 contributions\n        in the last year', 'description': ['Diabetes-Prediction-in-PIMA-Indians\n'], 'url_profile': 'https://github.com/unnatygandhi2196', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '65 contributions\n        in the last year', 'description': ['Diabetes_Classification-using-KNN-algorithm\nThe repository contains the dataset and the two jupyter notebook codes(one was coded using sklearn and another one without using sklearn library.)\n'], 'url_profile': 'https://github.com/SanjulaMathur', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'Bihar, India', 'stats_list': [['2', '          followers'], ['4', '          following'], ['30']], 'contributions': '420 contributions\n        in the last year', 'description': [""Flask Implementation:\nInstall the requirements.txt file using : \n pip install -r requirements.txt --no-index --find-links file:///tmp/packages \nRun the pred.py file using: \n python pred.py \nNote: Remove the following part from pred.py if you don't want to run in Debug Mode:\n if name == 'main':  \n    app.run(debug=True) \n If you want to train on any other ML Model, simply train on the dataset and use it's pickle file in pred.py file. \n Note: The requirements file is generated using: \npip3 freeze > requirements.txt\nSo it's possible you might be seeing a lot of unnecessary modules for your work, feel free to edit as per your requirements! :)\nDescription:\nNotebook2 contains the final project.\nI used the Pima Indians onset of diabetes dataset.\nThis is a standard machine learning dataset from the UCI Machine Learning repository.\nIt describes patient medical record data for Pima Indians and whether they had an onset of diabetes within five years.\nAs such, it is a binary classification problem (onset of diabetes as 1 or not as 0).\nAll of the input variables that describe each patient are numerical.\nI've added the dataset csv file as well as data description file too.\nInput variables I used and their respective column names are:\n\nNumber of times pregnant : times_pregnant\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test : plasma_glucose_conc\nDiastolic blood pressure (mm Hg) : diastolic_bp\nTriceps skin fold thickness (mm) : triceps_skin_fold_thickness\n2-Hour serum insulin (mu U/ml) : insulin\nBody mass index (weight in kg/(height in m)^2) : bmi\nDiabetes pedigree function : diabetes_pedigree_function\nAge (years) : age\nClass variable(0 or 1) : target\n\nI used the read_csv method of pandas library to load the dataset, with sep=',' as the delimiter.\nThen I normalized it using StandardScaler() preprocessing.\nAfterward I split the data into X_train, X_test, y_train, y_test respectively, with shapes being,\nTrain set: (460, 8) (460,)\nTest set: (307, 8) (307,)\nModels in Keras are defined as a sequence of layers.\nWe create a Sequential model and add layers.\nrelu activation function is added to the hidden layers, and sigmoid to the last layer, i.e. output layer.\nThen we compile the model.\nWe will use cross entropy as the loss argument.\nThis loss is for a binary classification problems and is defined in Keras as “binary_crossentropy“.\nWe will define the optimizer as the efficient stochastic gradient descent algorithm “adam“.\nThis is a popular version of gradient descent because it automatically tunes itself and gives good results in a wide range of problems.\nFinally, because it is a classification problem, we will collect and report the classification accuracy, defined via the metrics argument.\nI used 200 epochs with a batch_size of 10.\nThen we train the model.\nNow we have trained our neural network on the train set and we can evaluate the performance of the network on the test set.\nThe evaluate() function returns a list with two values.\nThe first will be the loss of the model on the dataset and the second will be the accuracy of the model on the dataset.\nOur model has an accuracy of 90% on train set.\nThe jaccard similarity score of our model on test set is 0.79153 , which is pretty good considering the size of the dataset.\nAlso I've plotted the confusion matrix.\nThe log loss is 0.650223.\nWe are using a sigmoid activation function on the output layer, so the predictions will be a probability in the range between 0 and 1.\nWe call the predict_classes() function on the model to predict crisp classes directly.\nHence, we're able to successfully build and train a 4-layered keras model and successfully do the predictions and fulfill our task.\n""], 'url_profile': 'https://github.com/arjuaman', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['2', '          following'], ['0']], 'contributions': '32 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Using-Classification-Algorithms\nThis project is intended to apply Classification Algorithms of ML for Diabetes Prediction and find the best suited model for the prediction\n'], 'url_profile': 'https://github.com/Yashb17', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '10 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/zahraa97', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['8', '          following'], ['31']], 'contributions': '24 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/MervePoslu', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '5 contributions\n        in the last year', 'description': ['Predicting-Hospital-Readmission-for-Patients-with-Diabeti\nthis is my project based on diabetes patient\n'], 'url_profile': 'https://github.com/maheshjangala6250', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '23 contributions\n        in the last year', 'description': ['HeartML: Machine Learning for Co-Prediction of Heart Disease and Diabetes.\nHeart disease (1st) and Diabetes (7th) are two of the most common causes of death in the United States [1]. Not only does co-incidence of the two disease often lead to medical complications and poor patient outcomes, but also contributes to drastically increased healthcare spending. Using only cardiovascular physiological parameters, we implement and evaluate several machine learning approaches to predict the whether a patient has diabetes and/or heart disease. We find that our KNN classifier achieves 80 percent accuracy, which exceeds both the baseline and physician oracles.\n[Code for SGD Classifier is uploaded, rest is coming soon]. For further details, please see the writeup.\n\n'], 'url_profile': 'https://github.com/santoshmurugan', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}","{'location': 'bangalore', 'stats_list': [['3', '          followers'], ['3', '          following'], ['0']], 'contributions': '87 contributions\n        in the last year', 'description': ['PimaIndiansdata\nAnalysing of the Pima Indians diabetes data and apllying ML algorithms\n'], 'url_profile': 'https://github.com/AkankshaMS', 'info_list': ['Updated Jul 4, 2020', 'R', 'Updated Jul 2, 2020', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jan 11, 2021', 'Jupyter Notebook', 'Updated Jul 14, 2020', 'Jupyter Notebook', 'Updated Jun 30, 2020', '1', 'Updated Jul 1, 2020', 'Updated Jul 4, 2020', '1', 'Jupyter Notebook', 'Updated Jul 1, 2020', 'Jupyter Notebook', 'Updated Jul 2, 2020']}"
"{'location': 'Presidente Prudente - SP - Brasil', 'stats_list': [['6', '          followers'], ['1', '          following'], ['0']], 'contributions': '208 contributions\n        in the last year', 'description': ['\n    DMControl\n\n\n  Diabetes Melittus helper\n\n\nPrototype\nLink to wireframe\n💡\tMain Features\nThis pre-version of the app contain statically the main features:\n\nRegister new Base Meal\nCalculate insulin dosage ( for an inserted meal)\n\n💻 Technologies\nThis project was developed with the following technologies:\n\nExpo\nReact-native\nTypeScript\nstyled-components\nreact-native-vector-icons\nVS Code with EditorConfig, ESLint and Prettier\n\nℹ️ How To Use\nTo clone and run this application, you\'ll need Git, Expo or higher + Yarn v1.19 or higher installed on your computer. From your command line:\n# Clone this repository\n$ git clone https://github.com/BrenoMaia98/DMControl\n\n# Go into the repository\n$ cd DMControl\n\n# Install dependencies\n$ yarn\n\n# Run the app\n$ expo start --web\nWait until expo open a browser tab on your computer, or press ""d"" on command line after start expo.\nFor this app version, it\'s reccommended to execute in expo web browser.\nTo do so, you need to start pressing an web server like the image bellow:\n\nto have a better perspective, it\'s reccomended to view App in Mobile version in your web browser.\n\nmouse right-click\nInspect or inspect elements\ntoggle mobile vision\n\n\n\nMade with ♥ by Breno Maia 👋 Get in touch!\n'], 'url_profile': 'https://github.com/BrenoMaia98', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'PUNJAB,INDIA', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '135 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/gaurisharma360', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'New Delhi', 'stats_list': [['0', '          followers'], ['0', '          following'], ['4']], 'contributions': '30 contributions\n        in the last year', 'description': ['Welcome to GitHub Pages\nYou can use the editor on GitHub to maintain and preview the content for your website in Markdown files.\nWhenever you commit to this repository, GitHub Pages will run Jekyll to rebuild the pages in your site, from the content in your Markdown files.\nMarkdown\nMarkdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for\nSyntax highlighted code block\n\n# Header 1\n## Header 2\n### Header 3\n\n- Bulleted\n- List\n\n1. Numbered\n2. List\n\n**Bold** and _Italic_ and `Code` text\n\n[Link](url) and ![Image](src)\nFor more details see GitHub Flavored Markdown.\nJekyll Themes\nYour Pages site will use the layout and styles from the Jekyll theme you have selected in your repository settings. The name of this theme is saved in the Jekyll _config.yml configuration file.\nSupport or Contact\nHaving trouble with Pages? Check out our documentation or contact support and we’ll help you sort it out.\n'], 'url_profile': 'https://github.com/praveenkumarsingh662', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'Monterrey', 'stats_list': [['14', '          followers'], ['27', '          following'], ['25']], 'contributions': '501 contributions\n        in the last year', 'description': ['On Line perceptron and ROC curves\nImplementation of simple perceptron using on line learning, tested in a Diabetes data set to predict the presence of diabetes given some medical measures, the precition of prediction is compared with other classificators using errors of the prediction and ROC curves criterion for LDA, QDA and Logistic Regression classificators.\n'], 'url_profile': 'https://github.com/Javcm', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/vidagenexketo', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': [""\n\nPredictive Analysis with Health and Wellness Data\nAllegheny College Mozilla Fellows\nDr. Jumadinova and Madelyn Kapfhammer\nTable of Contents\n\n\nAbout Vigor\n\n\nFeatures\n\n\nInstalling Vigor\n\n\nRunning Vigor\n\n\nInformation for Developers\n\n\nTesting\n\nAutomated Testing\nCode Linting\n\n\n\nContributing\n\n\nReading Material\n\nBasics of Fitness Tracking and Wellness Apps\nEthical Implications\n\n\n\nEthical Discussions\n\n\nData and Packages Used\n\nData\nPackages\n\n\n\nContact Us\n\n\nAbout Vigor\nOne in five adults living in the United States use fitness trackers and health-realted apps on a daily basis. With this continuously growing statistic arise ethical concerns of big data collection, and how fitness data can be used. This project will explore and show the impacts of releasing personal data to health and exercise apps. With an artifical intelligence program, students will be able to choose what physical health data is accessible and then see what other medical information can be determined from these small pieces of recorded data. Physical health data will include calorie intake, heart rate, step count, distance walked, minutes of activity, and minutes of rest inlcuding possible other factors. Predicitive analytics will be used in combination with connection to a medical database in the Python programming language for specific medical predictions according to small pieces of information. This tool will allow students to see how health and wellness data can be used, giving them the opportunity to understand and further discuss the ethics of releasing personal information to fitness trackers and health-related applications.\nThe purpose of this tool is to specifically aid students in having complex conversations about data collection and the ethics surrounding it. Specifically, this tool focuses on the impact of releasing personal health and wellness information. Artifical intelligence is a quickly growing field, raising ethical debates daily. In the case of healthcare, AI is beginning to be used for both diagnostics, and personalized medicine. However, with this growing field, arise concerns related to privacy, informed consent, and patient autonomy. This tool will give students insight into how personal health data can, and often is used, allowing them to form opinions about the ethics surrounding this field. In an artifical intelligence course, one of the most important ideas is to integrate the teaching of ethics, and allow students to form their own opinions about the use and growth of AI. This program will aid in incorporating ethics into courses at Allegheny College.\nFeatures\nInstalling Vigor\n1. Clone the Vigor repository onto your machine.\nIn the appropriate directory, clone the repository with git clone and a following web URL or SSH key.\nWith HTTPS:\ngit clone https://github.com/Allegheny-Mozilla-Fellows/predictiveWellness.git\n\nWith SSH Key:\ngit clone git@github.com:Allegheny-Mozilla-Fellows/predictiveWellness.git\n\n2. Install pipenv and dependencies\nThe documentation and instructions on installing pipenv can be found Here.\npipenv allows dependency installation with ease. After cloning the Vigor repository, install all necessary dependencies for the tool with the command:\npipenv install --dev\nRunning Vigor\nVigor is run in a web-based interface aided by Streamlit. For more information on designing web applications with Streamlit, please navigate to their extensive documentation.\nIn the vigor folder of Vigor, run webInterface.py, which will navigate to a web tab with the Vigor application.\ncd src\nstreamlit run web_interface.py\nInformation for Developers\nWhen developing, install the dependencies with pipenv install --dev and run the program of your choice with the command: pipenv run python program_name.py\nYou can add new dependencies to Pipfile manually, ensuring that you place the dependency in the correct section of dependency type.\nTesting\nAutomated Testing\nDevelopers of this program can run the test suite with Pytest with the command:\npipenv run pytest\nCode Linting\nRun pipenv run lint to check the code of this project with linters.\nCurrently Vigor uses the following linters:\n\npylint\nflake8\nblack\npydocstyle\n\nContributing\nWe welcome everyone who is interested in helping improve Vigor! If you are interested in being a contributor, please review our Code of Conduct and Guidelines for Contributors before raising an issue, or beginning a contribution.\nTo raise an issue in Vigor's Issue Tracker please follow these templates:\n\n\nbug_report.md\n\n\nfeature_request.md\n\n\nTo create a pull request please follow this template:\n\npull_request_template.md\n\nReading Material\nHere is a list of articles that may give more insight into the risks of sharing your health data with online applications, and fitness companies:\nSharing and utilizing health data for AI applications\nBasics of Fitness Tracking and Wellness Apps\n\nDownside of fitness trackers and health apps is loss of privacy\nThe emerging artificial intelligence wellness landscape: Opportunities and areas of ethical debate\nArtificial intelligence in medicine raises legal and ethical concerns\nSharing and utilizing health data for AI applications\nPredictive analytics in health care\nThat mental health app might share your data without telling you\n\nEthical Implications\n\nEthical dimensions of using artifical intelligence in Health Care\nPrivacy, compliance, and ethical issues with predictive people analytics\nArtificial intelligence in medicine raises legal and ethical concerns\nThe legal and ethical concerns that arise from using complex predictive analytics in health care\n\nData and Packages Used\nData\nAll health and wellness data was found on Kaggle and was used as an accurate basis for data generation.\n\n\nNational Institute of Health & National Library of Medicine's PubMed\n\n\nOne year of FitBit ChargeHR data by Alket Cacaj\n\n\n2013-2014 National Health and Nutrition Examination Survey by the CDC\n\n\n2017-2018 National Health and Nutrition Examination Survey\n\n\nPackages\n\n\nPyMed, PubMed Access Through Python: A package which allows the access of informationa and articles from the PubMed Database. For full instructions on using PyMed please visit here.\n\n\nFaker: A package which allows the generation of fake data. For instructions on using Faker please visit here\n\n\nscikit-learn: An open-source package for machine learning in Python.\n\n\nContact Us\nIf you have any questions or concerns about Vigor please contact:\n\nDr. Jumadinova (jjumadinova@allegheny.edu)\nMadelyn Kapfhammer (kapfhammerm@allegheny.edu)\n\n\n\n\n""], 'url_profile': 'https://github.com/Allegheny-Mozilla-Fellows', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['12']], 'contributions': '200 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/nkatz01', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '127 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pooja2893', 'info_list': ['TypeScript', 'Updated Nov 7, 2020', 'Jupyter Notebook', 'Updated Nov 11, 2020', 'HTML', 'Updated Jun 29, 2020', 'Jupyter Notebook', 'Updated Feb 13, 2021', 'Updated Jun 30, 2020', '1', 'Python', 'Updated Aug 31, 2020', '1', 'JavaScript', 'Updated Jul 1, 2020', 'Updated Jul 2, 2020']}",,
