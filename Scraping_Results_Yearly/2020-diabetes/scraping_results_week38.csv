"{'location': 'Belo Horizonte', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '24 contributions\n        in the last year', 'description': ['Previsão de Diabetes\nEste projeto foi desenvolvido como desafio final do Bootcamp Desenvolvedor Python, do IGTI.\nO objetivo do projeto foi o desenvolvimento de um projeto completo de machine learning: desde o pré-processamento, normalização dos dados, treinamento, teste, persistência do modelo e “deploy” da solução final.\nBase de Dados\nA base de dados utilizada no desenvolvimento (diabetes.csv) provém do famoso Dataset do Kaggle Pima Indians Diabetes Database (https://www.kaggle.com/uciml/pima-indians-diabetes-database) que trata da ocorrência de diabetes em mulheres.\nPor motivos didáticos o Dataset foi fornecido sem cabeçalho, abaixo está o dicionário de dados:\n\nNúmero de vezes em que ficou grávida.\nConcentração de glicose.\nPressão diastólica (mm Hg).\nEspessura da dobra cutânea do tríceps (mm).\nInsulina (mu U/ml).\nÍndice de massa corporal (peso em kg/(altura em m)^2).\nHistórico familiar de diabetes.\nIdade (anos).\nClassificação (0 não diabético | 1 diabético ).\n\nConstrução do Modelo\nAs etapas de pré-processamento dos dados e a construção, treinamento, teste e persistência do modelo foram feitas em um jupyter notebook (construção_modelo.ipynb). Foram testados 3 modelos: KNN (K nearest neighbor), Decision Tree e MLP (Multilayer Perceptron).\nComo o objetivo era o desenvolvimento do projeto como um todo, não foi criado um baseline para comparação com o desempenho dos modelos (etapa altamente necessária em um projeto real) nem mesmo foi realizado tuning do modelo (outra etapa muito importante em um projeto real), sendo utilizado o modelo da forma padrão como foi criado.\nO modelo com melhor nível de acuracidade foi persistido para o arquivo mlp_model.sav e a normalização dos dados foi persistida para o arquivo normalização.sav (para que os dados novos que chegasem via formulário fossem corretamente normalizados e não alterassem o comportamento do modelo).\nAplicação web\nPara colocar o modelo ""em produção"" foi utilizado o micro-framework Flask, o arquivo app.py faz toda a integração através das rotas.\nForam criadas 2 páginas HTML, uma para que o usuário coloque os dados para uma nova predição (formulario.html) e uma segunda onde é mostrado o resultado da predição (resultado.html). Ambas as páginas estão na pasta templates.\nLimitações\nO projeto buscou desenvolver uma solução simples e unicamente com fins educacionais, não sendo, portanto, uma proposta real de solucação do problema.\nComo pontos de melhoría podem ser apontados:\n\nNecessidade de uma base de dados maior, o que traria maior confiabilidade ao modelo.\nNecessidade de uma baseline, de forma a avaliar a efetividade da solucação proposta em relação a uma solução simples e rápida.\nNecessidade de tuning do modelo, a fim de melhorar os resultados.\n\n'], 'url_profile': 'https://github.com/JoseWalterLima', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'Satara, Maharashtra', 'stats_list': [['1', '          follower'], ['4', '          following'], ['6']], 'contributions': '27 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shritech1404', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '44 contributions\n        in the last year', 'description': ['diabetes\n'], 'url_profile': 'https://github.com/subhasish333', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '24 contributions\n        in the last year', 'description': ['DiabetesPrediction\nPredicting diabetes on the PIMA dataset\n'], 'url_profile': 'https://github.com/Sushil-ms', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '68 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/RemediosR', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['0', '          following'], ['0']], 'contributions': '61 contributions\n        in the last year', 'description': ['""# DiabetesPredictor""\nDiabetesPredictor\n'], 'url_profile': 'https://github.com/BharatBaweja', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['4', '          following'], ['13']], 'contributions': '4 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/randomguy069', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['10', '          followers'], ['0', '          following'], ['0']], 'contributions': '106 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/SmartPracticeschool', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['2']], 'contributions': '37 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/moisheu', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}","{'location': 'NONE', 'stats_list': [['5', '          followers'], ['0', '          following'], ['3']], 'contributions': '153 contributions\n        in the last year', 'description': ['diabetes-prediction-using-knn\n'], 'url_profile': 'https://github.com/sdaraqshan', 'info_list': ['2', 'Jupyter Notebook', 'Updated Jan 5, 2021', '1', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'HTML', 'Updated Sep 17, 2020', 'JavaScript', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 21, 2020', 'JavaScript', 'Updated Oct 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 15, 2020']}"
"{'location': 'jaipur', 'stats_list': [['0', '          followers'], ['0', '          following'], ['5']], 'contributions': '49 contributions\n        in the last year', 'description': ['Diabetes-Classification\nDiabetes classification using Logistic regression\n'], 'url_profile': 'https://github.com/nikhil6134', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['https://drive.google.com/file/d/1TAzIVLU3r1uToyKGHgbXZielj4TO_Jib/view?usp=sharing\n'], 'url_profile': 'https://github.com/davidnuthakki33', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['2', '          following'], ['0']], 'contributions': '57 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nA weekend project to go over the process of data cleaning/manipulation, exploratory data analysis, and prediction.\n'], 'url_profile': 'https://github.com/juhee-sungschenck', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '9 contributions\n        in the last year', 'description': ['This is a dibetes prediction application !!!\nDEMO : https://diabetes-cheker.herokuapp.com/\n!!!ENJOY!!\nDONE BY : MANOJ V & KAVITHA S\n'], 'url_profile': 'https://github.com/kavithasekar', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [['14', '          followers'], ['3', '          following'], ['0']], 'contributions': '123 contributions\n        in the last year', 'description': [""Diabetes prediccion\nRepo Structure!\n\nraw_data: The raw data given to solve the challenge\ncode: The code developed to solve the problem, is developed in a jupyter notebook called diabetes.ipynb\ndata: The  datasets created while cleaning, exploring or transforming data.\nimg: Picture that will be rendered in the notebook. They have been created using R (because  it's easier, faster (for visualize), and I am more efficient ploting data using R\n\nExecution!\nIn the Makefile are the main commands to\n\ninstall the virtual environment\n\n$ make _install_pipfile\n\nrun the notebook in that virtual environment\n\n$ make notebook\nDependencies\nThe main dependencies are\n\nPython 3.8.5\nPipenv\n\nThis is a tool that aims to bring the best of all packaging worlds.\nIt automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your Pipfile as you install/uninstall packages.\nIt also generates the ever-important Pipfile.lock, which is used to produce deterministic builds.\n\n\n\n""], 'url_profile': 'https://github.com/frandiego', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [['13', '          followers'], ['42', '          following'], ['22']], 'contributions': '381 contributions\n        in the last year', 'description': ['Diabetes-Detection\n'], 'url_profile': 'https://github.com/ardourApeX', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'Allahabad', 'stats_list': [], 'contributions': '19 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/KartikeyRajTiwari', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'Montreal', 'stats_list': [['18', '          followers'], ['35', '          following'], ['6']], 'contributions': '48 contributions\n        in the last year', 'description': [""diabetes_detection\nIn this project I use deep learning on a dataset contain people's various health metrics to try and predict whether they will develop diabetes or not.\n""], 'url_profile': 'https://github.com/youneskamel', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'Andhra Pradesh ,India', 'stats_list': [['4', '          followers'], ['17', '          following'], ['153']], 'contributions': '332 contributions\n        in the last year', 'description': ['Diabetes Prediction\n'], 'url_profile': 'https://github.com/madhucharan', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '2 contributions\n        in the last year', 'description': [""\n\n\n\n\n\n\nAbout Laravel\nLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:\n\nSimple, fast routing engine.\nPowerful dependency injection container.\nMultiple back-ends for session and cache storage.\nExpressive, intuitive database ORM.\nDatabase agnostic schema migrations.\nRobust background job processing.\nReal-time event broadcasting.\n\nLaravel is accessible, powerful, and provides tools required for large, robust applications.\nLearning Laravel\nLaravel has the most extensive and thorough documentation and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.\nIf you don't feel like reading, Laracasts can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.\nLaravel Sponsors\nWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel Patreon page.\n\nVehikl\nTighten Co.\nKirschbaum Development Group\n64 Robots\nCubet Techno Labs\nCyber-Duck\nBritish Software Development\nWebdock, Fast VPS Hosting\nDevSquad\nUserInsights\nFragrantica\nSOFTonSOFA\nUser10\nSoumettre.fr\nCodeBrisk\n1Forge\nTECPRESSO\nRuntime Converter\nWebL'Agence\nInvoice Ninja\niMi digital\nEarthlink\nSteadfast Collective\nWe Are The Robots Inc.\nUnderstand.io\nAbdel Elrafa\nHyper Host\nAppoly\nOP.GG\n云软科技\n\nContributing\nThank you for considering contributing to the Laravel framework! The contribution guide can be found in the Laravel documentation.\nCode of Conduct\nIn order to ensure that the Laravel community is welcoming to all, please review and abide by the Code of Conduct.\nSecurity Vulnerabilities\nIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via taylor@laravel.com. All security vulnerabilities will be promptly addressed.\nLicense\nThe Laravel framework is open-sourced software licensed under the MIT license.\n""], 'url_profile': 'https://github.com/lujaynalfandi', 'info_list': ['Jupyter Notebook', 'Updated Sep 17, 2020', 'Updated Sep 26, 2020', 'HTML', 'Updated Sep 16, 2020', 'JavaScript', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 9, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'PHP', 'Updated Oct 20, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '26 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/arjunsingh07', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [['6', '          followers'], ['8', '          following'], ['10']], 'contributions': '215 contributions\n        in the last year', 'description': ['Diabetes-Predictor\nA model which predicts if a patient has diabetes or not, based on several factors like age, BMI, Blood Pressure etc.\nThe dataset was obtained from PIMA.\nThe machine learning algorithms used were Random Forests, Support Vector Machines, and Naive Bayes Classifier.\nThe outputs of these models were then ensembled using the Voting Classifier.\nReference: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/jaydulera', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'Hungary', 'stats_list': [['1', '          follower'], ['1', '          following'], ['5']], 'contributions': '5 contributions\n        in the last year', 'description': ['diabetes-helper\n'], 'url_profile': 'https://github.com/Eldahar', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['9', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/ak1920', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '77 contributions\n        in the last year', 'description': ['Diabetes-Prediction\n'], 'url_profile': 'https://github.com/SubhajitGT', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'Atlanta', 'stats_list': [['1', '          follower'], ['0', '          following'], ['8']], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes.jl\nSome diabetes related modeling and analysis\n'], 'url_profile': 'https://github.com/aml5600', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'New Delhi', 'stats_list': [['1', '          follower'], ['0', '          following'], ['21']], 'contributions': '46 contributions\n        in the last year', 'description': ['Diabetes-Analysis\n'], 'url_profile': 'https://github.com/frozentoad9', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '157 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/shivamdattapurkayastha99', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['4', '          following'], ['2']], 'contributions': '25 contributions\n        in the last year', 'description': ['diabetes_prediction\nthis model is check whether a person having a diabetes or not.\nIt is created using machine learning model KNN and also applied some features engneering\nit use to check weather the people having diabetes or not.\n'], 'url_profile': 'https://github.com/Drashti125', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['TFM-Diabetes\nEste es un proyecto para la predicción de la diabetes\nTFM Machine Learning para la predicción de la diabetes\n'], 'url_profile': 'https://github.com/Jacalti', 'info_list': ['HTML', 'Updated Sep 17, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 16, 2020', 'Updated Sep 16, 2020', 'Julia', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Python', 'Updated Sep 19, 2020', '1', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '61 contributions\n        in the last year', 'description': ['Diabetes_Pred\nUsed kaggle dataset\nDeployed on Heroku\nTechnologies Used: Jupyter, numpy, pandas, KNN algorithm, Html, Heroku\n'], 'url_profile': 'https://github.com/shubham6692', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'Moradabad, India', 'stats_list': [['4', '          followers'], ['2', '          following'], ['4']], 'contributions': '55 contributions\n        in the last year', 'description': ['Classification Model\nClassification Model to predict weather a patient has a diabetes or not\n\xa0 \xa0 \xa0 \xa0\nTable of Contents\n\nIntroduction\nPython libraries\nThe problem statement\nClassification Algorithms\nIndependent and dependent variable\nInterpretation and Conclusion\n\n\xa0 \xa0 \xa0 \xa0\n1.\tIntroduction\nIn this project, I build Classification model to study the relationship between Diabetes Outcome of a patient and different continous and discrete variables. I implemented this classification model in Python programming language using Scikit-learn,numpy,seaborn,matplotlib.\n\xa0 \xa0 \xa0 \xa0\n2.\tPython libraries\n•\tNumpy\n•\tPandas\n•\tMatplotlib\n•\tSeaborn\n•\tScikit-Learn\n\xa0 \xa0 \xa0 \xa0\n3.\tThe problem statement\nThe main aim of this model is to predicting weather a person has a diabetes or not on the basis of different attributes. Finding relationship or dependency of Output on attrubutes like Pregnancies, Insulin and other variables.\n\xa0 \xa0 \xa0 \xa0\n4.\tClassification Algorithms\n\nLogisticRegression\nDecisionTreeClassifier\nRandomForestClassifier\nSVC\nKNeighborsClassifier\nGaussianNB\n\n\xa0 \xa0 \xa0 \xa0\n5.   Independent and Dependent Variables\nIndependent variable\nIndependent or Input variable (X) = Feature variable = Predictor variable\nThe following are the independent variable:-\n\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsulin\nBMI\nDiabetesPedigreeFunction\nAge\n\nDependent variable\nDependent or Output variable (y) = Target variable = Response variable\nThe following is the dependent variable:-\n\nOutcome\n\n\xa0 \xa0 \xa0 \xa0\n6.\tInterpretation and Conclusion\nAmong all the classification algorithm used in the model SVC(Support Vector Classifier) fit best among them to data and provide the highest accuracy score and F1-score.\nAccuracy Score : 80%\nF1-Score : 70%\n'], 'url_profile': 'https://github.com/aarjav22', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'Visakhapatnam', 'stats_list': [], 'contributions': '48 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nDiabetes Mellitus is an increasingly prevalent chronic disease characterized by the body’s inability to metabolize glucose. The objective of this prediction was to build an effective predictive model with high sensitivity and selectivity to better identify Canadian patients at risk of having Diabetes Mellitus based on patient demographic data and the laboratory results during their visits to medical facilities.\nThis dataset is an interesting one and aims at predicting the probability of the onset of diabetes. I, as an Indian was interested in this dataset and this is my take on this dataset.\n'], 'url_profile': 'https://github.com/imrankhan07', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'Bengaluru', 'stats_list': [], 'contributions': '53 contributions\n        in the last year', 'description': ['Diabetes dataset\nThis model predicts if the person has diabetes or not\n'], 'url_profile': 'https://github.com/vineelnoel', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'NONE', 'stats_list': [['14', '          followers'], ['10', '          following'], ['17']], 'contributions': '109 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AdityaKotwal100', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '43 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nThe dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nObjective\nWe will try to build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not?\nData\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n""- A: Number of pregnancies\\n"",\n""- B: Concentration of plasma glucose in a 2-hour oral glucose tolerance test\\n"",\n""- C: Diastolic blood pressure - Measured in mmHg\\n"",\n""- D: Triceps skin fold thickness - Measured in mm\\n"",\n""- E: Insulin concentration in the serum in 2 hours. Measured in (mu U/ml)\\n"",\n""- F: Weight in kg/height in (m^2)\\n"",\n""- G: Function that assigns the probability of someone getting diabetes\\n"",\n""- H: Age\\n"",\n""- Target: Value of 0 or 1 corresponds to no diabetes and diabetes\\n""\n\n'], 'url_profile': 'https://github.com/Rohith264', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'Hyderabad', 'stats_list': [], 'contributions': '85 contributions\n        in the last year', 'description': ['Diabetes-Prediction\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nData:\nhttps://www.kaggle.com/uciml/pima-indians-diabetes-database?select=diabetes.csv\nThe diabetes.csv consist of several medical predictor (independent) variables and one target (dependent) variable, Outcome. Independent variables include the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n'], 'url_profile': 'https://github.com/anilpedavalli', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'India', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '6 contributions\n        in the last year', 'description': ['diabetes-prediction-web\nPredict Diabetes using machine learning techniques .\nThis app was developed using python flask and ml libraries\n'], 'url_profile': 'https://github.com/AkhilFrancis', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'Hyderabad, India', 'stats_list': [], 'contributions': '111 contributions\n        in the last year', 'description': ['Diabetes-Disease-prediction\nThis is a project on Diabetes Disease Prediction based on Kaggle DataSet https://www.kaggle.com/uciml/pima-indians-diabetes-database.\nThis project is mainly done to learn below functionalities.\n1. How a normal basic model will perform without tuning any hyper-parameters of the model. \n2. How to perform Cross Validation. \n3. How Stratified Sampling will work and how it will split the data. \n4. Difference in the accuracy when data split using a random sample and stratified sampling sample. \n5. How to identify optimal hyper parameters for a model when a model overfit on the data. \n6. How to calculate different Performance Metrics. \n7. ROC_AUC Curve and its importance to decide the best model.\nI did the above analysis on different Machine Learning Algorithms like KNN, Logisic Regression, SVM, Decision Tree, Random Forest and Gradient Boosting and opted SVM as the model for predicting Diabetes which has 79% accuracy.\nYou can test the service using https://diabetes-disease-prediction.herokuapp.com/\n'], 'url_profile': 'https://github.com/Venkat477', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['1', '          following'], ['1']], 'contributions': '50 contributions\n        in the last year', 'description': ['Diabetes-Detection-App\nSimple web app which will show whether a person is diabetic or not by using Machine Learning Algorithm i.e RandomForestClassifier. I have used Streamlit for making a ML web app.\n'], 'url_profile': 'https://github.com/ShubhamSam', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 15, 2020', 'Python', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Oct 21, 2020', 'Python', 'Updated Sep 16, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'HTML', 'Updated Sep 16, 2020']}"
"{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '156 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nNotice: It is for only Educational purpose.\nIn this project, our objective is to predict whether the patient has diabetes or not based on various features like Glucose level, Insulin, Age, BMI. We will perform all the steps from Data gathering to Model deployment. During Model evaluation, we compare various machine learning algorithms on the basis of accuracy_score metric and find the best one. Then we create a web app using Flask which is a python micro framework.\n\n\n\n\nInstallation\nClone this repository and unzip it.\nAfter downloading, cd into the flask directory.\n\nBegin a new virtual environment with Python 3 and activate it.\n\nInstall the required packages \n\nExecute the command: python app.py\nOpen http://127.0.0.1:5000/ in your browser.\n'], 'url_profile': 'https://github.com/ervishuu', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'Hungary', 'stats_list': [['1', '          follower'], ['1', '          following'], ['5']], 'contributions': '5 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Eldahar', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'Mumbai', 'stats_list': [['15', '          followers'], ['9', '          following'], ['2']], 'contributions': '306 contributions\n        in the last year', 'description': ['Pytorch-Diabetes-Prediction\n'], 'url_profile': 'https://github.com/akhiilkasare', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '40 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/anusha-viraj', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['4', '          following'], ['2']], 'contributions': '48 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/manwar16', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'Chennai,India', 'stats_list': [['21', '          followers'], ['22', '          following'], ['17']], 'contributions': '199 contributions\n        in the last year', 'description': ['Diabetes-EDA-and-Prediction\nExploratory Data Analysis and Prediction of diabetic patients using the UCI Dataset.\nDataset is from the Pima Indians Diabetes Database: https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/mahima1911', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['10', '          following'], ['21']], 'contributions': '99 contributions\n        in the last year', 'description': ['Azure-ML-Diabetes-classification\nModel ran on Azure ML studio for Diabtes classification problem\nUsed SVM to predict the class\nyou can find the model here in gallery\nhttps://gallery.cortanaintelligence.com/Experiment/Diabetes-classification-Predictive-Exp\n'], 'url_profile': 'https://github.com/VivekMuraleedharanGit', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'United States', 'stats_list': [], 'contributions': '37 contributions\n        in the last year', 'description': ['Predictive-Analytics-Diabetic-Patient\nPredict if a patient with diabetes will be readmitted to the hospital within 30 days.\n'], 'url_profile': 'https://github.com/KarishmaPadale20', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'Egypt', 'stats_list': [['1', '          follower'], ['7', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AhmedSarhan1999', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '36 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/chiggylo', 'info_list': ['Jupyter Notebook', 'Updated Sep 18, 2020', 'Dockerfile', 'GPL-3.0 license', 'Updated Sep 18, 2020', '1', 'Jupyter Notebook', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'HTML', 'MIT license', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'Updated Sep 14, 2020', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Python', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '14 contributions\n        in the last year', 'description': [""Diabetes Re-hospitalizations\nIntroduction:\nDiabetes affects approximately 29 million adults and children in the United States.  According to the American Diabetes Association, the cost associated with diagnosed diabetes was $245 billion in 2012, making the single most expensive medical condition. Out of that number, around 43% is related to direct hospital admissions. The break down of diabetes costs in the United States is greater than $13,500 per year. Of that amount, almost $8k is specifically for diabetes care. With the cost of care rising, it is becoming more and more important to ease the burden of the individual and the health system in general.\nGoal:\nGiven the high cost of hospitalization, how can we use data science tools to reduce the number of patients being re-admitted after a being hospitalized for complications from diabetes? The goal is to predict how likely someone is to be re-admitted based on available data of diabetes patient records. A number of features will be taken into account, such as age, gender, race, medications, lab procedures, etc.\nPredicting Diabetes Re-hospitalization\nData:\nThe data are submitted on behalf of the Center for Clinical and Translational Research, Virginia Commonwealth University. Provided by UCI https://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008# It represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. \xa0Information was extracted from the database for encounters that satisfied the following criteria.\n-It is an inpatient encounter (a hospital admission).\n-It is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\n-The length of stay was at least 1 day and at most 14 days.\n-Laboratory tests were performed during the encounter.\n-Medications were administered during the encounter.\nThe data contains such attributes as patient number, race, gender, age, admission type, time in hospital, medical specialty of admitting physician, number of lab test performed, HbA1c test result, diagnosis, number of medication, diabetic medications, number of outpatient, inpatient, and emergency visits in the year before the hospitalization, etc.\n\nExploratory Data Analysis\nBreakdown by Age:\n\nBreakdown by Race:\n\nAverage Number of Meds:\n\nAverage Number of Procedures:\n\nFeature Importances:\n\nData Pipeline:\n\nLoaded data into a Pandas data frame.\nCleaned and organized data.\nCreated dummy variables for categorical features.\nExploratory Data Analysis\nSelected models: Logistic Regression, Random Forest Classifier, and Gradient Boosting Classifier.\nTested base models.\nPerformed grid searches on the models.\nTested optimized models and compared to base.\n\nModel Performance:\nLogistic Regression\n\nRandom Forest\n\nGradient Boosting\n\nConfusion Matrices:\nRandom Forest\n\nGradient Boosting\n\nROC Curves:\nLogistic Regression\n\nRandom Forest\n\nGradient Boosting\n\nConclusion:\nThe metric of interest in this case was the F1 Score because it combines both Precision and Recall. Since we do know have enough information about which one of the two is more important, the F1 Score accounts for both. Out of the base models, Gradient Boosting performed the best. After performing grid searches on the models and finding the optimum hyperparameters, Gradient Boosting came out on top again, though the improvement was miniscule.\nNext Steps:\n-Test a basic neural network. One was built, but given the time constraint it wasn't tested.\n-Find a bigger data set to test the models on.\n""], 'url_profile': 'https://github.com/ofprogram', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'Muzaffanagar, India', 'stats_list': [], 'contributions': '65 contributions\n        in the last year', 'description': ['Pima-Indians-Diabetes\nDeveloped a machine learning model to predict the onset of diabetes based on diagnostic measures.\nInstall\nThis project requires Python and the following Python libraries installed:\n\nNumpy\nPandas\nMatplotlib\nSeaborn\nscikit-learn\n\nYou will also need to have software installed to run and execute a Jupyter Notebook\nIf you do not have Python installed yet, it is highly recommended that you install the Anaconda distribution of Python, which already haa above packages and more included.\nContext\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The objective of the dataset is to diagnostically predict whether or not a patient has diabetes, based on certain diagnostic measurements included in the dataset. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage.\nData Description\nThe datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n'], 'url_profile': 'https://github.com/ankurkumar-ml', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['2', '          following'], ['1']], 'contributions': '72 contributions\n        in the last year', 'description': ['Linear-Regression-for-diabetes-datasets\nDemo code for linear regression using sklearn and matplot lib\n'], 'url_profile': 'https://github.com/karthik-max', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['A logistic regression model to predict whether a person has diabetes\n'], 'url_profile': 'https://github.com/BhagyanagasaiPuppala', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '31 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/lichen022887', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'Pune', 'stats_list': [], 'contributions': '29 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Ridge-Regression\nThis is a file submitted for a diabetes prediction task on Kaggle. The task involved creating a model to predict whether a patient with a specific medical profile has diabetes or not. This task also involved data clearning, data exploration , model creation and evaluation. The model used to predict was the ridge logistic regression.\nThe data and task are available at this link - https://www.kaggle.com/uciml/pima-indians-diabetes-database\n'], 'url_profile': 'https://github.com/varun6299', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'Chicago', 'stats_list': [['3', '          followers'], ['1', '          following'], ['0']], 'contributions': '422 contributions\n        in the last year', 'description': ['Prediction-of-Patient-Diabetes-using-Insurance-Claims-Dataset\n\nTable of contents\n\nIntroduction\nProblem Statement\nData Source\nTechnologies\nType of Data\nData Pre-processing\nAlgorithms Implemented\nSteps Involved\nEvaluation Metrics\nResults and Conclusion\n\nIntroduction\nDiabetes is a highly prevalent and expensive chronic condition, costing about $330 billion to Americans annually. Most of the cost is attributed to the ‘type-2’ version of diabetes, which is typically diagnosed in middle age.\nToday is December 31, 2016,  a commercial health insurance company has contracted you to predict which of their members are most likely to be newly-diagnosed with type-2 diabetes in 2017. Your goal is to featurize their data, train and optimize a predictive model, and explain your results and approach. (Note: “newly-diagnosed” means members who were NOT previously coded with diabetes prior to 2016-12-31, inclusive).\nProblem Statement\n\nYour goal is to featurize the Insurance claims data, and train and optimize a predictive model to find the risk of diabetes in patients.\n\nData Source\n\nThe Dataset was provided by Lumiata company which deals with Healthcare insurance claims\n\nTechnologies\n\nPython 3.6.7\n\nType of Data\n\nThe data provided are real patient claims records from a large insurance company, appropriately de-identified. The data sets have already been split into training and test sets (‘train.txt’ & ‘test.txt’).\nTrain : 70%\nTest  : 30%\n\nEach line in both text files is a patient record, represented as a json string. The health record is\nparameterized by a set of encounter dates in a YYYY-MM-DD format. The structure of each\npatient json is as follows:\n\n‘bday’ - patient date of birth in YYYY-MM-DD format\n‘is_male’ - True = Male, False = Female\n‘patient_id’ - de-identified patient id (each patient is given a unique value)\n‘resources’ - dictionary of encounter_date → list of codes (described below)\n‘observations’ - dictionary of encounter_date → list of dictionaries (described below)\n‘tag_dm2’ - indicates date of first type-2 diabetes diagnosis - will either have a\nYYYY-MM-DD date or be an empty ‘’ string; this information will be censored from the\nholdout set. (described above)\n‘split’ - indicates a member is in the ‘train’ or ‘test’ set; information beyond 2017-01-01\nhas been removed from test.txt .\nEach patient record has a key ‘tag_dm2’, whose value is either a ‘YYYY-MM-DD’ date string\nindicating the date of first code of a diagnosis of diabetes, or an empty string ‘’ (indicating no\ndiabetes in their record).\n\nYou should cohort your data (i.e construct the response variable) in the training set according to\nthe following definitions (check your work with the training set counts given below for each\ndefinition):\n\nA ‘ claim ’ is someone whose ‘tag_dm2’ date is between 2017-01-01 and 2017-12-31,\ninclusive (training set count of ‘claim’ = 3410) - the response for these members is a ‘1’\nA ‘ never-claim ’ is someone whose ‘tag_dm2’ date is either after 2017-12-31, exclusive,\nor is an empty string ‘’ (training set count of ‘never-claim’ = 70110) - the response for\nthese members is a ‘0’\nA ‘ prior ’ is someone whose ‘tag_dm2’ date is before 2017-01-01, exclusive - typically\n‘priors’ are filtered out of the matrix before training. You may include these people in\ntraining, but keep in mind they will be filtered out of ‘test’ when we evaluate your solution.\nEach patient record also has two keys describing their health history - ‘resources’ &\n‘observations’.\nThe ‘resources’ key specifies the diagnoses, medications, and procedures that were\nnoted/prescribed/performed at each doctor’s visit - these are represented by different coding\nsystems (icd9/10, rxnorm, cpt, respectively.) Each encounter date in the ‘resources’ key is\nmapped to the corresponding list of codes issued at that doctor’s visit.\n\n\nThe codes have the format _. For instance, ‘icd9_272.0’, which corresponds to\nhigh cholesterol:\nhttp://www.icd9data.com/2015/Volume1/240-279/270-279/272/272.0.htm\nNote - encounter dates in ‘resources’ can sometimes have no codes in the code list!\nThe ‘observations’ key specifies the lab tests that were completed - each encounter date is\nmapped to a list of dictionaries, each of which has the following keys:\n\n‘code’ - the ‘loinc’ code corresponding to the lab test\n‘interpretation’ - whether the lab was ‘H’ for high, ‘L’ for low, ‘N’ for normal, or ‘A’ for\nabnormal\n‘value’ - the value extracted from the lab\n\n\nFor instance, the lab could have been a blood glucose test ‘loinc_2345-7’, whose value may\nhave been 130, and hence whose interpretation would be ‘H’ (a cut-off for high blood glucose is\n106:\nhttps://s.details.loinc.org/LOINC/2345-7.html?sections=Comprehensive )\nNote - the values in the ‘interpretation’ and ‘value’ keys can sometimes be ‘None’!\nThe keys in the ‘resources’ and ‘observation’ dictionary correspond to the encounter date with\nthe doctor. All dates are formatted as string in YYYY-MM-DD format, e.g. “2016-04-30”.\nThe format of the file you submit to us should be a csv file, formatted as\n‘<your_name_here>_dm2_solution.csv’. We should be able to read in your solution using\npandas as follows:\n\nData Pre-processing\n\nStratified Sampling to obtain a balanced dataset\nConverting the complicated JSON file to a dataframe\n\nAlgorithms Implemented\n\nLogistic Regression\nSupport Vector Classifier (SVC)\n\nSteps Involved\nSTEP 1 : Since it was a highly unbalanced data, balancing the dataset using Stratified Sampling technique. I have taken the demographic age variable while using this technique\nSTEP 2 : Analyzed the ICD9 codes, cpt codes and resource codes and found out which variables contribute to chronic diabetes.\nSTEP 3 : Removed some of the variables based on the number of unique values and created final dataframe from the complex JSON file.\nSTEP 4 : Ran statistical tests to find the significant variables in the final dataframe.\nSTEP 5 : After finding the most significant variables, ran SVC on the final variables and calculated the porbability of diabetes in each patient.\nEvaluation Metrics\nRMSE (Root Mean Square Error)\nResults and Conclusion\nBy analyzing our dataset, we tried to find the probability of diabetes in each patient by considering their past medical tests and conditions.\nThe results of the Support Vector Classifier (SVC) are shown below -\n\n\n'], 'url_profile': 'https://github.com/ankitbvs', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'Brussels, Belgium', 'stats_list': [['0', '          followers'], ['3', '          following'], ['0']], 'contributions': '25 contributions\n        in the last year', 'description': [""Diabetes Drug Testing\nContext: You are a data scientist for an exciting unicorn healthcare startup that has created a groundbreaking diabetes drug that is ready for Phase III clinical trial testing. It is a very unique and sensitive drug that requires administering and screening the drug over at least 5-7 days of time in the hospital with frequent monitoring/testing and patient medication adherence training with a mobile application. You have been provided a patient dataset from a client partner and are tasked with building a predictive model that can identify which type of patients the company should focus their efforts testing this drug on. Target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering this drug to the patient and monitoring.\nIn order to achieve your goal you must build a regression model that can predict the estimated hospitalization time for a patient and use this to select/filter patients for your study.\nExpected Hospitalization Time Regression Model: Utilizing a synthetic dataset(denormalized at the line level augmentation) built off of the UCI Diabetes readmission dataset, students will build a regression model that predicts the expected days of hospitalization time and then convert this to a binary prediction of whether to include or exclude that patient from the clinical trial.\nThis project will demonstrate the importance of building the right data representation at the encounter level, with appropriate filtering and preprocessing/feature engineering of key medical code sets. This project will also require students to analyze and interpret their model for biases across key demographic groups.\nDataset\nDue to healthcare PHI regulations (HIPAA, HITECH), there are limited number of publicly available datasets and some datasets require training and approval. So, for the purpose of this exercise, we are using a dataset from UC Irvine that has been modified for this course. Please note that it is limited in its representation of some key features such as diagnosis codes which are usually an unordered list in 835s/837s (the HL7 standard interchange formats used for claims and remits).\n\nhttps://archive.ics.uci.edu/ml/datasets/Diabetes+130-US+hospitals+for+years+1999-2008\n\nGetting Started\nFollow the instructions in starter_code/student_project.ipynb and be sure to set up your Anaconda environment to get started!\nDependencies\nUsing Anaconda consists of the following:\n\nInstall miniconda on your computer, by selecting the latest Python version for your operating system. If you already have conda or miniconda installed, you should be able to skip this step and move on to step 2.\nCreate and activate * a new conda environment.\n\n* Each time you wish to work on any exercises, activate your conda environment!\n\n1. Installation\nDownload the latest version of miniconda that matches your system.\n\n\n\n\nLinux\nMac\nWindows\n\n\n\n\n64-bit\n64-bit (bash installer)\n64-bit (bash installer)\n64-bit (exe installer)\n\n\n32-bit\n32-bit (bash installer)\n\n32-bit (exe installer)\n\n\n\nInstall miniconda on your machine. Detailed instructions:\n\nLinux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install\nMac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install\nWindows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install\n\n2. Create and Activate the Environment\nFor Windows users, these following commands need to be executed from the Anaconda prompt as opposed to a Windows terminal window. For Mac, a normal terminal window will work.\nGit and version control\nThese instructions also assume you have git installed for working with Github from a terminal window, but if you do not, you can download that first with the command:\nconda install git\n\nIf you'd like to learn more about version control and using git from the command line, take a look at our free course: Version Control with Git.\nNow, we're ready to create our local environment!\n\nClone the repository, and navigate to the downloaded folder. This may take a minute or two to clone due to the included image data.\n\ngit clone https://github.com/udacity/nd320-c1-emr-data-starter.git\ncd nd320-c1-emr-data-starter\n\n\n\nCreate (and activate) a new environment, named udacity-ehr-env with Python 3.7. If prompted to proceed with the install (Proceed [y]/n) type y.\n\nLinux or Mac:\n\nconda create -n udacity-ehr-env python=3.7\nsource activate udacity-ehr-env\n\n\nWindows:\n\nconda create --name udacity-ehr-env python=3.7\nactivate udacity-ehr-env\n\nAt this point your command line should look something like: (udacity-ehr-env) <User>:USER_DIR <user>$. The (udacity-ehr-env) indicates that your environment has been activated, and you can proceed with further package installations.\n\n\nInstall a few required pip packages, which are specified in the requirements text file. Be sure to run the command from the project root directory since the requirements.txt file is there.\n\n\npip install -r requirements.txt\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md\n""], 'url_profile': 'https://github.com/ykhiari', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'Lake Forest, Illinois, US', 'stats_list': [['1', '          follower'], ['5', '          following'], ['2']], 'contributions': '37 contributions\n        in the last year', 'description': ['Purpose of the Study\n\nTo evaluate the protective effect of Physical Recreation Activities (PRA) on total diabetes (including diagnosed and undiagnosed) adjusting for possible confounders , and meanwhile examine the effect modification of race/ethnicity on PRA and diabetes outcome.\n\nBackground\n\nDuring 1999–2016,the age-adjusted prevalence of total diabetes significantly increased among adults aged 18 years or older.\nPhysical activity has long been recognized as playing a role in the prevention of type 2 diabetes (T2D) and previous meta-analyses revealed this protection effect can be modified by race/ethnicity.\n\nData Source\n\nObservational,Cross-sectional data collected from National Health and Nutrition Examination Survey (NHANES) 2017-2018 ; 5852 U.S. adults ( age 18 or older) with self-reported diabetes outcome or HbA1c (Glycohemoglobin) testing result on record included in the analysis.\nNationall Health and Nutrition Examination Survey (NHANES) is designed to assess the health and nutritional status of adults and children in the United States. It is a unique survey combing interviews and physical examinations, and the data set is divided into multiple files that need to be merged. Since the survey is meant to be representative of the entire population, the sample should be appropriately weighted using the weight variables provided in the data set.\n\nStatistical Analysis\n\nSummary of univariate distribution of all variables\nBivariate analysis (Chi-squared tests)\nMulti-variate analysis (Ordinary Logistic Regression Model, stepwise variable selection , 𝛼 = 0.05)\nSoftware: R-Studio version 3.6.2\n\n'], 'url_profile': 'https://github.com/Shujun-Xu', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['0']], 'contributions': '28 contributions\n        in the last year', 'description': ['Bachelor-s-thesis\nPredicting diabetes from genomic data with machine learning\n'], 'url_profile': 'https://github.com/danielguinon', 'info_list': ['Jupyter Notebook', 'Updated Sep 30, 2020', 'Jupyter Notebook', 'Updated Sep 18, 2020', 'Python', 'GPL-3.0 license', 'Updated Sep 14, 2020', 'Updated Sep 20, 2020', 'Jupyter Notebook', 'Updated Sep 15, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'Updated Sep 18, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Sep 14, 2020', 'R', 'Updated Sep 17, 2020', 'Updated Sep 14, 2020']}"
"{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '24 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/saumya195', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '114 contributions\n        in the last year', 'description': ['A Research Compedium of Quality Assessment of Web-Based Information on Type 2 Diabetes\n\nThis platform is a research compedium of our academic publication below.\nDidem Ölçer, and Tugba Taskaya Temizel (2020). Quality Assessment of Web-Based Information on Type 2 Diabetes, Online Information Review, Emerald Insight (submitted).\n\nThe study investigates the impact of textual and content-based features in predicting the quality of health-related texts. The experiments were conducted for websites about type-2 diabetes and mainly focuses on assessing the quality of written information about treatment choices.\n\nWhich textual features reveal the quality of health websites? Are the linguistic styles of high-quality websites different from those of low-quality websites?\n\nAre textual features derived from professional health literacy guidelines useful in assessing the quality of websites?\nIs there any relationship between the frequencies of certain sentence types and the quality of websites? How is the number of auxiliary verbs related to the quality of websites?\n\n\nHow are content-based features related to the quality and coverage of websites?\nDoes the use of both textual and content-based features perform better than the sole use of textual or content-based features in the classification of websites in terms of quality?\n\n\nThe platform provides the following materials:\n\n\ndocuments/\nThis subdirectory contains detailed information about our process of selection of websites and employed methodology (process.md). Also, descriptive statistics of websites are presented in (Descriptive statistics of websites.md)\nIt contains description of all textual features and information of how they are calculated (description of textual features.md). As supplementary material, a detailed table showing which studies specifically used the textual features is given (textual features and related studies.md).\nIn addition, it contains all selected terms from ADA and their weirdness scores (list of content-based features.md).\n\ncode/\nThe code/ directory contains three code documents:\n\n\nTextual features.py: to calculate textual features of websites; need .txt and .html files of websites.\n\n\nConstruct percentage of terms.py: to calculate the percentage of the terms as a quantization technique; need query files that are stored in data/query/. First, how many of the terms in the query appeared in the document was calculated. Then, this number was normalized by dividing it by the total number of words in the query.\n\n\nLoocv elastic result.R: to get results of classification; need textual and content-based features that are stored in data/\n\n\ndata/\nThe original text of websites cannot be given for copyright. Therefore the description of all features is given in documents/ and in the code/ how they are generated is given. Also, the name of websites and their quality scores are given(websites scores.csv)\nIt contains all textual features used for this study (textual features.csv).\nIn addition, used query files are saved in data/query subdirectory and content vectorization that is produced using code (construct percentage of terms.py) is saved in data/content vectorization subdirectory. There are 9 files for each because each feature set was constructed to include the top 70 to 630 terms, with an increment of 70.\n'], 'url_profile': 'https://github.com/didemolcer', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'INDIA', 'stats_list': [['0', '          followers'], ['1', '          following'], ['1']], 'contributions': '43 contributions\n        in the last year', 'description': ['IOT-Project\nNon-Invasive Glucose Monitoring and Diet Recommendation System for Individuals with Diabetes\n'], 'url_profile': 'https://github.com/dshubham771', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'Brasília, DF', 'stats_list': [['8', '          followers'], ['6', '          following'], ['15']], 'contributions': '291 contributions\n        in the last year', 'description': ['Medical-Diagnosis-using-Support-Vector-Machines\nTraining of a support vector machine to predict whether a new patient has diabetes based on these measurements. The data set used comes from the National Institute of Diabetes and Digestive and Kidney Diseases and contains anonymous diagnostic measurements for a set of female patients.\nProject Structure\nThe hands on project on Medical Diagnosis using Support Vector Machines is divided into following tasks:\n\nLoad a dataset from file,\nSplit a dataset into training and testing subsets,\nCreate a support vector machine,\nMake a medical diagnosis for a new patient,\nEvaluate the accuracy of the SVM classifier.\n\n'], 'url_profile': 'https://github.com/Hevenicio', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['CPT2DM_project\nThe project contains files for Balmasova et al. ""The features of gingival sulcus microbiome in patients with chronic periodontitis associated with type 2 diabetes mellitus""\n'], 'url_profile': 'https://github.com/RCPCM-GCB', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'Okemos, Michigan', 'stats_list': [['16', '          followers'], ['27', '          following'], ['25']], 'contributions': '811 contributions\n        in the last year', 'description': ['Setup\nInstall all required packages in a virtual environment\nIf you are using a windows venv, run $env:FLASK_APP = ""init.py"" within wound_analysis\nrun npm start within frontend\nrun flask run within wound_analysis\nThe app will be running on localhost:3000\nThe api will be running on localhost:5000\nExample images of interface and analysis\n\n\n\nSpecial implementation steps\nDue to bugs with libgl1, an Aptfile needs to be added.\nTo add it, run\nheroku buildpacks:add --index 1 https://github.com/heroku/heroku-buildpack-apt\nTo set up venv FLASK_APP:\nThis commmand, $env:FLASK_APP = ""init.py"", is needed in order for the api to be run.\n'], 'url_profile': 'https://github.com/ZovcIfzm', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'Auckland, New Zealand', 'stats_list': [], 'contributions': '13 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/lmay931', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}","{'location': 'Poland, Warsaw', 'stats_list': [['3', '          followers'], ['9', '          following'], ['2']], 'contributions': '86 contributions\n        in the last year', 'description': ['SugarPlus\nDiabetes tracker for diabetics.\nStatus\nIn progress\nFeatures\ndeveloping functions:\n\nadd sugar blood result\nadd boluses and WW of your meals\nsee your average sugar level for 7, 14, 30 and 90 days\nsee blood glucose level graphs\n\nIN FUTURE:\n\ngenerate raport to pdf\ninput WW in your meal and app show you how much insulin you should have\nhigh sugar? app count how much insulin you should take\n\nTechnologies:\n\nJava 11\nSpring Boot v2.3.3\nMaven\nSpring Security\nSpring Data JPA, Hibernate, MySQL\nSpring Web\nMVC\nJSTL\nJavaSript + html, css (my own front)\n\n'], 'url_profile': 'https://github.com/GosiaSo', 'info_list': ['Jupyter Notebook', 'Updated Sep 20, 2020', 'Python', 'Updated Nov 9, 2020', 'Updated Nov 29, 2020', 'Jupyter Notebook', 'Updated Sep 19, 2020', 'R', 'Updated Jan 22, 2021', 'Python', 'Updated Feb 18, 2021', 'Jupyter Notebook', 'Updated Sep 17, 2020', 'Java', 'Updated Sep 28, 2020']}",,
