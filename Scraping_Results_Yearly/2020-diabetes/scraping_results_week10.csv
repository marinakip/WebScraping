"{'location': 'Lagos, Nigeria', 'stats_list': [['63', '          followers'], ['43', '          following'], ['209']], 'contributions': '927 contributions\n        in the last year', 'description': ['Diabetes-Prediction-API\nDeploying a simple Diabetic Machine Learning classification model with Django via an API\nEndpoint\nhttps://diabetiespred.herokuapp.com/\nAPI documentation\nhttps://documenter.getpostman.com/view/10327129/SzRuZCfD?version=latest\n'], 'url_profile': 'https://github.com/AminuIsrael', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '177 contributions\n        in the last year', 'description': ['DiabetesApp\nOfficial fontys groep 3 app\nGun example docs:\nhttps://gun.eco/docs/Todo-Dapp\nGun SEA docs:\nhttps://gun.eco/docs/SEA\nGun SEA Server?:\nhttps://github.com/shaqarava/superPeer\nASP tutorial:\nhttps://www.youtube.com/watch?v=4IgC2Q5-yDE&list=PL6n9fhu94yhVkdrusLaQsfERmL_Jh4XmU\nJS Unit testing:\nhttps://designmodo.com/test-javascript-unit/\nJS Unit testing video:\nhttps://www.youtube.com/watch?v=r9HdJ8P6GQI\njQuery Tutorial:\nhttps://www.youtube.com/watch?v=hMxGhHNOkCU\n'], 'url_profile': 'https://github.com/RipOrbofWinter', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '1 contribution\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/pedrocabanas', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '3 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sherwinday', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/opendata-2020', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '36 contributions\n        in the last year', 'description': [""Diabetes\nInternational Diabetes Federation refers that 463 million people living with diabetes. There are couple of questions coming up to my mind. First of all how serious is this disease? What symptoms should pay my attention? Finally, the most important question -  what is the probability that I can suffer from diabetes?\nI decided to do some research on this and present key figures which I found on International Diabetes Federation site:\n\nTo answer to those questions we should explain what diabetes is. The situation when the pancreas is no longer able to make insulin leads to chronic disease which is called diabetes.\nThere is another question what is the insulin and why it is so important for us? We know that to do some stuff we need energy, which is produce by our cells. How does it work? The cells need our help, they need some ‘fuel’. Ok, so let’s do this, we can eat some glucose-rich food. What is next? How our cells absorb it from food which we ate? This is the role for insulin, a hormone made by the pancreas, letting glucose from the food we eat pass from the bloodstream into the cells in the body. If we are not able to produce insulin, the glucose levels in the blood raised leading to hyperglycaemia. In the long term high glucose levels can lead to irreparable damage to our body.\nThere are three types of diabetes:\n\nType 1 - body produces very little or no insulin, occurs most frequently in children and adolescents\nType 2 - body does not make good use of the insulin that it produces, more common in adults\nGestational diabetes (GDM) - consists of high blood glucose during pregnancy and is associated with complications to both mother and child.\n\nSome of the signs and symptoms of type 1 and type 2 diabetes are:\n\nIncreased thirst.\nFrequent urination.\nExtreme hunger.\nUnexplained weight loss.\nPresence of ketones in the urine (ketones are a byproduct of the breakdown of muscle and fat that happens when there's not enough      available insulin)\nFatigue.\nIrritability.\n\nTo answer the last question and calculate  the probability that I can suffer from diabetes, I decided to use Machine Learning to help me predict Diabetes.\nThe goal of the project is to choose the ML model with the best accuracy in predicting diabetes disease and use it in user application which help people decide if they are in risk group.\nIt is Machine Learning classification problem with two clasess: diabetes and non-diabetes. To summarize the performance of a classification algorithm I will be using accuracy, confusion matrix, recall, precision, F-measure.\n""], 'url_profile': 'https://github.com/zuz201', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['4', '          followers'], ['1', '          following'], ['0']], 'contributions': '71 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/HARSH777', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'Lagos, NIgeria', 'stats_list': [['44', '          followers'], ['66', '          following'], ['160']], 'contributions': '1,129 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Horpey', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'India', 'stats_list': [['3', '          followers'], ['5', '          following'], ['16']], 'contributions': '57 contributions\n        in the last year', 'description': ['Programming Language used:- Python\nLibraries used:- Numpy, Pandas, SciKit Learn, MatPlotLib, SeaBorn\nAlgorithms Used:- Logistic Regression, Decision Tree, Random Forest, SVM, KNN, Voting Classifier\nThis project aims at predicting the chances of a person being infected with Diabetes. As of now, the parameters used are the Number of Pregnancies, Glucose, Blood Pressure, Skin Thickness, Insulin, BMI, and Age.\nPreprocessing of the Data is done, thereby imputing null values, removing outliers, and determining the correlation between various parameters. Various classification algorithms are used to predict the values and I have written the code to automatically chose the best algorithm based on accuracies obtained in each process. The new data obtained, once verified can be added to the table.\nObtained Maximum accuracy of 76.61 percent using Random Forest( Entropy) Algorithm\n'], 'url_profile': 'https://github.com/SauAyan', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '145 contributions\n        in the last year', 'description': ['predicting-diabetes\nPredicting diabetes using KNN\n'], 'url_profile': 'https://github.com/s-mushnoori', 'info_list': ['3', 'CSS', 'Updated Oct 30, 2020', '2', 'JavaScript', 'Updated Jun 23, 2020', 'Updated Mar 4, 2020', 'Updated Mar 2, 2020', 'Updated Mar 8, 2020', 'Python', 'MIT license', 'Updated Apr 17, 2020', 'Jupyter Notebook', 'Updated Mar 6, 2020', 'Python', 'Updated Mar 7, 2020', '2', 'Jupyter Notebook', 'Updated Jul 25, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '8 contributions\n        in the last year', 'description': ['178awm_diabetes\n178 project on diabetes\nThe main folder contains code and data that is used for testing and\ngenerating graphs for the documentation.\nThe documentation folder is where we edit and submit our files, including\nand style and requirement section where we can reference on for the\nproject\n'], 'url_profile': 'https://github.com/William1129211', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'Greece', 'stats_list': [['4', '          followers'], ['3', '          following'], ['1']], 'contributions': '22 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/bgvas', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'New York', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '168 contributions\n        in the last year', 'description': ['README\nThis README would normally document whatever steps are necessary to get the\napplication up and running.\nThings you may want to cover:\n\n\nRuby version\n\n\nSystem dependencies\n\n\nConfiguration\n\n\nDatabase creation\n\n\nDatabase initialization\n\n\nHow to run the test suite\n\n\nServices (job queues, cache servers, search engines, etc.)\n\n\nDeployment instructions\n\n\n...\n\n\n'], 'url_profile': 'https://github.com/LainaJ', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '22 contributions\n        in the last year', 'description': ['Logistic-Regression\nLogistic regression on diabetes dataset\n'], 'url_profile': 'https://github.com/JanetMacrina', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '66 contributions\n        in the last year', 'description': ['diabetes_clf\nAll necessary csv files are available in their original form. To view this project, simply save all files into your google colab directory and check to see if the pre-set path variables are correct! If you are interested in what the various features that I used for diagnosis are please check out https://wwwn.cdc.gov/nchs/nhanes/Default.aspx !\n'], 'url_profile': 'https://github.com/jonahschimpf', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['3', '          following'], ['3']], 'contributions': '107 contributions\n        in the last year', 'description': ['Diabetes Prediction\nPima Indian diabetes prediction using CNN.\nData set\n\nThe dataset contains 768 records.\nYou can download the dataset from: Kaggle\n\nDependencies\n\nKeras\nnumpy\npandas\nsklearn\nmatplotlib\nitertools\n\nData split\nThe data was split in the following way:\n\n80% of the data for training and validation.\n20% of the data from the dataset is used for testing.\n\nBuild the model\n\nA model with the 3 Dense layers generated for training the dataset.\n\nTraining the model\nThe model was trained for 505 epochs and these are the loss and accuracy plots:\n\n*The model has overfit the data. You can add more data for better results.Overfitting\n\nPerformance Analysis\nConfusion Matrix\n\nF1_measure\n0.7086614173228\nAccuracy score\n0.7597402597402597\nRecall\n0.7758620689655172\nPrecision\n0.6521739130434783\nTo view more on how to evaluate performance analysis of a model visit : Performance measures\n'], 'url_profile': 'https://github.com/fervorArd', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'Bangalore, India', 'stats_list': [['0', '          followers'], ['8', '          following'], ['24']], 'contributions': '18 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/robonidos', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'Greater Noida', 'stats_list': [['3', '          followers'], ['2', '          following'], ['8']], 'contributions': '85 contributions\n        in the last year', 'description': ['Diabetese-prediction\n'], 'url_profile': 'https://github.com/Devansh-S', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['1', '          following'], ['6']], 'contributions': '64 contributions\n        in the last year', 'description': ['""Diabetes predictor""\nThis is a small project which takes input such as you BMI, Diabetes pedigree function etc and then analsis them and uses it to predict whether you are a diabteic patient or not.\nThe project is trained using Logistic regression model and i have implemented K cross validation technique to increase the accuracy.\nThe GUI is build using flask.\nIn order to run the project simply open the command prompt and type the following command:\n""python app.py""\nThis command will give you a localhost URL through which you can run the project!\nHappy coding!\n'], 'url_profile': 'https://github.com/jaskirat23', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['app-diabetes\n'], 'url_profile': 'https://github.com/OwnYourData', 'info_list': ['Jupyter Notebook', 'Updated Mar 3, 2020', 'C#', 'Updated Mar 9, 2020', 'Ruby', 'Updated Mar 5, 2020', 'Python', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 10, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 7, 2020', '1', 'HTML', 'Updated Mar 7, 2020', 'MIT license', 'Updated Mar 2, 2020']}"
"{'location': 'NONE', 'stats_list': [], 'contributions': '9 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/fxchalet', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'Stanford', 'stats_list': [['2', '          followers'], ['6', '          following'], ['2']], 'contributions': '45 contributions\n        in the last year', 'description': ['diabetes-prediction\ndeep learning prep for Atria\n'], 'url_profile': 'https://github.com/peachessteph', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '87 contributions\n        in the last year', 'description': [""Predicting Diabetes Readmission using Supervised Learning (Classification task)\nIntroduction\nReadmission within 30 days after hospitalization indicates that inadequate treatment was provided to the patient during his time at the hospital. Hospital readmissions cost a lot to the healthcare system and one solution is to provide additional assistance to patients with high risk of readmission. Furthermore, patients affected with diabetes are more subjected to readmissions than other medical conditions and we will therefore focus on this population in the scope of this project.\nThe goal of this project is to predict if a patient with diabetes will be readmitted within 30 days after hospitalization.\nDataset\nThe dataset used here represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes.\nThe dataset can be found in https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008 and is taken from -- Beata Strack, Jonathan P. DeShazo, Chris Gennings, Juan L. Olmo, Sebastian Ventura, Krzysztof J. Cios, and John N. Clore, “Impact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records,” BioMed Research International, vol. 2014, Article ID 781670, 11 pages, 2014. --\nMethod\nWe'll divide the project into 4 steps:\n\nProblem Description\nData Analysis and Preparation\nModelling and Evaluation\nConclusion\n\nInstead of just trying algorithms and see which perform best, we'll try to understand which algorithm would be best suited for this problem by exploring our data. We'll also assess the added value of the method from a business perspective.\n""], 'url_profile': 'https://github.com/cwaltregny', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'SF Bay Area', 'stats_list': [['6', '          followers'], ['0', '          following'], ['7']], 'contributions': '888 contributions\n        in the last year', 'description': ['Insuline Diabetes Manager\nArticle on my website.\nOur team deployed an app\xa0Insuline Diabetes Manager to help diabetic patients track and predict blood glucose levels! Front-End and Back-End Github\n\nUsing Michael Kahn, MD, Ph.D.\'s\xa0dataset, our data science team and I trained a model to predict the user\'s future blood glucose level base on insulin intake, previous blood glucose measurements and the time it was measured.\nOur API(http://diabetes-manager-app.herokuapp.com) takes in a json string inside a list of measurements, minimum of 3 days worth of measurements around breakfast, lunch and dinner. After sending the input to our API, it will respond with measurements predicting the next day\'s blood glucose level before and after each meal.\nThe input codes represents the following:\n33 = Regular insulin dose\n34 = NPH insulin dose\n35 = UltraLente insulin dose\n58 = Pre-breakfast blood glucose measurement\n59 = Post-breakfast blood glucose measurement\n60 = Pre-lunch blood glucose measurement\n61 = Post-lunch blood glucose measurement\n62 = Pre-supper blood glucose measurement\n63 = Post-supper blood glucose measurement\n\nExample input:\nval = [{""id"": 1,\n        ""timestamp"": ""2018-10-10 7:10"",\n        ""code"": 33,\n        ""value"": 10.0,\n        ""user_id"": 1},\n       {""id"": 2,\n        ""timestamp"": ""2018-10-10 9:10"",\n        ""code"": 59,\n        ""value"": 100.0,\n        ""user_id"": 1},\n       {""id"": 3,\n        ""timestamp"": ""2018-10-10 11:10"",\n        ""code"": 60,\n        ""value"": 180.0,\n        ""user_id"": 1},\n       {""id"": 4,\n        ""timestamp"": ""2018-10-10 19:10"",\n        ""code"": 63,\n        ""value"": 250.0,\n        ""user_id"": 1},\n       {""id"": 5,\n        ""timestamp"": ""2018-10-10 22:10"",\n        ""code"": 57,\n        ""value"": 300.0,\n        ""user_id"": 1},\n       {""id"": 6,\n        ""timestamp"": ""2018-10-11 9:10"",\n        ""code"": 33,\n        ""value"": 5.0,\n        ""user_id"": 1},\n       {""id"": 7,\n        ""timestamp"": ""2018-10-11 10:10"",\n        ""code"": 59,\n        ""value"": 150.0,\n        ""user_id"": 1},\n       {""id"": 8,\n        ""timestamp"": ""2018-10-11 13:10"",\n        ""code"": 60,\n        ""value"": 200.0,\n        ""user_id"": 1},\n       {""id"": 9,\n        ""timestamp"": ""2018-10-11 18:10"",\n        ""code"": 63,\n        ""value"": 100.0,\n        ""user_id"": 1},\n       {""id"": 10,\n        ""timestamp"": ""2018-10-11 00:10"",\n        ""code"": 57,\n        ""value"": 180.0,\n        ""user_id"": 1},\n       {""id"": 11,\n        ""timestamp"": ""2018-10-12 8:10"",\n        ""code"": 33,\n        ""value"": 7.0,\n        ""user_id"": 1},\n       {""id"": 12,\n        ""timestamp"": ""2018-10-12 8:10"",\n        ""code"": 59,\n        ""value"": 90.0,\n        ""user_id"": 1},\n       {""id"": 13,\n        ""timestamp"": ""2018-10-12 12:10"",\n        ""code"": 60,\n        ""value"": 130.0,\n        ""user_id"": 1},\n       {""id"": 14,\n        ""timestamp"": ""2018-10-12 20:10"",\n        ""code"": 63,\n        ""value"": 150.0,\n        ""user_id"": 1},\n       {""id"": 15,\n        ""timestamp"": ""2018-10-12 23:10"",\n        ""code"": 57,\n        ""value"": 200.0,\n        ""user_id"": 1}]\nExample Output:\n{\'Pre-breakfast measurement\': 185.87, \'Post-breakfast measurement\': 168.67, \n \'Pre-lunch measurement\':     119.76, \'Post-lunch measurement\':     201.92, \n \'Pre-supper measurement\':    122.47, \'Post-supper measurement\':    138.75}\n'], 'url_profile': 'https://github.com/gyhou', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['1', '          following'], ['0']], 'contributions': '39 contributions\n        in the last year', 'description': ['Diabetes_Prediction\nAlgorithms used :\nDecision Tree\nSVM\nNaive Bayes\nANN\nThis is a report for understanding which algorithm is performing well with the diabetes dataset.\n'], 'url_profile': 'https://github.com/vamshi1712', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['7', '          following'], ['435']], 'contributions': '50 contributions\n        in the last year', 'description': ['Diabetes-Classification\n'], 'url_profile': 'https://github.com/ayusdas2000', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [['0', '          followers'], ['0', '          following'], ['1']], 'contributions': '298 contributions\n        in the last year', 'description': ['diabetes-assist\nA work in progress\n'], 'url_profile': 'https://github.com/italiaiello', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '11 contributions\n        in the last year', 'description': ['diabetes-app\ndiabetes app that help to self monitor sugar levels, find foods and have a blog-post for people with the same ailment\n'], 'url_profile': 'https://github.com/bas-droid', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'Tamil Nadu, India', 'stats_list': [['0', '          followers'], ['0', '          following'], ['6']], 'contributions': '104 contributions\n        in the last year', 'description': ['Logistic-Regression---Diabetes Prediction\nPrediction of Diabetes(0/1) from various features using Pima Indians Diabetes dataset : https://data.world/uci/pima-indians-diabetes/workspace/file?filename=pima-indians-diabetes.data.csv\n'], 'url_profile': 'https://github.com/Bharathi-A-7', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}","{'location': 'NONE', 'stats_list': [['2', '          followers'], ['0', '          following'], ['0']], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/berkayozdin', 'info_list': ['R', 'Updated Mar 6, 2020', 'Python', 'MIT license', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'Jupyter Notebook', 'MIT license', 'Updated Mar 26, 2020', 'Jupyter Notebook', 'Updated Mar 5, 2020', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Jun 12, 2020', 'Updated Mar 5, 2020', 'Python', 'Updated Aug 5, 2020', 'HTML', 'Updated Mar 7, 2020']}"
"{'location': 'Dhaka,Bangladesh', 'stats_list': [['27', '          followers'], ['26', '          following'], ['64']], 'contributions': '284 contributions\n        in the last year', 'description': ['Diabetes-Prediction-Project\nApplication of Machine Learning and Feature Extraction in Diabetes Prediction\n'], 'url_profile': 'https://github.com/CodeMechanix', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'Banglore India', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '65 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kininge', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'NONE', 'stats_list': [['3', '          followers'], ['0', '          following'], ['0']], 'contributions': '33 contributions\n        in the last year', 'description': ['Project: Tensorflow Classification\nThe project is to investigate and analyze the Pima Indians Diabetes Database, producing\na model that can be used to predict the “class”.\nInstall\nThis project requires Python 3 and the following Python libraries installed:\n\nNumPy\nPandas\nmatplotlib\nscikit-learn\ntensorflow\n\nAll the above packages are can be installed with given Requirements.txt.\nCode\nComplete code implemented for this project is present in a single file TensorFlow_Classification.ipynb.\nProject\nDeveloped a neural network model using Tensorflow that would predict if a given person has been tested positive or negative for Diabetes.\nData\nhttps://archive.ics.uci.edu/ml/datasets/pima+indians+diabetes\n\n\nTitle: Pima Indians Diabetes Database\n\n\nSources:\n(a) Original owners: National Institute of Diabetes and Digestive and\nKidney Diseases\n(b) Donor of database: Vincent Sigillito (vgs@aplcen.apl.jhu.edu)\nResearch Center, RMI Group Leader\nApplied Physics Laboratory\nThe Johns Hopkins University\nJohns Hopkins Road\nLaurel, MD 20707\n(301) 953-6231\n(c) Date received: 9 May 1990\n\n\nPast Usage:\n\n\nSmith,~J.~W., Everhart,~J.~E., Dickson,~W.~C., Knowler,~W.~C., &\nJohannes,~R.~S. (1988). Using the ADAP learning algorithm to forecast\nthe onset of diabetes mellitus.  In {\\it Proceedings of the Symposium\non Computer Applications and Medical Care} (pp. 261--265).  IEEE\nComputer Society Press.\nThe diagnostic, binary-valued variable investigated is whether the\npatient shows signs of diabetes according to World Health Organization\ncriteria (i.e., if the 2 hour post-load plasma glucose was at least\n200 mg/dl at any survey  examination or if found during routine medical\ncare).   The population lives near Phoenix, Arizona, USA.\nResults: Their ADAP algorithm makes a real-valued prediction between\n0 and 1.  This was transformed into a binary decision using a cutoff of\n0.448.  Using 576 training instances, the sensitivity and specificity\nof their algorithm was 76% on the remaining 192 instances.\n\n\n\n\nRelevant Information:\nSeveral constraints were placed on the selection of these instances from\na larger database.  In particular, all patients here are females at\nleast 21 years old of Pima Indian heritage.  ADAP is an adaptive learning\nroutine that generates and executes digital analogs of perceptron-like\ndevices.  It is a unique algorithm; see the paper for details.\n\n\nNumber of Instances: 768\n\n\nNumber of Attributes: 8 plus class\n\nFor Each Attribute: (all numeric-valued)\n\nNumber of times pregnant\nPlasma glucose concentration a 2 hours in an oral glucose tolerance test\nDiastolic blood pressure (mm Hg)\nTriceps skin fold thickness (mm)\n2-Hour serum insulin (mu U/ml)\nBody mass index (weight in kg/(height in m)^2)\nDiabetes pedigree function\nAge (years)\nClass variable (0 or 1)\n\n\n\n\n\nMissing Attribute Values: Yes\n\n\nClass Distribution: (class value 1 is interpreted as ""tested positive for\ndiabetes"")\nClass Value  Number of instances\n0            500\n1            268\n\n\n'], 'url_profile': 'https://github.com/HarikaAncha', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'Bratislava, Slovakia', 'stats_list': [['11', '          followers'], ['11', '          following'], ['18']], 'contributions': '1,042 contributions\n        in the last year', 'description': ['Diabetes Patients Early Readmissions Prediction\nAuthors: Peter Macinec, Frantisek Sefcik\nInstallation and running\nTo run this project, please make sure you have Docker installed. After, follow the steps:\n\nGet into project root repository.\nBuild application using docker and start container:\n./scripts/run.sh -b\n\nNote: Next time, when no build is needed (because image has been already built), you can just run container by skipping -b argument.\n\nDo not forget to add dataset into data folder. Remember that csv file must be named data.csv.\nDataset\nDataset we used in this project is well-known Diabetes 130-US hospitals for years 1999-2008 Data Set.\nNote: Following description taken from UCI Machine Learning Repository.\nThe dataset represents 10 years (1999-2008) of clinical care at 130 US hospitals and integrated delivery networks. It includes over 50 features representing patient and hospital outcomes. Information was extracted from the database for encounters that satisfied the following criteria:\n\nIt is an inpatient encounter (a hospital admission).\nIt is a diabetic encounter, that is, one during which any kind of diabetes was entered to the system as a diagnosis.\nThe length of stay was at least 1 day and at most 14 days.\nLaboratory tests were performed during the encounter.\nMedications were administered during the encounter.\n\nThe data contains such attributes as patient number, race, gender, age, admission type, time in hospital, medical specialty of admitting physician, number of lab test performed, HbA1c test result, diagnosis, number of medication, diabetic medications, number of outpatient, inpatient, and emergency visits in the year before the hospitalization, etc.\nLinks on dataset:\n\nKaggle - Diabetes 130 US hospitals for years 1999-2008\nOriginal paper with data - go to Supplementary Materials section\nUCI Machine Learning Repository\n\n'], 'url_profile': 'https://github.com/pmacinec', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'Banglore India', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '65 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kininge', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'New York', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '168 contributions\n        in the last year', 'description': ['This project was bootstrapped with Create React App.\nAvailable Scripts\nIn the project directory, you can run:\nyarn start\nRuns the app in the development mode.\nOpen http://localhost:3000 to view it in the browser.\nThe page will reload if you make edits.\nYou will also see any lint errors in the console.\nyarn test\nLaunches the test runner in the interactive watch mode.\nSee the section about running tests for more information.\nyarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed!\nSee the section about deployment for more information.\nyarn eject\nNote: this is a one-way operation. Once you eject, you can’t go back!\nIf you aren’t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\nYou don’t have to ever use eject. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\nLearn More\nYou can learn more in the Create React App documentation.\nTo learn React, check out the React documentation.\nCode Splitting\nThis section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting\nAnalyzing the Bundle Size\nThis section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size\nMaking a Progressive Web App\nThis section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nAdvanced Configuration\nThis section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration\nDeployment\nThis section has moved here: https://facebook.github.io/create-react-app/docs/deployment\nyarn build fails to minify\nThis section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify\n'], 'url_profile': 'https://github.com/LainaJ', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '6 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AnantaKadyan', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '79 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sufian-ltd', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'Ahmedabad , Gujarat , India', 'stats_list': [['2', '          followers'], ['1', '          following'], ['0']], 'contributions': '69 contributions\n        in the last year', 'description': ['Diabetes-Prediction-using-Deep-Neural-Network\nWe use prima-indian-diabetes to predict diabetes with multiple input parameters . We achieve this goal by deep neural network implemented in Keras .\nThe datasets consist of several medical predictor (independent) variables and one target (dependent) variable, Outcome. Independent variables include the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\nPrima Indaians Diabetes Database is one the famous database on kaggle with 8 input parameters and a binary class output . Given below is the description of Input parameters and the Output Classification .\nPregnancies -  Number of times pregnant\nGlucose - Plasma glucose concentration a 2 hours in an oral glucose tolerance test\nBlood Pressure -  Diastolic blood pressure (mm Hg)\nSkin Thickness -  Triceps skin fold thickness (mm)\nInsulin2 - Hour serum insulin (mu U/ml)\nBMI - Body mass index (weight in kg/(height in m)^2)\nDiabetes Pedigree Function - Diabetes pedigree function\nAge - Age (years)\nOutcome - Class variable (0 or 1) 268 of 768 are 1, the others are 0\nTaking the 8 parameters as out input parameters and feeding them into a deep neural network with desiarable hidden layer and accurate function we can precicely classify the output as diabetic(1) or non-diabetic(0) for a person with particular characteristics .\n'], 'url_profile': 'https://github.com/kaushil268', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}","{'location': 'Kathmandu, Nepal', 'stats_list': [['6', '          followers'], ['43', '          following'], ['53']], 'contributions': '95 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/kshitijchaudhary', 'info_list': ['Jupyter Notebook', 'Updated Mar 11, 2020', 'Updated Mar 9, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Jupyter Notebook', 'Updated May 10, 2020', 'Dart', 'Updated Mar 30, 2020', 'JavaScript', 'Updated Mar 30, 2020', 'Updated Mar 8, 2020', 'Java', 'Updated Mar 4, 2020', 'Python', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'MIT license', 'Updated May 8, 2020']}"
"{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '79 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/sufian-ltd', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '50 contributions\n        in the last year', 'description': ['3. EDA and Machine Learning for Diabetes data by Pyhon\n12/2018.\nObjects:\nConduct exploratory analysis and utilize sci-kit learn to train and test a support vector machine (SVM) to detect diabetes.\nSteps:\nEDA:\n\nCleaning data.\nDescriptive Statistics.\nVisualization of important analysis.\nCorrelation and Visualization.\n\nML:\n\nSplit into train and test sets.\nImpute Na.\nScale the data.\nTrain the SVM models with ""rbf"" and ""polynomial"" kernel and hyperparameter tuning.\nUse confusion matrix to evaluate the models.\n\n'], 'url_profile': 'https://github.com/Jill219', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'Wales, UK', 'stats_list': [['839', '          followers'], ['2', '          following'], ['57']], 'contributions': '2,457 contributions\n        in the last year', 'description': ['Tidepool CLI tools\nLoading historical FreeStyle Libre data into Tidepool\nTidepool has an excellent tool for uploading data from a FreeStyle Libre reader device. You simple connect the reader to your machine with a USB cable and it will upload all the data stored in the reader.\nI had old data that I had exported from my reader that predates my use of Tidepool, and I wanted to upload it to Tidepool. The tools in this repository make this possible. Even if you don\'t have this need, the tools here may be useful for querying your data in Tidepool.\nNote that the tools here have had minimal testing and therefore may not work for your data. Always test any commands that modify data on a non-production server first.\nInstallation\nTo run the tools in this repository you will need to install Node.js.\nThen install the dependencies with\nnpm install\nBasic usage\nTest connectivity by running the time command. This does not require an account and just contacts the Tidepool API.\n$ node index.js time\n2020-02-20T11:41:30.736Z\nTest that you can retrieve some user data from Tidepool. This does require an account, so you will need to supply your username and password on the command line.\nThis will print all the entries (in JSON format) since midnight:\nnode index.js --username <username> --password <password> --start-date $(date \'+%Y-%m-%dT00:00:00.000Z\') show\nIf you have jq installed (brew install jq on a Mac), then you can query the output. E.g.\nnode index.js --username <username> --password <password> --start-date $(date \'+%Y-%m-%dT00:00:00.000Z\') show > out.json\ncat out.json | jq \'. | map(select(.type == (""cbg"", ""smbg""))) | length\' # number of BG readings\ncat out.json | jq \'. | map(select(.type == (""upload"")))\' # uploads (useful for getting dataset IDs)\ncat out.json | jq \'. | map(select(.type == (""cbg"")))[].time\' | sort | sed -n \'1p;$p\' # find time of first and last CBG reading\nConnecting to a different Tidepool server\nRather than connecting to the main production Tidepool server, you can use a different API endpoint, such as a local development server, or https://int-api.tidepool.org.\nnode index.js time --host \'https://int-api.tidepool.org\' --upload-api \'https://int-uploads.tidepool.org\' --data-host \'https://int-api.tidepool.org\'\n2020-02-20T11:41:30.736Z\nFreeStyle Libre reader exports\nData can be exported from the FreeStyle Libre reader as a TSV (tab-separated values) file. I do this periodically as a backup, and since the reader only holds 90 days of readings.\nThe files inevitably have duplicates (since each export contains everything in the reader), so I use the following bash command to merge and dedupe all the TSV files.\ntmp=(*.tsv)\nhead -2 ""${tmp[0]}"" > data/libre-merged.tsv\npython dedupe.py *.tsv | sed \'/^$/d\' | sort -t $\'\\t\' -k2 >> data/libre-merged.tsv\nTo find the first and last entry for each type of reading, use the following\ncbg (Continuous BG)\ncat data/libre-merged.tsv | awk -F $\'\\t\' \'{ if ($3 == 0) { print $2 } }\' | sort | sed -n \'1p;$p\'\nsmbg (self-monitored BG)\ncat data/libre-merged.tsv | awk -F $\'\\t\' \'{ if ($3 == 1) { print $2 } }\' | sort | sed -n \'1p;$p\'\nThis can be useful to see the range of readings in the file, in case you need to restrict it to a given time range before uploading.\nYou can also split the file by reading type, e.g.\nhead -2 data/libre-merged.tsv > data/libre-merged-0.tsv\ncat data/libre-merged.tsv | awk -F $\'\\t\' \'{ if ($3 == 0) { print } }\' | sort -t $\'\\t\' -k2 >> data/libre-merged-0.tsv\nUpload\nThe following command uploads the merged TSV file to Tidepool:\nnode index.js \\\n    --host \'https://int-api.tidepool.org\' --upload-api \'https://int-uploads.tidepool.org\' --data-host \'https://int-api.tidepool.org\' \\\n    --username <username> --password <password> \\\n    --device-serial-number <device-serial-number> \\\n    --tsv <tsv> \\\n    upload\nTo check it worked, log into the Tidepool app on the web.\nInteracting with Tidepool using curl\nYou can do most things using the Javascript API to Tidepool, however occasionally you may need to call the REST API directly using curl.\nThe following is based on notes from https://support.tidepool.org/hc/en-us/articles/360019872811-Export-your-data/\nFirst set a HOST environment variable:\nHOST=\'int-api.tidepool.org\'\nCheck the time:\ncurl -s -X GET ""https://$HOST/v1/time"" | python -m json.tool\nLogin:\nEMAIL=\'...\'\ncurl -v -X POST -u ""$EMAIL"" ""https://$HOST/auth/login""\nType in your password, then set the SESSION_TOKEN and USERID environment variables (see https://support.tidepool.org/hc/en-us/articles/360019872811-Export-your-data/ for details).\nSESSION_TOKEN=\'...\'\nUSERID=\'...\'\nDownload all data:\ncurl -s -X GET -H ""x-tidepool-session-token: $SESSION_TOKEN"" -H ""Content-Type: application/json"" ""https://$HOST/data/$USERID"" > data_download.json\nAll data after a given time:\ncurl -s -X GET -H ""x-tidepool-session-token: $SESSION_TOKEN"" -H ""Content-Type: application/json"" ""https://$HOST/data/$USERID?startDate=2020-01-01T00:00:00.000Z"" > data_download.json\nGet the datasets for a given user. (Datasets are associated with uploads.)\ncurl -s -X GET -H ""x-tidepool-session-token: $SESSION_TOKEN"" -H ""Content-Type: application/json"" ""https://$HOST/v1/users/$USERID/data_sets"" | python -m json.tool\nDelete the data associated with a given dataset. (This can be useful if you uploaded data using the CLI above, but want to delete it for some reason.)\nGet the dataset ID from the previous command.\nDATASETID=\'...\'\ncurl -X DELETE -H ""x-tidepool-session-token: $SESSION_TOKEN"" -H ""Content-Type: application/json"" ""https://$HOST/v1/datasets/$DATASETID""\nGet the most recent record for a given device\nDEVICEID=\'...\'\ncurl -s -X GET -H ""x-tidepool-session-token: $SESSION_TOKEN"" -H ""Content-Type: application/json"" ""https://$HOST/v1/users/$USERID/data_sets?deviceId=$DEVICEID&size=1"" | python -m json.tool\nRunning unit tests\nnpm test\n'], 'url_profile': 'https://github.com/tomwhite', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'United States', 'stats_list': [['4', '          followers'], ['18', '          following'], ['7']], 'contributions': '170 contributions\n        in the last year', 'description': ['About Dataset\nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases.\nThe objective of the dataset is to diagnostically predict whether or not a patient has diabetes,\nbased on certain diagnostic measurements included in the dataset. Several constraints were placed\non the selection of these instances from a larger database. In particular, all patients here are females\nat least 21 years old of Pima Indian heritage.\nLanguage Used\nR\n'], 'url_profile': 'https://github.com/aamanpandey', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': '15 contributions\n        in the last year', 'description': ['Health-care-Analysis\nUsed ML techniques to build a model to accurately predict whether the patients have diabetes or not.\nDiabetes is considered as one of the deadliest and chronic diseases which causes an increase in blood sugar level.\nThere are many complications, if diabetes remains untreated and unidentified.\nSometimes it is tedious in identifying if the person is having diabetes or not.\nThis critical problem is solved by the rise in machine learning approaches.\nThe motive of this Project is to design a model which can prognosticate the likelihood of diabetes in patients with maximum accuracy.\nTherefore, two machine learning classification algorithms namely Decision Tree, and K- Nearest Neighbors are used in this experiment to detect diabetes at an early stage.\nExperiments are performed on Pima Indians Diabetes Database (PIDD) which is sourced from from NIDDK.\nThe performances of these two algorithms are evaluated on various measures like Precision, Accuracy, F-Measure, and Recall.\nResults obtained are verified using Receiver Operating Characteristic (ROC) curves in a proper and systematic manner and The Project also generalizes the selection of optimal features from dataset to improve the classification accuracy.\n'], 'url_profile': 'https://github.com/prakathi2000', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'NONE', 'stats_list': [['1', '          follower'], ['0', '          following'], ['0']], 'contributions': '27 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/AurinTabassum007', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'NONE', 'stats_list': [['23', '          followers'], ['10', '          following'], ['0']], 'contributions': '53 contributions\n        in the last year', 'description': ['Quantifying future insulin need and use among people with type 2 diabetes mellitus in the United States, 2020-2030: A microsimulation model\nSanjay Basu1,2,3*, Hui Shao4, Jing Luo5, Kasia Lipska6, Katie J. Suda5,7, John S. Yudkin8\n1 Center for Primary Care, Harvard Medical School\n2 Research and Analytics, Collective Health\n3 School of Public Health, Imperial College London\n4 Department of Pharmaceutical Outcomes and Policy, College of Pharmacy, University of Florida\n5 Division of General Internal Medicine, Department of Medicine, University of Pittsburgh\n6 Section of Endocrinology, Department of Internal Medicine, Yale University School of Medicine\n7 Center for Equity Research and Promotion, Veterans Affairs Pittsburgh Health Care System\n8 Institute of Cardiovascular Science, Division of Medicine, University College London\n*sanjay_basu@hms.harvard.edu\nInsulin remains essential for people with type 1 diabetes mellitus and frequently prescribed for people with type 2 diabetes. Insulin prices in the United States have tripled over the past decade,1 particularly given the increasing frequency of insulin analog prescriptions.2 Insulin price increases have been linked to cost-related insulin underuse and “stretching” of insulin prescriptions (e.g., patients using fewer units per day to make a vial last longer), which may produce both short-term risks of hypo- or hyper-glycemia as well as long-term risks of microvascular events.3 Insulin cost regulatory measures have been proposed, and include capping patient copayments for insulin purchases, instituting international reference pricing standards, or encouraging expanded manufacturing to more suppliers using regulatory powers that usurp patent rules, among other policies.4–6 Insulin manufacturing stimulus strategies, to increase supply and reduce unit price, require a detailed understanding of insulin needs for the population. In turn, estimates of population-level insulin need depend upon on understanding the impact of various therapies on levels of glycemic control (both in terms of insulin dosing, i.e., what dose of insulin will result in a specific level of glycemic control, and--for people with type 2 diabetes--in terms of the impact of non-insulin therapies on glycemic control), and what insulin dosing is optimal to avoid both over-treatment and under-treatment.7\nIn this study, we sought to estimate present and future population-level insulin need and dispensation among people with type 2 diabetes mellitus in the United States. We sought to compare reported insulin dispensed per person to the estimates of insulin need based on projected insulin dosing from a weight-based estimate of need, applied to data from nationally-representative repeated cross-sectional surveys. We used a microsimulation model to incorporate projections of future type 2 diabetes prevalence in the United States, titration of non-insulin hypoglycemics, and treatment with insulin under alternative targets for glycemic control.\nReferences\n1\tHua X, Carvalho N, Tew M, Huang ES, Herman WH, Clarke P. Expenditures and Prices of Antihyperglycemic Medications in the United States: 2002-2013. JAMA 2016; 315. DOI:10.1001/jama.2016.0126.\n2\tLuo J, Avorn J, Kesselheim AS. Trends in Medicaid Reimbursements for Insulin From 1991 Through 2014. JAMA Intern Med 2015; 175. DOI:10.1001/jamainternmed.2015.4338.\n3\tHerkert D, Vijayakumar P, Luo J, et al. Cost-Related Insulin Underuse Among Patients With Diabetes. JAMA Intern Med 2019; 179. DOI:10.1001/jamainternmed.2018.5008.\n4\tSocal MP, Greene JA. Interchangeable Insulins - New Pathways for Safe, Effective, Affordable Diabetes Therapy. N Engl J Med 2020; 382: 981–3.\n5\tLuo J, Gellad WF. Origins of the Crisis in Insulin Affordability and Practical Advice for Clinicians on Using Human Insulin. Curr Diab Rep 2020; 20: 2.\n6\tFralick M, Kesselheim AS. The U.S. Insulin Crisis - Rationing a Lifesaving Medication Discovered in the 1920s. N Engl J Med 2019; 381. DOI:10.1056/NEJMp1909402.\n7\tVijan S, Sussman JB, Yudkin JS, Hayward RA. Effect of Patients’ Risks and Preferences on Health Gains With Plasma Glucose Level Lowering in Type 2 Diabetes Mellitus. JAMA Intern Med 2014; 174. DOI:10.1001/jamainternmed.2014.2894.\n'], 'url_profile': 'https://github.com/sanjaybasu', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'Medellín, Colombia', 'stats_list': [['2', '          followers'], ['1', '          following'], ['1']], 'contributions': '12 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Andreat19', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'NONE', 'stats_list': [], 'contributions': 'NONE', 'description': ['MyPersonalConnectedHealth (MyPCH)\nThere are 425 million adult people (1 out of 11) diagnosed with Diabetes in the world today and it is a growing epidemic. The diabetes treatment is a very complex puzzle to get the right dose of medicine and many people do not have adequate resources to follow the prescribed dose regimes. This leads to serious healthcare issues and increased costs.\nThe good news is that technology like self-monitoring devices of blood glucose can help solve the dose puzzle by using a data-driven diabetes management approach. Sharing these new digital health data from self-monitoring devices with doctors, researchers and others is indispensable for success.\nWe believe that our innovation is a paradigm shift in sharing self-monitoring health data. The innovation will be open source, empower the individual by sharing data in a secure, trusted, auditable, traceable and consensus-based way inspired by MyData principles.\nDiabetes Services, Denmark\nOwnYourData, Austria\n'], 'url_profile': 'https://github.com/MyPCH', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}","{'location': 'Halifax, Nova Scotia, Canada', 'stats_list': [['3', '          followers'], ['1', '          following'], ['8']], 'contributions': '30 contributions\n        in the last year', 'description': ['NONE'], 'url_profile': 'https://github.com/Ketan14a', 'info_list': ['PHP', 'Updated Mar 4, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'JavaScript', 'Updated Mar 6, 2020', 'Updated Aug 7, 2020', 'Jupyter Notebook', 'Updated Mar 2, 2020', 'Jupyter Notebook', 'Updated Mar 3, 2020', 'MIT license', 'Updated Jun 25, 2020', 'Jupyter Notebook', 'Updated Mar 8, 2020', 'Updated Mar 8, 2020', '1', 'Python', 'Updated Mar 8, 2020']}"
