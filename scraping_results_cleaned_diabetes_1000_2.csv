Location,Followers,Following,Stars,Contributions,Description,Url_profile,Info
"Barkhamsted, CT",468,6,131,32, diabetesneuralnetwork a neural network using keras that classifies risk for diabetes based on health data ,https://github.com/jg-fisher,Python
"Mountain View, CA",37,0,0,4, this repo contains the jupyter notebook for predicting hospital readmission for patients with diabetes using the dataset from uci machine learning repository https archive ics uci edu ml datasets diabetes 130 us hospitals for years 1999 2008 the methodology behind this notebook is explained in my medium blog post https towardsdatascience com predicting hospital readmission for patients with diabetes using scikit learn a2e359b15f0 this project was created based on the conda environment yml file provided in the repo ,https://github.com/andrewwlong,Jupyter Notebook
BeiJing,2,2,17,23, medicaltreat_diabetes 天池精准医疗大赛 人工智能辅助糖尿病遗传风险预测 止步初赛 215 2522 ,https://github.com/LCJHust,Python
"São Paulo, SP Brasil",518,92,36,30, diabetes mais doce aplicativo para ajudar pessoas diabéticas a buscar quantidade de carboidratos de alimentos salvar refeições e glicemias diárias gerar tabelas com esses resultados para médicos entre outras coisas a ideia é facilitar o dia a dia de uma pessoa diabética ,https://github.com/FernandaBernardo,TSQL
Jamshedpur,5,17,48,0, ml_from_scratch diabetes mellitus prediction using machine learning ,https://github.com/AntimKhel,Jupyter Notebook
Chile,20,4,38,18, diabetes mellitus prediction in pima indians this repository was created to show the workshop for switch fb developer circle which is going to take place on 05 08 2017 títle proceso crisp dm aplicado a la predicción de la diabetes mellitus con datasets públicos the content of the workshop is divided into two stages theoretical 1 the crisp dm and bab process 2 scrum agile and how to mix it with data science from my experience 2 explanation of the problem to solve structure and problems that we face in the dataset hands on 1 understanding and characterization of the data 2 eda for the data understanding 3 data preparation 4 application of logistic gridsearch algortihm and random forest models 5 performance analysis 6 conclusions in the future tbd according to the feedback of the first audience in the dev circle ago 2017 in scl cl the force be with you ,https://github.com/iair,Jupyter Notebook
"Charlotte, NC",3,0,0,0, healthcare data analysis on pima indian diabetes database knowledge discovery in database in this project we focused our analysis on applying data analysis techniques create visualizations and interpret the models using histograms scatter plots and many other visual plots etc to uncover the reason for high diabetic outcome among the pima indian women predict whether the patient is diagnosed with diabetes based on diagnostic measurements available in the dataset we obtained this dataset from kaggle and built some supervised explanatory models classification tree and logistic regression and predictive models knn also tried unsupervised techniques such as k means clustering and kohonen s self organizing map som languages and tools used r programming r studio weka and tableau ,https://github.com/HRakesh,R
Goiânia - GO,64,12,2,69, analise exploratória de casos de diabetes análise exploratória utilizando pandas e numpy e criação de modelo de classificação com machine learning para casos de diabetes os modelos criados para testes foram naive bayes random forest logistic regression para utlização do modelo a fins de testes foi utilizado uma api com o flask ,https://github.com/cicerojmm,Jupyter Notebook
"San Jose, CA",6,0,19,6, diabetes prediction data mining project to detect if a person is diabetic using logistic regression in r dataset description in particular all patients here are females at least 21 years old of pima indian heritage number of instances 768 number of attributes 8 plus class attributes number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 or 1 class distribution class value 1 is interpreted as tested positive for diabetes class value number of instances 0 500 1 268 ,https://github.com/jerisalan,MIT license
"Salt Lake City, UT",0,1,0,0, diabetes management while there are a variety of technologies out there today that make managing diabetes easier they are generally single purpose and integration of information between multiple devices can mean double or triple entry of information the goal of this project is to improve visibility with minimal lift by extracting information from various monitoring and management devices to allow for insights that are not possible on their own additionally this will generate a tabular version of the omnipod data extracting information from comments etc for easier analysis after cloning this repository and installing the required software you ll need to enter the name of your files and run all cells in the jupyter notebook background though not all of this is yet included here is some useful background information related to the data sources a1c the measure of glycolated hemoglobin in the blood this is generally speaking a 3 month average of blood sugar a good target range is 7 0 bolus insulin an amount of insulin taken at once basal insulin a rate of insulin released into the body over time throughout the day different parts of the day will have different basal insulin rates bg or bg a common abbreviation for blood sugar blood glucose cgm continuous glucose monitor dexcom is an example of a cgm a cgm takes samples of blood sugar from interstitial fluid rather than directly from the blood as a result cgm blood sugar values are generally considered to be 10 15 minutes behind the actual blood sugar getting started currently this project supports two types of csv or xlsx files omnipod log files freestyle copilot health management system there is no export option but you can easily copy and paste all of this data as is into an excel or csv file dexcom export from your dexcom clarity account maximum download is 90 days https clarity dexcom com reports export to use this package clone the repository and move copies of your omnipod and dexcom data into the corresponding folders in the repository for reference files are places in the repository now once all files are located in their place you will just need to use the file paths folder within the jupyter notebook to get started omnipod meal bolus insulin taken for food eaten bolus insulin a bolus taken for any reason where the reason is not specified in the device correction bolus insulin taken if blood glucose levels are above target a correction bolus is broken out separately from a meal bolus when bg is above the target iob insulin on board fast acting insulin is used in insulin pumps omnipod medtronic etc when calculating how much insulin to take either the person or the device must understand how much insulin is already in the body to calculate a correct dose if insulin is not used within 20 minutes after it entered the body it will be be excreted with no effect on blood sugar extended meal bolus bolus insulin delivered over a time period in the omnipod data this is seen as a fraction 0 4 40 of the meal bolus for example will be delivered after a designated time period since some foods take longer for the body to digest into sugars that can be processed by the insulin extended meal boluses allow for a programmatic way to handle complex foods i e pizza blood sugar bg target a numeric value that the device uses to calculate the ideal blood sugar and uses to calculate the amount of insulin to deliver dexcom calibration a dexcom g5 is generally celibrated 2x per day each calibration takes 2 back to back blood sugar readings lifecycle the life of a single device is about 7 days after 7 days the site is switched and there is a two hour warm up phase required to activate the new site note for a variety of reasons the dexcom calibration may not be accurate some of these reasons include blood sugar volatility during the warm up phase of the device occurs weekly a faulty insertion blood affecting the measurement or over calibration prerequisites will add requirements file software freestyle copilot health management system for instructions https www myomnipod com learning center download software download abbott python jupyter notebook python packages to install imports are in the file but you made need to install some first holoviews bokeh os pandas datetime dateutil numpy contributing as this project is further developed i will open it up for contribution if you are interested in seeing any particular data sources added please contact me chelsea lapeikis gmail com versioning version 0 1 12 15 2017 authors chelsea lapeikis initial work chelseamlap license this project is licensed under the gnu license see the license md file for details acknowledgments my husband for expanding my understanding of the complex world of diabetes management and for explaining the many variables that exist within each of the systems ,https://github.com/chelseamlap,GPL-3.0 license
Singapore,3,1,18,19, diabetespredictionsystemprototype neural network big data the design of the diabetes prediction system based on neural network we used the pybrain as the neural network data training and prediction framework it s a prototype based on python with django as the programing language and framework purpose we are going to develop an online system that is used to predict females health conditions especially for diabetes after initial specification we decide to use the neural network as an approach to train the prediction model otherwise some web pages using will be the user interfaces because we are lack of clarity in conceptual design we are going to build an experimental prototype that could help us to complement the specification this prototype will have high fidelity and become a part of the system in the future in this prototype we are mainly focus on the following points choosing the best neural network that could generate efficient and accurate algorithm and using the trained model to do the prediction service building a stable and excellent interactive interface test scenarios enter the main page by 127 0 0 1 8000 main then click the start button to enter the data processing page in this page it shows the related algorithm to do the data processing and there are two options one is the show the raw data button to show the list of the raw training data the other one is data processing to do the processing enter the data processing page we could see the data which we remove from the raw data based on the outlier algorithm of the box plot moreover the processed data can be shown by clicking the show processed data button and the following step can be processed by clicking the training and test button after clicking the training and test button the client will send the request for training and test the processed data to the server by jquery ajax cause the training and test stage will spend longer time comparatively and the server will begin training and test the related data then the result will show on the next page then just clicking the predict button two options multiple record predict and single record predict can be chosen for the prediction stage for the multiple record prediction just uploading the csv file with the related format and for the single record prediction just filling with the blanks still using jquery javascript to control the input then the prediction output will be shown on the page then there still are two options that one is prediction by the current trained neural network model and the other is return to the main page ,https://github.com/xljiadahao,HTML
"San Francisco, CA",4,3,15,81, diabetes pancreas local development nvm use npm install npm start you ll need to make sure you have nvm installed and the proper version of node as specified in the nvmrc file installing nvm and the required version of node npm install g nvm nvm install ,https://github.com/jakobsandberg,"Updated Aug 23, 2018"
Hamburg,22,19,27,28, diabertie diabertie is a personal diabetes chatbot it uses the awesome telegram bot api you can send diabertie your blood sugar levels insulin doses and whatever is important for your daily diabetes logging for a detailed documentation on how to use this bot there is a detailed guide on that contribute you are very encouraged and welcome to contribute to this project as long as you stick to the code of conduct run development server you have to set some environment variables there is a env example with all the needed variables npm run dev run tests npm test ,https://github.com/sebashwa,JavaScript
"Syracuse, New York, US",5,1,7,82, hospital readmission based on diabetesdata problem statement diabetes is a widespread chronic disease that is accompanied with irregularities of blood glucose levels due to problems related to insulin for diabetes the cost analysis estimates that 250 million can be saved across 98 000 diabetic patients by incorporating predictive modeling and prompting greater attention to those who were predicted to get readmitted hospital readmission rates are an indicator of hospital quality as well as a means to reduce healthcare costs high readmission rate is an indication of poor hospital quality poor treatment and results in the hospital getting penalized hence by identifying the factors that lead to higher readmission and being able to predict if a patient is going to be readmitted the treatment provided by the hospital can be changed to avoid a readmission and thereby the quality of healthcare provided to the patient can be largely improved as well as billions of dollars can be saved data science methodology by leveraging the dataset we will perform extensive exploratory data analysis and perform feature engineering to identify the suitable attributes that are having significant effects on the target variable i e readmission after doing exploratory data analysis eda and feature selection we can build classification and clustering machine learning models in order to predict whether the patient is going to be readmitted or not we are planning on implementing classification algorithms like logistic regression svm feedforward neural network etc and clustering techniques like kmeans and hierarchical agglomerative clustering algorithms in order to produce the optimum number of clusters we will then go ahead with the clustering algorithm that produces clusters with the highest purity and least entropy extensive model fine tuning can be done in order to build a model with the best accuracy and recall the recall is more important in this case as it is very important to minimize recall by reducing the false negatives as incorrectly classifying a patient as not readmitted when he she is going to be readmitted can be very problematic and is highly undesirable project objective the objective of the project is to help the hospitals accurately predict if a patient is going to get readmitted after discharge the predictions made will help the hospital make informed decisions on the necessary treatment process alterations in order to reduce patient readmission rate in this context you can see different objective functions for the problem we have to try to figure out situations where the patient will not be readmitted or if they are going to be readmitted in less than 30 days make your choice and let s help them create new approaches for the problem we will try to predict which factors are more important in determining if a patient might get readmitted within 30 days expected results by accurately predicting if a patient is going to be readmitted the hospital will be able to taking into account the patient demographics the treatment procedure and medicines make necessary treatment changes to avoid the patient readmission this reduction in patient readmission rate will help the hospital save billions of dollars and also improve their customer rating the process of eda followed by model building fine tuning and performance evaluation is an iterative process which can be carried out until the best and desirable results are achieved dataset source prediction on hospital readmission classification using diabetes dataset is obtained from the uci ml repository the data set represents 10 years 1999 2008 of clinical care at 130 us hospitals and integrated delivery networks the data has around 100k observations and 50 attributes the data contains categorical attributes such as race admission type insulin medical specialty of admitting etc and binary variables such as gender change diabetes medicine and numeric variables like age time in hospital number of lab test performed number of medication number of outpatient inpatient and emergency visits in the year before the hospitalization the target variable has 3 different classes which are no readmission a readmission in less than 30 days a readmission in more than 30 days ,https://github.com/Laxman-Kumar,Jupyter Notebook
London,136,54,38,9133, diabetes dashboard a dashing dashboard driven by my pancreas api right now it shows daily weekly and 30 day blood glucose graphs and averages weekly breakfast lunch dinner and bedtime medication graphs and averages latest hba1c there ll be a lot more sophisticated stuff here once i ve worked out coffeescript and rickshaw deployment this is a straight up rack app it should deploy right onto heroku the heroku environment will need to know about metrics_api_username and metrics_api_password to access the pancreas api you ll have set these here and dashboard_username and dashboard_password which will allow you into the dashboard dashing is awesome see http shopify github com dashing for more on dashing ,https://github.com/pikesley,JavaScript
Vancouver,13,11,57,0, medical machine learning predicting hospital readmission for patients with diabetes mellitus data taken from http archive ics uci edu ml datasets diabetes 130 us hospitals for years 1999 2008 running for preprocess r to work download the data set from the above link and place diabetic_data csv in dataset_diabetes folder the r script has no dependencies source the script from the folder where this readme is located once the data is generated by preprocess r run train_randomforest py to train the model and print importance results it depends on pandas numpy and scikit learn ,https://github.com/prollynomial,Python
Krauschwitz,4,8,24,52, fpe rechner this app is designed to help diabetics to calculate the fat protein units fat protein units will additionally to the bread units calculated please check with a doctor previously it is not a officially approved medical application extra tools food database factor database by time converter for mg dl and mmol l communities follow on google donations donate with paypal logo ,https://github.com/Matze1985,GPL-3.0 license
Pune,0,7,0,0, machine learning in healthcare 1 machine learning for diagnosis of diabetes with python ,https://github.com/BKhairkhar,Jupyter Notebook
"Denver, Colorado",0,7,0,6, diabetes a test case illustrating the use of spark on real time iot data challenge the standard of care for type 2 diabetes includes monitoring average blood insulin level over three months new advances in medicine and data engineering allow for granular monitoring and care recommendations our challenge is to ingest data from personal health monitors securely transmit that data to the cloud apply data science analysis and display current status to the patient and care givers solution the first prototype uses python code on a raspberry pi to generate mock patient data streams simulating an oem diabetes monitor we ingest json data as mqtt packets into amazon aws iot subsequent iterations used a direct connection to kafka running on an ec2 instance which allows us to ingest streams from multiple patients maintain fault tolerance and enable multiple consumers to subscribe kinesis was also tested as an alternative to kafka from kafka kinesis or aws iot the next step is to subscribe to topics and ingest the data into longer term storage in s3 a small spark 2 1 cluster running on ec2 instances is used for this purpose we wrote code for spark in scala which reads json streams from a kafka topic transforming and joining the data into normalized formats then writing out the stream to parquet files on s3 that are partitioned by time and patientid for analysis and display of the patient condition the parquet files are analyzed in databricks notebooks running spark 2 2 the notebooks use regression and classification algorithms to score the current status of the patient and prioritize patients for home care visits ,https://github.com/brantseibert,"Updated Mar 27, 2017"
"Pune , Maharastra",4,9,18,0, diabetes ,https://github.com/Bhasha4995dusara,Jupyter Notebook
bangalore,4,9,18,1, diabetes ,https://github.com/vikassrm,"Updated Aug 20, 2018"
"Berkeley, CA",1,0,0,10, to see what this project is about and follow its analysis visit my portfolio a special thanks to temi lal and charles thorson for their help this project would not have been possible without them ,https://github.com/Zubair-Marediya,"Updated Feb 17, 2016"
Nigeria,0,1,0,20, diabetes prediction ,https://github.com/Dandignity,Jupyter Notebook
Oslo Norway,55,7,25,3403, diabetes an android app to record and display blood sugar measurements and store them in the cloud ,https://github.com/donv,"Updated May 11, 2015"
"Razole ,East Godavari, Andhra Pradesh",55,7,25,301, diabetes implementation our implementation is mainly divided into five steps exploring the data exploring the data using jupyter notebook and verify we need to data preprocessing or not for this dataset there is no need to data preprocessing before split into train and test data check outcome balanced or in balance whether it is in balanced then we used f1_score split into train and test in this we will use train_test_split which is available in sklearn model selection where we will be dividing the data into train 80 and test splits of 20 benchmark model vs other models we can choose our benchmark model as logisticregression because it is simple and easy to implement we will apply a series of classification algorithms like logistic regression decision trees random forests etc the next step is to find and compare f1_scores of all the models against the benchmark model apply grid search optimization since we can observe that the model with f1_score is random forests with an f1_score of 97 65 we can select random forest for further optimizing it by applying the same algorithm on a different set of parameters to find the one with the best f1_score display results here we will apply many supervised learning algorithms and decide which algorithm is best suited for our dataset we can apply the grid search on some chosen algorithms to decide the best parameters among many finding gridsearchcv optimal f1_score changing parameters to get best optimal f1_score gridsearchcv parameters like n_estimator max_depth etc to get best f1_score for this best classification model using gridsearchcv i faced some more extra time taken to find best f1_score to change parameters to this diabetes machine learning project external libraries used scikit learn 2 numpy 3 matplotlib 4 pandas data 1 diabetes dataset available from kaggle here https www kaggle com johndasilva diabetes 2 also included in directory of repository in original form ,https://github.com/tejaanuchuri,"Updated Jul 9, 2020"
Madrid,19,45,889,15, diabetes a symfony project created on january 11 2016 4 21 pm ,https://github.com/izquierdogalan,Apache-2.0 license
Mumbai,4,14,200,0, diabetes ,https://github.com/saurabh9969,"Updated Oct 12, 2018"
Toronto,2,8,1,12, diabetes tracking i realized that i need to keep track of where things are currently at but also to be able to look back in time so here we are ,https://github.com/dafydd61,Python
KITALE,2,7,38,37, diabetes diabetes android mangement system ,https://github.com/obadiahkorir,Java
"Mangaluru,India",32,25,63,407, instructions to be followed install the below required packages django pip install django tensorflow pip install tensorflow pillow pip install pillow pip install pil numpy pip install numpy configuration to be made inside diabetic_retinopathy settings py at last you have to put your local path to output directory currently it is my local path note currently the models have been trained using tesnsorflow keras you can find the models inside diab_retina_app model folder to execute the project run the below command python manage py runserver input choose the test image from the test directory given inside the project ie diab_retina_app test training images are not included in the folder since it s a large collection the same images you have sent have been used for training you are free to edit the front end processing logic as per your need ,https://github.com/thealoneprogrammer,Python
Shanghai,9,30,30,255, diabetesdetection 人工智能课程项目android端代码 目的是实现糖尿病风险评估的交互界面 ,https://github.com/syz913,"Updated Dec 30, 2019"
Athens,3,2,2,0, diabetes prediction using various machine learning algorithms to get the best prediction accuracy if possible for the pima indians dataset the best result was found with gradientboosting with an accuracy of 83 install xa0 xa0 xa0 python version used in this project 3 6 6 xa0 xa0 xa0 libraries used pandas 0 23 4 numpy 1 15 3 matplotlib 2 2 2 scikit learn 0 20 0 scipy 1 1 0 how to run to run this project you will need some software like anaconda from anaconda just set as working directory the folder of the project open the py file you want from models folder and run this file or press f5 ,https://github.com/OperatingFuture,JavaScript
Boston,17,0,6,30, simglucose a type 1 diabetes simulator implemented in python for reinforcement learning purpose this simulator is a python implementation of the fda approved uva padova simulator 2008 version for research purpose only the simulator includes 30 virtual patients 10 adolescents 10 adults 10 children how to cite jinyu xie simglucose v0 2 1 2018 online avaible https github com jxx123 simglucose accessed on month date year note simglucose only supports python3 animation cvga plot bg trace plot risk index stats main features simulation enviroment follows openai gym and rllab apis it returns observation reward done info at each step which means the simulator is reinforcement learning ready supports customized reward function the reward function is a function of blood glucose measurements in the last hour by default the reward at each step is risk t 1 risk t risk t is the risk index at time t defined in this paper supports parallel computing the simulator simulates mutliple patients parallelly using pathos multiprocessing package you are free to turn parallel off by setting parallel false the simulator provides a random scenario generator from simglucose simulation scenario_gen import randomscenario and a customized scenario generator from simglucose simulation scenario import customscenario commandline user interface will guide you through the scenario settings the simulator provides the most basic basal bolus controller for now it provides very simple syntax to implement your own controller like model predictive control pid control reinforcement learning control etc you can specify random seed in case you want to repeat your experiments the simulator will generate several plots for performance analysis after simulation the plots include blood glucose trace plot control variability grid analysis cvga plot statistics plot of blood glucose in different zones risk indices statistics plot note animate and parallel cannot be set to true at the same time in macos most backends of matplotlib in macos is not thread safe windows has not been tested let me know the results if anybody has tested it out installation it is highly recommended to use pip to install simglucose follow this link to install pip auto installation pip install simglucose manual installation git clone https github com jxx123 simglucose git cd simglucose if you have pip installed then pip install e if you do not have pip then python setup py install if rllab optional is installed the package will utilize some functionalities in rllab note there might be some minor differences between auto install version and manual install version use git clone and manual installation to get the latest version quick start use simglucose as a simulator and test controllers run the simulator user interface from simglucose simulation user_interface import simulate simulate you are free to implement your own controller and test it in the simulator for example from simglucose simulation user_interface import simulate from simglucose controller base import controller action class mycontroller controller def __init__ self init_state self init_state init_state self state init_state def policy self observation reward done info every controller must have this implementation inputs observation a namedtuple defined in simglucose simulation env for now it only has one entry blood glucose level measured by cgm sensor reward current reward returned by environment done true game over false game continues info additional information as key word arguments simglucose simulation env t1dsimenv returns patient_name and sample_time output action a namedtuple defined at the beginning of this file the controller action contains two entries basal bolus self state observation action action basal 0 bolus 0 return action def reset self reset the controller state to inital state must be implemented self state self init_state ctrller mycontroller 0 simulate controller ctrller these two examples can also be found in examples folder in fact you can specify a lot more simulation parameters through simulation simulate sim_time my_sim_time scenario my_scenario controller my_controller start_time my_start_time save_path my_save_path animate false parallel true openai gym usage using default reward import gym register gym environment by specifying kwargs you are able to choose which patient to simulate patient_name must be adolescent 001 to adolescent 010 or adult 001 to adult 010 or child 001 to child 010 from gym envs registration import register register id simglucose adolescent2 v0 entry_point simglucose envs t1dsimenv kwargs patient_name adolescent 002 env gym make simglucose adolescent2 v0 observation env reset for t in range 100 env render mode human print observation action in the gym environment is a scalar representing the basal insulin which differs from the regular controller action outside the gym environment a tuple basal bolus in the perfect situation the agent should be able to control the glucose only through basal instead of asking patient to take bolus action env action_space sample observation reward done info env step action if done print episode finished after timesteps format t 1 break customized reward function import gym from gym envs registration import register def custom_reward bg_last_hour if bg_last_hour 1 180 return 1 elif bg_last_hour 1 70 return 2 else return 1 register id simglucose adolescent2 v0 entry_point simglucose envs t1dsimenv kwargs patient_name adolescent 002 reward_fun custom_reward env gym make simglucose adolescent2 v0 reward 1 done false observation env reset for t in range 200 env render mode human action env action_space sample observation reward done info env step action print observation print reward format reward if done print episode finished after timesteps format t 1 break rllab usage from rllab algos ddpg import ddpg from rllab envs normalized_env import normalize from rllab exploration_strategies ou_strategy import oustrategy from rllab policies deterministic_mlp_policy import deterministicmlppolicy from rllab q_functions continuous_mlp_q_function import continuousmlpqfunction from rllab envs gym_env import gymenv from gym envs registration import register register id simglucose adolescent2 v0 entry_point simglucose envs t1dsimenv kwargs patient_name adolescent 002 env gymenv simglucose adolescent2 v0 env normalize env policy deterministicmlppolicy env_spec env spec the neural network policy should have two hidden layers each with 32 hidden units hidden_sizes 32 32 es oustrategy env_spec env spec qf continuousmlpqfunction env_spec env spec algo ddpg env env policy policy es es qf qf batch_size 32 max_path_length 100 epoch_length 1000 min_pool_size 10000 n_epochs 1000 discount 0 99 scale_reward 0 01 qf_learning_rate 1e 3 policy_learning_rate 1e 4 algo train advanced usage you can create the simulation objects and run batch simulation for example from simglucose simulation env import t1dsimenv from simglucose controller basal_bolus_ctrller import bbcontroller from simglucose sensor cgm import cgmsensor from simglucose actuator pump import insulinpump from simglucose patient t1dpatient import t1dpatient from simglucose simulation scenario_gen import randomscenario from simglucose simulation scenario import customscenario from simglucose simulation sim_engine import simobj sim batch_sim from datetime import timedelta from datetime import datetime specify start_time as the beginning of today now datetime now start_time datetime combine now date datetime min time create random scenario specify results saving path path results create a simulation environment patient t1dpatient withname adolescent 001 sensor cgmsensor withname dexcom seed 1 pump insulinpump withname insulet scenario randomscenario start_time start_time seed 1 env t1dsimenv patient sensor pump scenario create a controller controller bbcontroller put them together to create a simulation object s1 simobj env controller timedelta days 1 animate false path path results1 sim s1 print results1 create custom scenario create a simulation environment patient t1dpatient withname adolescent 001 sensor cgmsensor withname dexcom seed 1 pump insulinpump withname insulet custom scenario is a list of tuples time meal_size scen 7 45 12 70 16 15 18 80 23 10 scenario customscenario start_time start_time scenario scen env t1dsimenv patient sensor pump scenario create a controller controller bbcontroller put them together to create a simulation object s2 simobj env controller timedelta days 1 animate false path path results2 sim s2 print results2 batch simulation re initialize simulation objects s1 reset s2 reset create a list of simobj and call batch_sim s s1 s2 results batch_sim s parallel true print results run analysis offline example offline_analysis py from simglucose analysis report import report import pandas as pd from pathlib import path get the path to the example folder exmaple_pth path __file__ parent find all csv with pattern csv e g adolescent 001 csv result_filenames list exmaple_pth glob results 2017 12 31_17 46 32 csv patient_names f stem for f in result_filenames df pd concat pd read_csv str f index_col 0 for f in result_filenames keys patient_names report df release notes 5 27 2020 add pidcontroller at simglucose controller pid_ctrller there is an example at examples run_pid_controller py showing how to use it 9 10 2018 controller policy method gets access to all the current patient state through info patient_state 2 26 2018 support customized reward function 1 10 2018 added workaround to select patient when make gym environment register gym environment by passing kwargs of patient_name 1 7 2018 added openai gym support use gym make simglucose v0 to make the enviroment noticed issue the patient name selection is not available in gym make for now the patient name has to be hard coded in the constructor of simglucose envs t1dsimenv reporting issues shoot me any bugs enhancements or even discussion by creating issues how to contribute the following instruction is originally from the contribution instructions of sklearn the preferred workflow for contributing to simglucose is to fork the main repository on github clone and develop on a branch steps fork the project repository by clicking on the fork button near the top right of the page this creates a copy of the code under your github user account for more details on how to fork a repository see this guide clone your fork of the simglucose repo from your github account to your local disk git clone git github com yourlogin simglucose git cd simglucose create a feature branch to hold your development changes git checkout b my feature always use a feature branch it s good practice to never work on the master branch develop the feature on your feature branch add changed files using git add and then git commit files git add modified_files git commit to record your changes in git then push the changes to your github account with git push u origin my feature follow these instructions to create a pull request from your fork this will send an email to the committers if any of the above seems like magic to you please look up the git documentation on the web or ask a friend or another contributor for help ,https://github.com/jxx123,Kotlin
"San Luis Potosi, Mexico",10,0,15,45, raman diabetes the dataset of our work where the application of portable raman spectroscopy coupled with several supervised machine learning techniques is used to discern between diabetic patients dm2 and healthy controls ctrl with a high degree of accuracy download dataset from https www kaggle com codina raman spectroscopy of diabetes this script pre processes the spectra to reproduce fig 1 of our paper guevara e torres galván j c ramírez elías m g luevano contreras c gonzález f j 2018 use of raman spectroscopy to screen diabetes mellitus with machine learning tools biomedical optics express 9 10 4998 5010 https doi org 10 1364 boe 9 004998 copyright c 2018 edgar guevara phd conacyt universidad autónoma de san luis potosí coordinación para la innovación y aplicación de la ciencia y la tecnología ,https://github.com/guevaracodina,JavaScript
San Francisco,244,63,646,91, decoding omnipod hacking diabetes give me my data helping send me your packet captures fork this repo sign up for a free github account they support sign in with google and it s a great service then press the fork button then git clone git github com yourname decoding omnipod git cd decoding omnipod git checkout b yourname mkdir yourname cp path to captures yourname git add v git commit am yourname adding captures for bewest et al git push u origin yourname then you can send me an email or a pull request ,https://github.com/bewest,Python
"Hangzhou, China",9,13,62,0, background it was reported that in 2011 more than 3 3 million patients were readmitted in the us within 30 days of being discharged and they were associated with about 41 billion in hospital costs the need for readmission indicates that inadequate care was provided to the patient at the time of first admission the readmission rate has become an important metric measuring the overall quality of a hospital diabetes is the 7th leading cause of death and affects about 23 6 million people in the us 1 4 million americans are diagnosed with diabetes every year hospital readmission being a major concern in diabetes care over 250 million dollars was spent on treatment of readmitted diabetic patients in 2011 early identification of patients facing a high risk of readmission can enable healthcare providers to conduct additional investigations and possibly prevent future readmissions in this project i build a machine learning classifier model to predict diabetes patients with high risk of readmission note that higher sensitivity recall is more desirable for hospitals because it is more crucial to correctly identify high risk patients who are likely to be readmitted than identifying low risk patients please open the jupyter notebook file to see the details dataset description the dataset represents 10 years 1999 2008 of clinical care at 130 us hospitals and integrated delivery networks it includes 50 features representing 101766 diabetes patient and hospital outcomes information was extracted from the database for encounters that satisfied the following criteria it is an inpatient encounter a hospital admission it is a diabetic encounter that is one during which any kind of diabetes was entered to the system as a diagnosis the length of stay was at least 1 day and at most 14 days laboratory tests were performed during the encounter medications were administered during the encounter the data contains such attributes as patient number race gender age admission type time in hospital medical specialty of admitting physician number of lab test performed hba1c test result diagnosis number of medication diabetic medications number of outpatient inpatient and emergency visits in the year before the hospitalization etc source uci machine learning repository https archive ics uci edu ml datasets diabetes 130 us hospitals for years 1999 2008 ,https://github.com/swengzju,TypeScript
"San Francisco, CA",6,4,7,0, readme disclaimer the glucosy site is intended to provide general information only it is not to be relied upon for medical advice the content of the site is not intended to be a substitute for professional medical advice diagnosis or treatment do not disregard your doctor s instructions or delay in seeking medical attention because of any information provided by glucosy overview the glucosy app was built to assist those those diagnosed with type 1 diabetes manage their blood sugar levels more effectively gems libraries and add ons forecastio weather api heroku scheduler background task scheduling mandrill automatic emailing nutritionix nutrition information api geocoder api dropzone upload files via drag n drop in browser chartjs charts carrierwave file upload bootstrap design and styling jquery library handlebars library underscore library database activerecord and postgres are used to manage the database if you would like to setup your own instance of the site use rake to create and migrate the database primary functionality users have the ability to upload data from their digital blood sugar monitor and review this data in chart format the site also provides information on the carbohydrate content for more than 300 000 food items a calculator also produces an estimate of the amount of insulin required to offset the carbohydrates in a meal based on the user s input of foods that comprise the meal registered users are sent daily weather updates via email with details on any significant temperature changes that are forecast over the coming week the location for the forecast will be the location from where the user last logged into the site bugs currently we are unaware of any bugs in the code if you happen to stumble across a bug or fault please contact us via github thanks and acknowledgements as always the team would like to thank joel and jack for the blood sweat and tears they gave during project week you guys were instrumental in helping us achieve our goal and making the site a success special mention to james gregory of thoughtworks who so generously provided his extremely valuable time thoughts and guidance throughout the project naturally huge thanks and applause must go to bishin sox tom and xander who sacrificed sleep and put their lives on hold for a week to make that the project was delivered on time good work team ,https://github.com/xandero,TSQL
Boston,84,15,49,271, diabetes_prediction predicting diabetes among pima population overview diabetes mellitus commonly referred to as diabetes affects over 29 million people in the united states diabetes arises due to improper production and or functioning of the hormone insulin resulting in impaired metabolism of carbohydrates leading to a high level of glucose in the blood molecular mechanism of diabetes and its adverse impact on the body is well documented with animations in the following video pima indians living in arizona have the highest rate of obesity and diabetes ever recorded thus i will be using data collected from pima indians to predict diabetes with machine learning diabetes and its adverse impact on body ,https://github.com/SayantanMitra87,Jupyter Notebook
"Russia, Saint Petersburg",2,5,12,826, diacomp diabetes diary analytical system features tracking patient data bs measurements meal insulin dosage etc making sophisticated adaptive math model insulin dosage calculating shared extendable food dish databases visual analyzing platforms android web java windows delphi links official site google play ,https://github.com/bosik,Jupyter Notebook
Bengaluru,23,0,5,407, neural network sklearn neural network implementation on pima indian diabetes dataset ,https://github.com/bmonikraj,R
delhi india,1,0,7,4, personalised diabetes care assistant tagline a smart app for persons with type ii diabetes to manage their blood glucose levels by providing personalized recommendations on exercise using reinforcement learning summary paragraph the management of type ii diabetes is multimodal the interplay between diet blood sugar lowering medications and exercise dictate the changes in the blood glucose levels for a given diet a balance between adequate exercise and medications can effectively maintain blood glucose within a normal range by using reinforcement learning our application learns a person s response to medications and exercise overtime the app helps minimize the person s dependance on medications for maintaining optimal blood glucose levels by providing personalized recommendations on exercise type duration and intensity solution we identify persons at increased risk for type ii diabetes using a standard questionnaire from those persons at increased risk or with diabetes additional information on their blood glucose exercise sleep insulin use etc is obtained these are evidence based factors that play a role in the changes in blood glucose levels to begin with the user receives standard evidence based recommendations on exercise 150 mins week of moderate intensity exercise as the user continues to use the application his her information is used to train a reinforcement learning based model to predict the best combination of insulin and exercise needed to maintain blood glucose within a normal range by providing recommendations on exercise levels the app aims to minimize insulin use and motivate people to use exercise more effectively in the management of their blood glucose team members dr rahul gaiba resident physician rahulgaiba gmail com sumit rathore sumitrathore1313 gmail com aditya rustagi rustagiadi95 gmail com ,https://github.com/sumitrathore1313,JavaScript
Patna,10,17,5,152, early stage diabetes prediction deployed this repository consists of files required to deploy a machine learning web app created with flask on heroku platform dataset link https archive ics uci edu ml datasets early stage diabetes risk prediction dataset if you want to view the deployed model click on the following link deployed at https early diabetes pred herokuapp com please do the repository if it helped you in anyway a glimpse of the web app ,https://github.com/Sonalikhasyap15,Jupyter Notebook
Bangalore,15,13,27,139, diabetesdetectionapp discription this is a ml oriented web application for detection of the diabetes based on the parameters that the user enters it predicts whether it is benign or malignant by learning from the parameters we have developed a deep neural network model to classify if the user has diabetes or not the model is trained based on the pima indian diabetes dataset dataset the pima indian diabetes dataset from national institute of diabetes and digestive and kidney diseases includes cost data donated by peter turney the attributes are as follows number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 or 1 technology used for the front end html5 css and bootstrap has been used flask based python is the backend all interactions with the backend are made via restful api calls a python ml model has been used to predict the disease stage the weights of the trained model are saved and when a call is made to predict the model inference is done based on the model weights iframes have been used to implement ajax patterns what does the application have homepage dashboard ,https://github.com/shreyavshetty,HTML
Pune,3,4,2,33, diabetes prediction data visualization and exploratory data analysis are performed on pima indians diabetes dataset the aim is to construct a classifier to predict whether a patient has diabetes based on a set of diagnostics after cleaning the data importance of features are analyzed using different methods fir machine learning model we have used two algorithm that is knn and logistic regression ,https://github.com/pratik7478,HTML
"Lagos,Nigeria",10,34,27,93, diabetesdiagnosis this is a project for the front end of a final year project i m working on the whole idea of the project is to have inputs from a form interact with a backend algorithm in python this algorithm which has already been trained with real life data theen predicts the possibility of a patient being diabetic or not results annd suggestions are sent back to the user to help make lifestyle choices that would improve their health with regards to being diabetic ,https://github.com/temideewan,Jupyter Notebook
Shanghai,29,42,101,67, diabetes prediction 天池上糖尿病预测比赛 题目给出一些血常规的样本和对应的血糖结果 然后再给一批血常规样本 叫我们预测结果 虽然有点玄学 但是题目至此 也就将就着做了 采用catboost和xgboost都尝试了一下 大致结果还行 ,https://github.com/zhusleep,JavaScript
"Swansea, Wales, United Kingdom",14,2,35,1471, webusb uploader upload diabetes data using just the power of the web ,https://github.com/gniezen,Python
"Wroclaw, Poland",2,5,13,127, node js expert system diabetes expert system diabetes using node js this expert system is develeoped using node js and module used is rools rools is a rule engine library that can be used for expert system module used rools https www npmjs com package rools see complete documentation here https docs google com document d 1s0moio2wxfilw1bqwukt8xegvtnwrpmk7xbbncelrpq edit usp sharing how to start npm install npm start access localhost 1996 this expert system is built for detecting diabetes based on these 4 aspects symtoms there are 10 symptoms and 2 medical tests checking wheter parents have diabetic history medical test fasting here we cal it fpg medical fasting two hour after fasting here we call it gthae explanation of each aspects symptoms always feeling thirsty urination especially during the night often feeling hunger weight loss with no reason loss of muscle mass there is keton in urine weak lemas indonesian problem with sight pandangan kabur scars take long time to heal often get infected for example in gusi kulit vagina atau saluran kemih according to the resource a person can be identified as having diabetic if has 2 symptoms diabetic parent according to the reasearch if a person has parent with diabetic it can give more probability of having diabetic fasting after 8 hours this test is kind of medical test that is done after fasting for 8 hours this fasting is only for not eating food or drink something containing energy or sugar drink pure water is allowed according this medical test here are the criteria kadar gula darah normal di bawah 100 mg dl pradiabetes 100 125 mg dl diabetes di atas 125 mg dl gtwo hour a test that is taken 2 hours after the last eating according this medical test here are the critera kadar gula darah normal di bawah 140 mg dl pradiabetes 140 199 mg dl diabetes lebih dari 200 mg dl calculation for calculation purposes to get the precentage each aspects has maximum score of 25 this expert system is created based on these resources https www alodokter com diabetes https hellosehat com pusat kesehatan diabetes kencing manis serba serbi pemeriksaan diabetes di rumah https www id wikihow com mengetahui apakah anda menderita diabetes https www webmd com diabetes how sugar affects diabetes 1 https www webmd com diabetes diagnosing type 2 diabetes 1 https www cdc gov media presskits aahd diabetes pdf ,https://github.com/ZenHuzaini,GPL-3.0 license
"Seoul, South Korea",23,30,24,599, exploration 5 regression regression 문제 당뇨병 예측 bike sharing demand https www kaggle com c bike sharing demand ,https://github.com/ljh415,Jupyter Notebook
"Fulda,Germany",2,1,1,7, diabetes monitoring is a project based on the glucosio project essentially for learning and training purposes ,https://github.com/benjaminbamanya,R
Gurgaon,5,1,0,18, diabetes here i will introduce you to identification and dealing with outliers then we will do cluster based modeling to predict if a person will be diabetic or not ,https://github.com/Puneettt,"Updated Jul 31, 2020"
Travelling across the USA,1,2,11,56, notes initialize git repo yay we did it xamarin based data collection app for initial data set prototype to future user interface storing initial data set easy way to start is to use a text file csv on server instance eventually use database instance need server instance eventually anyway cloud based app service with python code aws or azure aws is freer azure is better integrated for xamarin ,https://github.com/Spencer-Weston,MIT license
Oslo Norway,55,7,25,3403, diabetes an android app to record and display blood sugar measurements and store them in the cloud ,https://github.com/donv,Jupyter Notebook
"Banglore,India",0,11,17,193, diabetes predicting if a patient has diabetes or not using the dataset from kaggle called pima indians diabetes database ,https://github.com/Siddhesh19991,MIT license
India,1,2,0,0, diabetesprediction python gui that predicts diabetes using logistic regression ,https://github.com/Anamika36,"Updated Mar 9, 2018"
Cotia - São Paulo,3,7,2,50, diabetestimer estudos com js contador de tempo para medição de glicemia para diabéticos após refeições autoria script js baseado em versão de outro autor e aplicado de forma estudada com variações minhas cabiveis ao meu projeto versão 1 0 ,https://github.com/LuizBlading,"Updated Dec 30, 2019"
San Francisco Bay Area,3,0,1,0, diabetes2 a brief analysis of the uc irvine diabetes dataset 1999 2008 this is a work in progress the dataset used here represents 10 years 1999 2008 of clinical care related to inpatient diabetes treatment at 130 us hospitals and integrated delivery networks it includes over 50 features representing patient and hospital outcomes information was extracted from the health facts database cerner corporation kansas city mo a national data warehouse that collects comprehensive clinical records across hospitals throughout the united states my objective in analyzing this dataset is to see if i can duplicate results from the 2014 paper listed in the references section of the ipython notebook in particular i will train a logistic regression model to predict whether a patient will be readmitted within 30 days of discharge ,https://github.com/jonneff,"Updated Dec 27, 2015"
Stoke on Trent. UK,699,0,19,73, blueberry welcome to the new open source 100 000 diabetes project in this i aim to create the entire applications and system for a new diabetes app that helps diabetics manage and have more fun managing their condition ,https://github.com/angelsix,Python
"Dhaka, Bangladesh",14,43,28,32, prima indian datasets diabetes prediction research paper link https dl acm org citation cfm id 3297737 description about dataset the prima indian diabetes dataset has been used in this study provided by the uci machine learning repository the dataset has been originally collected from the national institute of diabetes and digestive and kidney diseases the dataset consists of some medical distinct variables such as pregnancy record bmi insulin level age glucose concentration diastolic blood pressure triceps skin fold thickness diabetes pedigree function etc this dataset has 768 patient s data where all the patients are female and at least 21 years old the number of true cases are 268 34 90 and the number of false cases are 500 65 10 respectively in the dataset i used six classification techniques artificial neural network ann support vector machine svm decision tree dt random forest rf logistics regression lr and naïve bayes nb ,https://github.com/razuswe,JavaScript
"Hyderabad, India",14,25,23,78, pima indians diabetes dataset classification abstract the diabetes dataset is a binary classification problem where it needs to be analysed whether a patient is suffering from the disease or not on the basis of many available features in the dataset different methods and procedures of cleaning the data feature extraction feature engineering and algorithms to predict the onset of diabetes are used based for diagnostic measure on pima indians diabetes dataset keywords machine learning pima indians diabetes dataset binary classification features feature extraction feature engineering support vector machine mlp neural netwroks decision tree linear regression heat map pairplot violin plot feature importance database pima indians diabetes dataset pima indian diabetes dataset has 9 attributes in total all the person in records are females and the number of pregnancies they have had has been recorded as the first attribute of the dataset second is the value of plasma glucose concentration a 2 hours in an oral glucose tolerance test and then is the diastolic blood pressure mm hg fourth in line is the triceps skin fold thickness mm then is the 2 hour serum insulin mu u ml sixth is body mass index weight in kg height in m 2 and then seventh is the diabetes pedigree function and the second last value is the that of the age years the ninth column is that of the class variable 0 or 1 0 for no diabetes and 1 for the presence to start with we first take a description of the dataset we infer not much from this except the facts like we have a data datset of 768 lines and the maximum values of the age and pregnancies nothing more is of much use for the prediction we also calculated the number of datsets that were positive to the test of diabetes and those who were negetive and the value came out to be 268 and 500 respectively we decided to take the mean value of bmi and found that the average value of a person suffering from the disease has mean bmi value as 35 14 which means that they are not healthy and obese it is also interesting to note that the mean bmi value for the people who are not suffering from the disease is 30 which is the threshold value of people becoming obese the mean value of the second parameter glucose plasma glucose concentration was done we found that those who suffered from the disease had mean value as 141 25 which indicates pre diabetic state of hyperglycaemia that is associated with insulin resistance and increased risk of cardiovascular pathology methodology a a decision tree is a decision support tool that uses a tree like graph or model of decisions and their possible consequences including chance event outcomes resource costs and utility it is one way to display an algorithm that only contains conditional control statements decision trees are commonly used in operations research specifically in decision analysis to help identify a strategy most likely to reach a goal but are also a popular tool in machine learning decision tree algorithm follows the attribute feature best for set is taken as root distribute the set into different sets having same attribute values for particular value repeat the above steps till we get to the leaf nodes of the tree where no further division can take place b in statistics linear regression is a linear approach for modelling the relationship between a scalar dependent variable y and one or more explanatory variables or independent variables denoted x the case of one explanatory variable is called simple linear regression for more than one explanatory variable the process is called multiple linear regression this term is distinct from multivariate linear regression where multiple correlated dependent variables are predicted rather than a single scalar variable c a multilayer perceptron mlp is a class of feedforward artificial neural network an mlp consists of at least three layers of nodes except for the input nodes each node is a neuron that uses a nonlinear activation function mlp utilizes a supervised learning technique called backpropagation for training its multiple layers and non linear activation distinguish mlp from a linear perceptron it can distinguish data that is not linearly separable d in machine learning support vector machines svms also support vector networks are supervised learning models with associated learning algorithms that analyse data used for classification and regression analysis given a set of training examples each marked as belonging to one or the other of two categories an svm training algorithm builds a model that assigns new examples to one category or the other making it a non probabilistic binary linear classifier although methods such as platt scaling exist to use svm in a probabilistic classification setting an svm model is a representation of the examples as points in space mapped so that the examples of the separate categories are divided by a clear gap that is as wide as possible new examples are then mapped into that same space and predicted to belong to a category based on which side of the gap they fall conclusion we applied many algorithms and did a lot of feature manipulation and extraction we got the best accuracy of 80 5 using svm a lot of information about the dataset was also extracted without using complex algorithms we were also able to perform a lot of exploratory data analysis and came to many conclusions random forest and ensemble learning can probably find a better result our result was also very close to the best result found and this shows that at the right parameters svm can be a good and practical choice to classify a medical data ,https://github.com/KriAga,Kotlin
India,9,0,19,28, diabetes prediction using machine learning objective techniques used data cleaning data visualization machine learning modeling algortihms used logistic regression support vector machine knn random forest classifier naivye bayes gradient boosting model evaluation methods used accuracy score roc auc curve cross validation confusion matrix guide lines packages and tools required pandas matplotlib seaborn scikit learn jupyter notebook package installation pip install numpy pip install pandas pip install seaborn pip install scikit learn pip install matplotlib jupyter notebook installation guide https jupyter org install ,https://github.com/MrKhan0747,Python
"Austin, TX",18,1,18,0, yadla yadla exists right now as two parts the first is an android app to view nightscout data on an android phone agp and daily views are available there is also an uploader to insert dexcom g4 g5 not yet supported and tandem t slim and probably other tandem pump data into a nightscout instance to use download the release alrightypump commandline tar gz or alrightypump commandline zip archive and run alrighty pump commandline bin alrightypump commandline sh bat http secret password nightscout example com port ,https://github.com/mgranberry,Python
"Toronto, Canada",80,9,17,731, building a binary classification ml model to predict hospital readmission in patients with diabetes this is an introductory workshop to data science using python we ll be building a binary classification model to predict hospital readmission in patients with diabetes a large focus will be on data pre processing which is a key part of the machine learning pipeline key topics include exploratory data analysis data cleaning feature selection supervised learning binary classification hyperparameter tuning we ll be using these packages to do our analysis pandas numpy matplotlib seaborn scikit learn our dataset is from the uci machine learning repository which includes patient and hospital outcome data from 130 u s hospitals collected from 1999 to 2008 workshop slides are hosted here getting started there are two options for setting up your environment on your local machine on the cloud using google colab if you re relatively new to python and programming we highly recommend starting with the cloud option which doesn t require any setup the only requirement is a gmail account if you decide to run the tutorial on your local machine make sure that your environment is running on python 3 6 and has jupyter notebook installed you will need to install several pacakges which can be found in requirements txt pip install r requirements txt the detailed walkthrough can be found here you can follow along with the fill in the blank version here ,https://github.com/topspinj,TypeScript
Planet Earth,4,0,0,36, title author date output type 2 diabetes treatment pathways rohit vashisht 3 23 2017 html_document learning effective clinical treatment pathways for type 2 diabetes from observational data objective treatment guidelines for the management of type 2 diabetes mellitus t2dm are controversial because existing evidence from randomized clinical trials do not address many important clinical questions an earlier investigation led by observational health data science ohdsi group reveled heterogeneity in the practice of both first and second line treatment choices in t2d with respect to established clinical guidelines the choice of an optimal second line drug among available options sulfonylureas dpp4 inhibitors thiazolidinediones remains ambiguous in this study we seek to compare sulfonylurea dpp4 inhibitors and thiazolidinediones when prescribed after metformin for outcomes related to reduction in hba1c 7 events related to myocardial infarction kidney and eye related disorders within ohdsi network rationale type 2 diabetes t2dm affects an estimated 29 1 million people in the united states its global prevalence is projected to reach 440 million adults by the end of 2030 current treatment guidelines which are derived from a few randomized controlled trials recommend the use of metformin as first line monotherapy however when metformin exhibits adverse effects or fails to control diabetes the second line therapy must be chosen and there is little consensus on how to choose a second line therapy with the american diabetes association recommending sulfonylureas meglitinide pioglitazone or dipeptidyl peptidase 4 inhibitor dpp4 as second line agent and the american association of clinical endocrinologists recommending alpha glucose inhibitors dpp4 inhibitors and glp 1 agonist given the availability of myriad treatment options for second line therapy the problem of selecting an optimal second line agent requires urgent attention project lead s rohit vashisht ken jung alejandro schuler juan banda james weaver martijin schuemie patrick ryan and nigam shah coordinating institution s stanford university study protocol a detailed study protocol is provided in this repository with file name t2d_study_protocol docx r package this is an r package that can be used to execute t2d study an in depth discussion on the study design can be found at link to protocol very briefly the r package enables one to decipher effective treatment pathways of t2d in terms of controlling a hba1c b less adverse events in terms of myocardial infraction c less adverse events in terms of kidney related disorders and d less adverse events related to eyes disorder a step by step guide to execute this study is provided below step 1 the package can be installed as follows library devtools install_github rohit43 diabetestxpath step 2 make sure you have installed all the latest versions of the following packages the study might throw an error in case old packages are loaded load the required libraries as follows library ohdsirtools library ohdsisharing library sqlrender library databaseconnector library featureextraction library cohortmethod library empiricalcalibration library diabetestxpath step 3 setup your jbc driver environment and connection details as follows jdbcdrivers new env connectiondetails createconnectiondetails dbms yourdatabase server yourserver user yourusername password yourpassword port yourport step 4 provide database schema name and other details as follows cdmdatabaseschema nameofyourcdmschema resultsdatabaseschema nameofresultsschema targetdatabaseschema nameofresultsschema make sure to add at the end of results_path in case you don t have that otherwise no folder will be created and the study might crash results_path path to results folder where you want the results to be saved for example results_path users rvashisht desktop studyresults will save the study results in studyresults folder in desktop cdmversion 5 do not change this please note this study can only be executed on cdmv5 maxcores 40 change this depending on your compute power step 5 the complete study can be executed with a single function as shown below please note this function will run the study for all the 4 different outcomes a hba1c b myocardial infraction c kidney disease and d eyes related disorders considered in this analysis the script to run the complete study is below runcompletestudy connectiondetails connectiondetails cdmdatabaseschema cdmdatabaseschema resultsdatabaseschema resultsdatabaseschema cdmversion cdmversion results_path results_path maxcores maxcores important the runcompletestudy function will create a folder deletemebeforesharing please do not share this folder make sure to delete this folder from your results folder before sharing rest of the results package the results as follows packageresults connectiondetails connectiondetails cdmdatabaseschema cdmdatabaseschema workfolder results_path dbname cdmdatabaseschema time of execution can vary from few hours to day or two depending on the size of the dataset you have ,https://github.com/rohit43,TSQL
"Portland, Oregon",18,26,93,191, glukit requirements install google app engine go sdk https developers google com appengine downloads google_app_engine_sdk_for_go read the getting started case in case of need https developers google com appengine docs go gettingstarted devenvironment get ruby only for scss support compass bower and claymate for gumby and front end safekeeper for generating source with client ids secrets go get github com alexandre normand safekeeper go in view and run claymate install setup environment variables with the following and run go generate github com alexandre normand glukit app secrets local_client_id google client id for localhost local_client_secret google client secret for localhost prod_client_id prod_client_secret test_stripe_key stripe test key test_stripe_publishable_key stripe test publishable key prod_stripe_key prod_stripe_publishable_key setup client ids and secrets using the datastore administration ui as an osin client entity generate a client secret using something like openssl rand base64 24 generate a client id using something like echo openssl rand hex 14 mygluk it note the redirecturi expected by the authenticating application i e x glukloader oauth callback create a new osin client entity using those values the key identifier should match the generated client id misc to make scss changes use compass build or compass watch running it from execute goapp serve and hit http localhost 8080 deploy gcloud app deploy ,https://github.com/alexandre-normand,Jupyter Notebook
"Islamabad, Pakistan",4,1,4,35, feature extraction of diabetic retinopathy using fundus images diabetic retinopathy is a very common eye disease in people having diabetes this disease can lead to blindness if not taken care of in early stages this project is a part of the whole process of identifying diabetic retinopathy in its early stages in this project we will extract basic features which can help us in identifying diabetic retinopathy in its early stages there are many clinical features of diabetic retinopathy but in this project we focused on retinal blood vessels and exudates prerequisites python 2 7 python editor any of your choice dataset kaggle provides a very hefty and diverse dataset that contains round about 30 000 images you can download it from here project structure blood vessels py contains code for blood vessels extraction from fundus images exudates py contains code for exudates extraction from fundus images mainwindow py main gui component windowframe py gui container for child controls author abdul rasheed ,https://github.com/ebdulrasheed,Jupyter Notebook
Sri Lanka,17,31,131,826, data warehouse of diabetic data dataset url https archive ics uci edu ml datasets diabetes 130 us hospitals for years 1999 2008 attribute info https www hindawi com journals bmri 2014 781670 tab1 dimensional model build data warehouse step 01 create schema for staging area use following query to create the database named diabetes_dwh_staging and tables database diabetes_dwh_staging tables dataset admission_source admission_type discharge_disposition query to execute drop schema if exists diabetes_dwh_staging create schema diabetes_dwh_staging default character set utf8 collate utf8_general_ci use diabetes_dwh_staging create table if not exists diabetes_dwh_staging dataset encounter_id int null comment patient_nbr int null comment race varchar 45 null comment gender varchar 45 null comment age varchar 45 null comment weight varchar 45 null comment admission_type_id int null comment discharge_disposition_id int null comment admission_source_id int null comment time_in_hospital int null comment payer_code varchar 45 null comment medical_specialty varchar 45 null comment num_lab_procedures int null comment num_procedures int null comment num_medications int null comment number_outpatient int null comment number_emergency int null comment number_inpatient int null comment diag_1 varchar 200 null comment diag_2 varchar 200 null comment diag_3 varchar 200 null comment number_diagnoses int null comment max_glu_serum varchar 45 null comment a1cresult varchar 45 null comment metformin varchar 45 null comment repaglinide varchar 45 null comment nateglinide varchar 45 null comment chlorpropamide varchar 45 null comment glimepiride varchar 45 null comment acetohexamide varchar 45 null comment glipizide varchar 45 null comment glyburide varchar 45 null comment tolbutamide varchar 45 null comment pioglitazone varchar 45 null comment rosiglitazone varchar 45 null comment acarbose varchar 45 null comment miglitol varchar 45 null comment troglitazone varchar 45 null comment tolazamide varchar 45 null comment examide varchar 45 null comment citoglipton varchar 45 null comment insulin varchar 45 null comment glyburide metformin varchar 45 null comment glipizide metformin varchar 45 null comment glimepiride pioglitazone varchar 45 null comment metformin rosiglitazone varchar 45 null comment metformin pioglitazone varchar 45 null comment change varchar 45 null comment diabetesmed varchar 45 null comment readmitted varchar 45 null comment engine innodb create table if not exists diabetes_dwh_staging admission_source id int null comment description varchar 255 null comment engine innodb create table if not exists diabetes_dwh_staging admission_type id int null comment description varchar 255 null comment engine innodb create table if not exists diabetes_dwh_staging discharge_disposition id int null comment description varchar 255 null comment engine innodb step 02 extract import csv dataset to staging area use the following query to import data to datase table use absolute path to the diabetic_data csv file as dataset_directory diabetic_data csv in the query in windows use characters instead of as path name separator character eg instead of d dwh diabetic_data csv use d dwh diabetic_data csv use diabetes_dwh_staging load data infile dataset_directory diabetic_data csv into table dataset fields terminated by enclosed by lines terminated by r ignore 1 lines if secure_file_priv is enabled copy diabetic_data csv file to the directory given by following query and use that path show variables like secure_file_priv check whether all 101766 recoreds are imported with executing the query below select count from dataset import ids_mapping_admission_source csv ids_mapping_admission_type csv and ids_mapping_discharge_disposition csv files as the same way as below load data infile dataset_directory ids_mapping_admission_source csv into table admission_source fields terminated by enclosed by lines terminated by r ignore 1 lines load data infile dataset_directory ids_mapping_admission_type csv into table admission_type fields terminated by enclosed by lines terminated by r ignore 1 lines load data infile dataset_directory ids_mapping_discharge_disposition csv into table discharge_disposition fields terminated by enclosed by lines terminated by r ignore 1 lines step 03 data cleansing 3 1 create a duplicate data set to make changes create table if not exists diabetes_dwh_staging dataset_modified encounter_id int null comment patient_nbr int null comment race varchar 45 null comment gender varchar 45 null comment age varchar 45 null comment weight varchar 45 null comment admission_type_id int null comment discharge_disposition_id int null comment admission_source_id int null comment time_in_hospital int null comment payer_code varchar 45 null comment medical_specialty varchar 45 null comment num_lab_procedures int null comment num_procedures int null comment num_medications int null comment number_outpatient int null comment number_emergency int null comment number_inpatient int null comment diag_1 varchar 200 null comment diag_2 varchar 200 null comment diag_3 varchar 200 null comment number_diagnoses int null comment max_glu_serum varchar 45 null comment a1cresult varchar 45 null comment metformin varchar 45 null comment repaglinide varchar 45 null comment nateglinide varchar 45 null comment chlorpropamide varchar 45 null comment glimepiride varchar 45 null comment acetohexamide varchar 45 null comment glipizide varchar 45 null comment glyburide varchar 45 null comment tolbutamide varchar 45 null comment pioglitazone varchar 45 null comment rosiglitazone varchar 45 null comment acarbose varchar 45 null comment miglitol varchar 45 null comment troglitazone varchar 45 null comment tolazamide varchar 45 null comment examide varchar 45 null comment citoglipton varchar 45 null comment insulin varchar 45 null comment glyburide metformin varchar 45 null comment glipizide metformin varchar 45 null comment glimepiride pioglitazone varchar 45 null comment metformin rosiglitazone varchar 45 null comment metformin pioglitazone varchar 45 null comment change varchar 45 null comment diabetesmed varchar 45 null comment readmitted varchar 45 null comment engine innodb insert into diabetes_dwh_staging dataset_modified select from diabetes_dwh_staging dataset horizontal filtering some importants attributes that should be considered are missing in the dataset lets discard them delete from diabetes_dwh_staging dataset_modified where payer_code delete from diabetes_dwh_staging dataset_modified where medical_specialty delete from diabetes_dwh_staging dataset_modified where race delete from diabetes_dwh_staging dataset_modified where diag_1 delete from diabetes_dwh_staging dataset_modified where diag_2 delete from diabetes_dwh_staging dataset_modified where diag_3 select count from diabetes_dwh_staging dataset_modified we have 26755 data records cleansing patient data select diry data wrt gender of the patient create or replace view diabetes_dwh_staging dirty_patient_gender as select from diabetes_dwh_staging dataset_modified where patient_nbr in tselect patient_nbr tfrom diabetes_dwh_staging dataset_modified twhere gender female and patient_nbr in tselect patient_nbr tfrom diabetes_dwh_staging dataset_modified twhere gender male select encounter_id patient_nbr race gender from diabetes_dwh_staging dirty_patient_gender there are 2 dirty records with 1 patient and cleaned with selecting most frequent and latest data update diabetes_dwh_staging dataset_modified set gender male where patient_nbr 109210482 select diry data wrt race of the patient select distinct race from diabetes_dwh_staging dataset_modified 6 distinct races are found caucasian africanamerican other asian hispanic views to identify dirty data create or replace view diabetes_dwh_staging dirty_patient_race as select patient_nbr count distinct race as race_count from diabetes_dwh_staging dataset_modified group by patient_nbr having race_count 1 select count patient_nbr from diabetes_dwh_staging dirty_patient_race select encounter_id patient_nbr race from diabetes_dwh_staging dataset_modified where patient_nbr in tselect patient_nbr from diabetes_dwh_staging dirty_patient_race order by patient_nbr encounter_id there are 165 dirty records with 50 patients and cleaned with selecting most frequent and latest data set race as caucasian update diabetes_dwh_staging dataset_modified set race caucasian where patient_nbr in 1553220 23724792 38893887 42246738 52316388 112367349 set race as africanamerican update diabetes_dwh_staging dataset_modified set race africanamerican where patient_nbr in 6919587 10980891 40090752 54643194 101753730 107849052 set race as other update diabetes_dwh_staging dataset_modified set race other where patient_nbr in 28532295 30689766 32314608 33247647 36967347 37547937 37638306 38774187 39160719 42096384 90817893 93105117 93662784 94027644 98584524 100322946 103228398 103690161 105125598 106425234 set race as asian update diabetes_dwh_staging dataset_modified set race asian where patient_nbr in 24332220 31812075 34248078 94539465 97024806 103305528 104622570 110657970 111534210 set race as hispanic update diabetes_dwh_staging dataset_modified set race hispanic where patient_nbr in 37572957 44744166 45113778 90035874 91107549 93809358 94088088 98934615 106895331 109448541 step 04 transforming 4 1 transform primary secondary and additional diagnosis based on international statistical classification of diseases and related health problems visit http icd9 chrisendres com index php action contents for diseases and injuries tabular index values are stored to the file data_transforming diseases_and_injuries_tabular_index csv id disease code_letter code_from code_to 1 infectious and parasitic diseases 1 139 2 neoplasms 140 239 3 endocrine nutritional and metabolic diseases and immunity disorders 240 279 4 diseases of the blood and blood forming organs 280 289 5 mental disorders 290 319 6 diseases of the nervous system and sense organs 320 389 7 diseases of the circulatory system 390 459 8 diseases of the respiratory system 460 519 9 diseases of the digestive system 520 579 10 diseases of the genitourinary system 580 629 11 complications of pregnancy childbirth and the puerperium 630 679 12 diseases of the skin and subcutaneous tissue 680 709 13 diseases of the musculoskeletal system and connective tissue 710 739 14 congenital anomalies 740 759 15 certain conditions originating in the perinatal period 760 779 16 symptoms signs and ill defined conditions 780 799 17 injury and poisoning 800 999 18 supplementary classification of factors influencing health status and contact with health services v 1 89 19 supplementary classification of external causes of injury and poisoning e 800 999 lets load this csv file into a table replace dataset_directory directory in the query with the absolute path of the file use as path seperator use diabetes_dwh_staging create table if not exists diabetes_dwh_staging icd9_index id int not null comment disease varchar 200 not null comment code_letter varchar 10 null comment code_from int not null comment code_to int not null comment primary key id comment engine innodb load data infile dataset_directory diseases_and_injuries_tabular_index csv into table icd9_index fields terminated by enclosed by lines terminated by r ignore 1 lines transforming icd9 details this query may take several time 30 seconds to execute drop procedure if exists diabetes_dwh_staging transform_icd9 delimiter create procedure diabetes_dwh_staging transform_icd9 begin declare n int default 0 declare i int default 0 transform values starts with v and e transform diag_1 values update diabetes_dwh_staging dataset_modified set diag_1 tselect disease from diabetes_dwh_staging icd9_index where code_letter v where left diag_1 1 v update diabetes_dwh_staging dataset_modified set diag_1 tselect disease from diabetes_dwh_staging icd9_index where code_letter e where left diag_1 1 e transform diag_2 values update diabetes_dwh_staging dataset_modified set diag_2 tselect disease from diabetes_dwh_staging icd9_index where code_letter v where left diag_2 1 v update diabetes_dwh_staging dataset_modified set diag_2 tselect disease from diabetes_dwh_staging icd9_index where code_letter e where left diag_2 1 e transform diag_3 values update diabetes_dwh_staging dataset_modified set diag_3 tselect disease from diabetes_dwh_staging icd9_index where code_letter v where left diag_3 1 v update diabetes_dwh_staging dataset_modified set diag_3 tselect disease from diabetes_dwh_staging icd9_index where code_letter e where left diag_3 1 e transform values with digits only select count from diabetes_dwh_staging icd9_index where code_letter into n set i 0 while i n do t transform diag_1 values tupdate diabetes_dwh_staging dataset_modified set diag_1 t tselect disease from diabetes_dwh_staging icd9_index limit i 1 t where diag_1 regexp 0 9 0 9 and t t diag_1 t t tselect code_from from diabetes_dwh_staging icd9_index limit i 1 t t and t t diag_1 t t tselect code_to from diabetes_dwh_staging icd9_index limit i 1 t t t t transform diag_2 values tupdate diabetes_dwh_staging dataset_modified set diag_2 t tselect disease from diabetes_dwh_staging icd9_index limit i 1 t where diag_2 regexp 0 9 0 9 and t t diag_2 t t tselect code_from from diabetes_dwh_staging icd9_index limit i 1 t t and t t diag_2 t t tselect code_to from diabetes_dwh_staging icd9_index limit i 1 t t t transform diag_3 values tupdate diabetes_dwh_staging dataset_modified set diag_3 t tselect disease from diabetes_dwh_staging icd9_index limit i 1 t where diag_3 regexp 0 9 0 9 and t t diag_3 t t tselect code_from t t tfrom diabetes_dwh_staging icd9_index t t tlimit i 1 and t t diag_3 t t tselect code_to t t tfrom diabetes_dwh_staging icd9_index t t tlimit i 1 t set i i 1 end while end delimiter call diabetes_dwh_staging transform_icd9 4 2 transform admission type discharge disposition admission source with given mapping data set one procedure will takes around 15 seconds to execute with all take around 45 seconds drop procedure if exists diabetes_dwh_staging transform_admission_type drop procedure if exists diabetes_dwh_staging transform_admission_source drop procedure if exists diabetes_dwh_staging transform_discharge_disposition delimiter admission type create procedure diabetes_dwh_staging transform_admission_type begin declare n int default 0 declare i int default 1 set n select count from diabetes_dwh_staging admission_type add the column alter table diabetes_dwh_staging dataset_modified add column admission_type varchar 150 while i n do tupdate diabetes_dwh_staging dataset_modified set admission_type t tselect description from diabetes_dwh_staging admission_type where id i where admission_type_id i set i i 1 end while alter table diabetes_dwh_staging dataset_modified drop column admission_type_id end admission source create procedure diabetes_dwh_staging transform_admission_source begin declare n int default 0 declare i int default 1 set n select count from diabetes_dwh_staging admission_source add the column alter table diabetes_dwh_staging dataset_modified add column admission_source varchar 150 while i n do tupdate diabetes_dwh_staging dataset_modified set admission_source t tselect description from diabetes_dwh_staging admission_source where id i where admission_source_id i set i i 1 end while alter table diabetes_dwh_staging dataset_modified drop column admission_source_id end discharge disposition create procedure diabetes_dwh_staging transform_discharge_disposition begin declare n int default 0 declare i int default 1 set n select count from diabetes_dwh_staging discharge_disposition add the column alter table diabetes_dwh_staging dataset_modified add column discharge_disposition varchar 150 while i n do tupdate diabetes_dwh_staging dataset_modified set discharge_disposition t tselect description from diabetes_dwh_staging discharge_disposition where id i where discharge_disposition_id i set i i 1 end while alter table diabetes_dwh_staging dataset_modified drop column discharge_disposition_id end delimiter call diabetes_dwh_staging transform_admission_type call diabetes_dwh_staging transform_admission_source call diabetes_dwh_staging transform_discharge_disposition step 05 create schema for data warehouse exucute following query to create database and tables for data warehouse as in the dimensional model drop schema if exists diabetes_dwh create schema if not exists diabetes_dwh default character set utf8 collate utf8_general_ci use diabetes_dwh create table if not exists diabetes_dwh dim_patient patient_sk int not null auto_increment comment patient_number varchar 45 not null comment race varchar 45 null comment gender varchar 45 null comment age varchar 45 null comment primary key patient_sk comment engine innodb create table if not exists diabetes_dwh dim_junk_admissiondetails admissiondetail_sk int not null auto_increment comment admission_type varchar 200 null comment admission_source varchar 200 null comment medical_speciality varchar 200 null comment primary key admissiondetail_sk comment engine innodb create table if not exists diabetes_dwh dim_discharge discharge_sk int not null auto_increment comment discharge_disposition varchar 150 null comment readmitted varchar 45 null comment payer_code varchar 45 null comment primary key discharge_sk comment engine innodb create table if not exists diabetes_dwh dim_test_results test_results_sk int not null auto_increment comment glucose_serum_test_result varchar 45 null comment a1c_test_results varchar 45 null comment primary key test_results_sk comment engine innodb create table if not exists diabetes_dwh dim_medication medication_sk int not null auto_increment comment change_of_medication varchar 45 null comment diabetes_medicatin varchar 45 null comment metformin varchar 45 null comment repaglinide varchar 45 null comment nateglinide varchar 45 null comment chlorpropamide varchar 45 null comment glimepiride varchar 45 null comment acetohexamide varchar 45 null comment glipizide varchar 45 null comment tolbutamide varchar 45 null comment pioglitazone varchar 45 null comment rosiglitazone varchar 45 null comment acarbose varchar 45 null comment miglitol varchar 45 null comment troglitazone varchar 45 null comment tolazamide varchar 45 null comment examide varchar 45 null comment citoglipton varchar 45 null comment insulin varchar 45 null comment glyburide metformin varchar 45 null comment glipizide metformin varchar 45 null comment glimepiride pioglitazone varchar 45 null comment metformin rosiglitazone varchar 45 null comment metformin pioglitazone varchar 45 null comment primary key medication_sk comment engine innodb create table if not exists diabetes_dwh dim_junk_diagnosis diagnosis_sk int not null auto_increment comment primary_diagnosis varchar 200 null comment secondary_diagnosis varchar 200 null comment additional_diagnosis varchar 200 null comment primary key diagnosis_sk comment engine innodb create table if not exists diabetes_dwh fact_admission encounter_id int not null auto_increment comment patient_sk int not null comment test_sk int not null comment medication_sk int not null comment diagnosis_sk int not null comment date_sk datetime not null comment time_in_hospital varchar 45 null comment num_lab_procedure int null comment num_procedures int null comment num_medication int null comment number_outpatient int null comment number_emergency int null comment number_inpatient int null comment number_diagnoses int null comment primary key encounter_id comment unique index patient_sk_unique patient_sk asc comment unique index test_sk_unique test_sk asc comment unique index medication_sk_unique medication_sk asc comment unique index diagnosis_sk_unique diagnosis_sk asc comment unique index date_sk_unique date_sk asc comment engine innodb step 06 loading data 6 1 loading to patient dimension there are 19808 distict values insert into diabetes_dwh dim_patient patient_number race gender age select distinct patient_nbr race gender age from diabetes_dwh_staging dataset_modified order by patient_nbr age select count from diabetes_dwh dim_patient 6 2 loading to test results dimension there are 7 distict values insert into diabetes_dwh dim_test_results glucose_serum_test_result a1c_test_results select distinct max_glu_serum a1cresult from diabetes_dwh_staging dataset_modified select count from diabetes_dwh dim_test_results 6 3 loading to discharge dimension there are 339 distict values insert into diabetes_dwh dim_discharge discharge_disposition readmitted payer_code select distinct discharge_disposition readmitted payer_code from diabetes_dwh_staging dataset_modified select count from diabetes_dwh dim_discharge 6 4 loading to medication dimension there are 633 distict values insert into diabetes_dwh dim_medication t change_of_medication diabetes_medicatin metformin repaglinide nateglinide chlorpropamide glimepiride acetohexamide glipizide tolbutamide pioglitazone rosiglitazone acarbose miglitol troglitazone tolazamide examide citoglipton insulin glyburide metformin glipizide metformin glimepiride pioglitazone metformin rosiglitazone metformin pioglitazone select distinct change diabetesmed metformin t repaglinide nateglinide chlorpropamide glimepiride acetohexamide glipizide tolbutamide pioglitazone rosiglitazone acarbose miglitol troglitazone tolazamide examide citoglipton insulin glyburide metformin glipizide metformin glimepiride pioglitazone metformin rosiglitazone metformin pioglitazone from diabetes_dwh_staging dataset_modified select count from diabetes_dwh dim_medication 6 5 loading to diagnosis junk dimension lets load all distinct values for the junk dimension there are 2323 distict values insert into diabetes_dwh dim_junk_diagnosis primary_diagnosis secondary_diagnosis additional_diagnosis select distinct diag_1 diag_2 diag_3 from diabetes_dwh_staging dataset_modified select count from diabetes_dwh dim_junk_diagnosis 6 6 loading to admission junk dimension lets load all distinct values for the junk dimension there are 391 distict values with including null values insert into diabetes_dwh dim_junk_admissiondetails admission_type admission_source medical_speciality select distinct admission_type admission_source medical_specialty from diabetes_dwh_staging dataset_modified select count from diabetes_dwh dim_junk_admissiondetails 6 7 loading to fact select stg encounter_id t patient patient_sk test test_results_sk stg time_in_hospital stg num_lab_procedures from diabetes_dwh_staging dataset_modified as stg t diabetes_dwh dim_patient as patient diabetes_dwh dim_test_results as test diabetes_dwh dim_discharge as discharge diabetes_dwh dim_medication as medication diabetes_dwh dim_junk_diagnosis as diag diabetes_dwh dim_junk_admissiondetails as adm_details where stg patient_nbr patient patient_number and stg age patient age tand test glucose_serum_test_result stg max_glu_serum and test a1c_test_results stg a1cresult and stg discharge discharge_disposition discharge_disposition and stg readmitted discharge readmitted and srg payer_code discharge payer_code data mining transforming for data mining transform age to an integer value eg transform 40 50 to 45 drop procedure if exists diabetes_dwh_staging transform_for_datamining delimiter create procedure diabetes_dwh_staging transform_for_datamining begin declare i int default 0 declare age_str varchar 10 declare age_str_int int alter table diabetes_dwh_staging dataset_modified add column age_int int while i 10 do tset age_str concat i 10 i 1 10 set age_str_int i 10 5 update diabetes_dwh_staging dataset_modified set age_int age_str_int where age age_str set i i 1 end while end delimiter call diabetes_dwh_staging transform_for_datamining export csv file for data mining lets export diabetes_dwh_staging dataset_modified table to csv file then it can be used with weka for data mining replace dataset_directory directory in the query with the absolute path of the file use as path seperator select race gender age admission_type t discharge_disposition admission_source time_in_hospital payer_code medical_specialty num_lab_procedures num_procedures num_medications number_outpatient number_emergency number_inpatient diag_1 diag_2 diag_3 number_diagnoses max_glu_serum a1cresult metformin repaglinide nateglinide chlorpropamide glimepiride acetohexamide glipizide glyburide tolbutamide pioglitazone rosiglitazone acarbose miglitol troglitazone tolazamide examide citoglipton insulin glyburide metformin glipizide metformin glimepiride pioglitazone metformin rosiglitazone metformin pioglitazone change diabetesmed readmitted union select race gender age_int admission_type t discharge_disposition admission_source time_in_hospital payer_code medical_specialty num_lab_procedures num_procedures num_medications number_outpatient number_emergency number_inpatient diag_1 diag_2 diag_3 number_diagnoses max_glu_serum a1cresult metformin repaglinide nateglinide chlorpropamide glimepiride acetohexamide glipizide glyburide tolbutamide pioglitazone rosiglitazone acarbose miglitol troglitazone tolazamide examide citoglipton insulin glyburide metformin glipizide metformin glimepiride pioglitazone metformin rosiglitazone metformin pioglitazone change diabetesmed readmitted from diabetes_dwh_staging dataset_modified into outfile d data_set csv fields terminated by enclosed by lines terminated by r now we can import this data set to weka ,https://github.com/renuka-fernando,R
"Huntington Beach, CA",96,38,153,1182, deep learning example using shainet this workbook demonstrates how to create a deep learning network using shainet we will be using the pima indians dataset to predict diabetes installation this requires crystal 0 23 1 usage this project uses crystal s playground you can load and run the playground workbook using shards install crystal play open http localhost 8080 then select the workbook diabetes from the menu you can also compile and run the application crystal run src diabetes cr contributing fork it https github com drujensen diabetes fork create your feature branch git checkout b my new feature commit your changes git commit am add some feature push to the branch git push origin my new feature create a new pull request contributors drujensen dru jensen creator maintainer ,https://github.com/drujensen,Jupyter Notebook
Berlin,145,36,190,440, glucolog qué es glucolog glucolog es un api destinado al registro y seguimiento de los niveles de glicemia en la sangre orientado para niños menores de 14 años cómo puedo utilizar glucolog el código es totalmente open source puede ser descargado e instalado por cualquier persona o institución y desarrollar encima de la plataforma quiero colaborar cómo lo hago ppuede reportar cualquier fallo en éste repositorio si eres desarrollador y tienes unas propuestas puede colocar un pull request no sin antes abrir un issue con la propuesta api la definición del api está pública en https glucologapi docs apiary io favor revisar ,https://github.com/davidtavarez,MIT license
Chengdu,7,1,6,61, tianchi_diabetespredict 天池大数据竞赛数据集 代码 code 1 神经网络博文链接 txt u2003 u2003神经网络相关的一篇博文 2 reference u2003 u2003比赛过程中的参考文献 u2003 u2003其中包括数据预处理 boxcox变换等内容 3 数据可视化 u2003 u2003比赛过程中 对特征和结果的分布一些图 u2003 u2003特征权重的结果图等 4 process predict_data u2003 u2003比赛过程中数据处理和预测的代码 u2003 u2003需要注意的是 代码中读取数据的路径需要修改 u2003 u2003数据处理运行得到的处理后的数据集文件没有保留 需要自己运行后获得 5 keras_code u2003 u2003采用神经网络keras进行预测部分的代码 dataset u2003 u2003主办方提供的原始数据集 reference u2003 u2003人工智能辅助糖尿病遗传风险预测参考文献 u2003 u2003比赛主办方提供参考文献 2 知网下载文献 u2003 u2003知网上下载的相关的文章 ,https://github.com/AmbitionC,JavaScript
"Lagos, Nigeria",58,38,179,818, diabetes prediction api deploying a simple diabetic machine learning classification model with django via an api endpoint https diabetiespred herokuapp com api documentation https documenter getpostman com view 10327129 szruzcfd version latest ,https://github.com/AminuIsrael,Java
Mumbai,0,0,11,0, dcare hybrid mobile app for diabetes care using phonegap ionic angularjs material ,https://github.com/nozelrosario,HTML
"Vancouver, Canada",1,0,15,0, hackingdiabetes hacking diabetes repo for team 4 hacking health 2014 vancouver see pi readme md ,https://github.com/StefanCodes,Python
Hong Kong,1,2,69,7, 天池精准医疗大赛 人工智能辅助糖尿病遗传风险预测 这是天池平台上的一道关于精准医疗方面的赛题 链接 解决方案 待写 代码说明 data 存放原始的数据文件 包括 训练数据 draft_data_train csv a榜测试数据 d_test_a_20180102 b榜测试数据 d_test_b_20180128 csv 数据分析与特征提取 feature_extract py 提取特征 在data目录下生成feature目录 存放特征文件 offline_data_extract py 提取线下训练与测试集 classification xgb_hp95 py 训练xgboost分类器 判断 id 的血糖是否大于95百分位数 xgb_lp30 py 训练xgboost分类器 判断 id 的血糖是否小于30百分位数 series_model py 训练一系列分类器 包括mlp rf xgb等 模型均保持在model classification文件夹下 level_elimination py 加载一些列保存的分类模型 对test数据集进行瀑布流筛选 保留top150 mlp_regression yy_tensorflow py 训练mlp回归模型 并同时对测试集进行回归预测 model classification 文件夹保存分类器的各类模型 regression 文件夹保存回归其的各类模型 lightdm模型除外 regression xgb py 训练xgboost回归器 dart py 训练dart回归器 lightdm py 训练lightdm回归器 rf py 训练lightdm回归器 gen_submission py 生成提交文件 融合了四个回归模型的结果 post_process py 使用分类模型的预测结果 对回归预测的结果进行后处理 ,https://github.com/LBAWMY,"Updated Aug 23, 2018"
"Anantapur,Andhrapradesh",35,5,41,277, linear regression using python click here to download the code prerequisites the things that you must have a decent knowledge on python linear algebra calculus installation this project is fully based on python so the necessary modules needed for computaion are numpy sklearn matplotlib pandas the commands needed for installing the above modules on windows platfom are pip install numpy pip install sklearn pip install matplotlib we can verify the installation of modules by importing the modules for example import numpy from sklearn decomposition import kernelpca import matplotlib pyplot as plt explanation here were performing linear regression on the boston house pricing dataset the details of the dataset are title boston housing data sources a origin this dataset was taken from the statlib library which is maintained at carnegie mellon university b creator harrison d and rubinfeld d l hedonic prices and the demand for clean air j environ economics management vol 5 81 102 1978 c date july 7 1993 past usage used in belsley kuh welsch regression diagnostics wiley 1980 n b various transformations are used in the table on pages 244 261 quinlan r 1993 combining instance based and model based learning in proceedings on the tenth international conference of machine learning 236 243 university of massachusetts amherst morgan kaufmann relevant information concerns housing values in suburbs of boston number of instances 506 number of attributes 13 continuous attributes including class attribute medv 1 binary valued attribute attribute information crim per capita crime rate by town zn proportion of residential land zoned for lots over 25 000 sq ft indus proportion of non retail business acres per town chas charles river dummy variable 1 if tract bounds river 0 otherwise nox nitric oxides concentration parts per 10 million rm average number of rooms per dwelling age proportion of owner occupied units built prior to 1940 dis weighted distances to five boston employment centres rad index of accessibility to radial highways tax full value property tax rate per 10 000 ptratio pupil teacher ratio by town b 1000 bk 0 63 2 where bk is the proportion of black by town lstat lower status of the population medv median value of owner occupied homes in 1000 s missing attribute values none click here to find the program linearregression_boston_dataset py result the above program results a scatter plot showed below the output of the program is showed below click here to see the program linearregression_diabetes_dataset py implementing linear regression on diabetes dataset conclusion performed linear regression on boston house pricing and diabetes dataset license this project is licensed under the mit license see the license md ,https://github.com/syamkakarla98,"Updated Feb 5, 2018"
"New Delhi, India",15,0,62,669, diabetes predicition model in this project we are given a diabetes data set consisting of following features pregnancies glucose bloodpressure skinthickness insulin bmi diabetespedigreefunction age outcome we have to predict whether a person is suffering from diabetes or not binary classification classification task classify a person as 0 or 1 diabetic or not using k nearest neighbors classifier we are saving our predictions of test cases in a csv file file should have same structure as that of sample submission file ,https://github.com/shubhamgoel90,JavaScript
India,1,3,16,47, diabetesml detection of type of diabetes including decision tree algorithm in machine learning we took the dataset of aboout 768 patients which contains different attributes such as blood ressure bmi blood sugagr level etc as the deciding factores for diabetes diabetes are classified into 2 types in this dataset i e type 1 and type 2 there are also information about patients who don t have diabetes also present in the diabetes we replace the type 1 diabetic patients as 1 type 2 diabetic patients as 2 and the patients who don t have diabetes as 0 for simplification purposes in our dataset we then visalize the data and us our decision tree algorithm for traininng and testing puposes and get our desired results we can fix the random state of the training model at a point where we get the most desired output this helps us to acive more accurarte results in the detection and makes our model strong ,https://github.com/avisheknayak,Jupyter Notebook
India,8,51,31,109, bays classifer diabetes via age its a bays classsifer which predict your diabetes based on your age ,https://github.com/kartikpaliwal,Java
India,5,8,68,5965, diabetes_prediction n this project we used different types of machine learning algorithm and predicted that a person will be having diabetes in the future or not and how much is it accurate given the responses that the person has diabetes using the decision tree the accuracy obtained is 87 1794 and average precision recall score obtained is 0 66 ,https://github.com/malhotrabhavyajot,JavaScript
Texas,4,0,7,38, diabetes prediction national institute of diabetes and digestive and kidney diseases research creates knowledge about and treatments for the most chronic costly and consequential diseases the dataset used in this project is originally from niddk the objective is to predict whether or not a patient has diabetes based on certain diagnostic measurements included in the dataset build a model to accurately predict whether the patients in the dataset have diabetes or not the datasets consists of several medical predictor variables and one target variable outcome predictor variables includes the number of pregnancies the patient has had glucose blood pressure skin thickness insulin their bmi diabetespedigreefunction age outcome 0 1 i have performed the following steps to predict whether or not a patient has diabetes i data wrangling ii exploratory data analysis iii creation of different classifiers and choosing the best one among these algorithms iv model validation to overcome the overfitting problem v evaluation of model vi creating a dashboard with charts in tableau ,https://github.com/disojn,R
"Milan,Italy",14,4,28,95, this repo detecated to the analysis at the pima indians diabetes which 768 row and 9 columns at the columns are 0 preg number of times pregnant 1 plas plasma glucose concentration in an oral glucose tolerance test 2 pres diastolic blood pressure mm hg 3 skin triceps skin fold thickness mm 4 test 2 hour serum insulin mu u ml 5 mass body mass index weight in kg height in m 2 6 pedi diabetes pedigree function 7 age age years 8 class class variable 1 tested positive for diabetes 0 tested negative for diabetes the implementation done by using keras and the accuracy and loss results are as we could see from this model the photo of the model is attached bellow we got 80 95 accuracy which is higher than any results which exists over the internet after the definition of the inital model i retrain the last model and i got the improvment at the accuracy which is 81 39 and the loss accuracy is also improved compare to the previous model ,https://github.com/eddieir,"Updated Nov 21, 2020"
"Netherlands, Lichtenvoorde",2,2,1,23, diabetes ,https://github.com/JowJoris,"Updated Nov 24, 2019"
Mumbai,4,14,200,0, diabetes ,https://github.com/saurabh9969,Apache-2.0 license
India,7,8,21,93, diabetes ,https://github.com/mphirke,"Updated Oct 12, 2018"
Nepal,3,21,5,24, diabetesprediction diabetesprediction ,https://github.com/Dhakal29,"Updated Feb 19, 2018"
"Serbia,  Belgrade",15,32,51,70, diabetesprediction caclulating the precentage of people in america the precentage and possibility of having diabetes what i learned preparing the data set with panda data frames removing invalid values from the set and duplicates as well mold data training with inital algorithm naive bayes setting aside 20 of data for testing performing random forest logistic regression ,https://github.com/jovanvuleta,"Updated Dec 30, 2019"
"Auckland, New Zealand",2,1,0,64, type ii diabetes prediction model this study will provide validated t2d prediction models relevant in contemporary new zealand s primary care core data see wiki for details regarding the core dataset including variable descriptions the core dataset is a predict population from 2006 2018 individuals are eligeable if they are diabetes free at time of predict risk assessment and where an index hba1c value is avaiable inclusion does not limit the number of prior predict assessments or prior cvd where eligeability is met at multiple predict assessments the earliest predict record is used as baseline information from the national health collection are linked to provide demographic hospitalised history hospitalised outcomes death specific outcomes and baseline treatment to ensure consistency the exclusion criteria see wiki have been applied in data management exclude if prior admission for diabetes or treated with antidiabetic drugs in last 6 months or noted as diabetic in predict or non existing hba1c test in prior 2 years or any hba1c in prior 2 years 50mmol mol exclusion critiera met within 30 days of study index date qc conflicts roll to next examine each visit and apply exclusion criteria continue with each nth visit to find those who could meet the inclusion criteria in subsequent visits starting with 564180 participants 371362 met criteria after first visit 12191 meet criteria in subsequent visit further removals remove out of age limits 25 74 14806 remove non avaliable hba1c within 30 days of predict 75764 remove dispensing records 1 month beyond dod 107 remove people with renal dialysis transplantation 826 remove exclusions detected within 30 days of study index 179 total remaining 277075 ,https://github.com/VIEW2020,"Updated Nov 26, 2019"
"Purwokerto, Indonesia",9,13,43,245, diabetesmanager application to manage calories so that its users do not exceed the calorie targets that have been determined by nutritionists so that users do not occur in obesity or diabetes web server here link video youtube ,https://github.com/anantyan,"Updated Feb 26, 2020"
San Francisco,244,63,646,91, decoding dexcom hacking diabetes give me my data setup there are some scripts in the dexcom_reader directory they depend on https github com compbrain dexcom_reader to use these scripts git clone https github com bewest decoding dexcom git cd decoding dexcom dexcom_reader git clone https github com compbrain dexcom_reader git then to test that everything worked try python dxcom scan helping send me your packet captures fork this repo then git clone git github com yourname decoding dexcom git cd decoding dexcom git checkout b yourname mkdir yourname cp path to captures yourname git add v git commit am yourname adding captures for bewest et al git push u origin yourname then you can send me an email or a pull request ,https://github.com/bewest,Jupyter Notebook
"Türkheim, Germany",16,5,17,785, diaguard diaguard is an android app for people with diabetes mellitus it replaces the handwritten diary and helps the user to quickly and easily record evaluate and export his blood sugar and other important data as pdf or csv thanks to the clearly arranged interface the user always has an overview of his diabetes the app also provides information on several thousand foods including carbohydrates and other nutrients quickly and easily track your blood glucose insulin carbohydrates hba1c activity weight pulse blood pressure and oxygen saturation customizable units visualize your blood glucose level in a graph detailed logs of your data settings for basal rate correction factor and meal bolus factor food database with thousands of entries pdf and csv export backup reminder estimated hba1c statistics dark mode localized in english german french spanish and italian distribution about history development of diaguard started in october 2013 it was as one of several small projects of one developer who was trying to gain traction on the android platform this project soon evolved into a vision named diaguard which saw its initial release in july 2014 since then it has received many updates much appreciated feedback from its users and a little bit of marketing with the help of direct contact and mouth to mouth propaganda but at the end of the day every line of code has been provided by one sole developer in his spare time this should change in april 2020 when the decision was made to go open source goals diaguard should help diabetics with monitoring their diabetes it should be able to replace the handwritten diary completely and to supplement tasks like basal rate tests or carb counting it should help diabetologists with monitoring their patients regularly and when preparing a health insurance application diaguard s users should always be and feel in full control all user generated data must stay on the same device until the user explicitely decides to transfer something to another device e g during an export or backup nothing is shared with remote services and network is only used to read data from a food database user data must not be lost therefor database migrations enable user data to be carried from version 1 0 to any existing and upcoming release diaguard should be accessible to most people therefor its design is heavily influenced by the material design guidelines and tested with accessibility tools like talkback and accessibility scanner diaguard should only be used under the supervision of a diabetologist diaguard should not be used by minors without the supervision of a parent or legal guardian diaguard is not a medical app and serves no therapeutical purpose business model there is none diaguard exists for three reasons for learning for fun and for saying thank you this app kickstarted the career of a professional software developer by leading through the whole software lifecycle creating a concept building software from scratch publishing it to the masses and maintaining a legacy project with additions sprinkled here and there additionally it was and is pure fun to enhance this app and to see feedback from a helpful and thankful community last but not least diaguard is a way of giving something back for these reasons diaguard has been is and will always be free of cost if you want to buy me a beer or support me in general please use the donate button and be aware of my thanks development languages english is used as general language for naming things everything except the localization should be written in english java is used as programming language currently there are no plans to migrate to kotlin to prevent a multi language project a possible approach could be splitting up the monolith into multiple modules which unleashes the potential to switch language while staying consistent within a module sqlite is used as query language for the database object relational mapping takes then place via ormlite xml is used as markup language for user interfaces these views are then bound to java via butter knife localization localization takes place locally and affects following components user interfaces localized via android resources one strings xml per language common food localized via custom file import one food_common csv for all languages default tags localized via custom file import one tags csv for all languages currently the localization process requires certain programming skills this should and could be improved by using an external service in order to support localizations by non developers architecture there are two architectural design patterns that are being used for diaguard model view controller and domain driven design model view controller mvc was a widely spread design pattern in the early days of android development until google presented its architecture components in 2017 and model view viewmodel mvvm took over a gradual transition to mvvm is planned due to its advantages over mvc e g regarding encapsulation and testability domain driven design improves the structure by grouping files in features every feature describes one aspect of the project and should be self contained to improve focus during development the only exception to this rule is the shared package which contains everything that is used in multiple features e g database or networking logic testing testing takes place via junit espresso and robolectric tests are few in number and far from perfect since most of diaguard has been developed in the early of days of one developer however the decision to go open source came with a code of conduct and instrumentation testing major features was the first step in a right direction the goal now is to unit and instrumentation test every new and edited feature in order to increase the quality with every commit third party licenses this software uses following technologies with great appreciation aboutlibraries androidx apache commons text app privacy policy generator betterpickers butter knife eventbus floatingactionbutton gson joda time joda time android junit material components for android mpandroidchart opencsv open food facts ormlite ormlite android parallax everywhere pdfjet picasso retrofit robolectric schweizer nährwertdatenbank these dependencies are bundled with diaguard but under the terms of their respective license legal the manufacturer of this software assumes no responsibility for the topicality correctness completeness or quality of the information provided liability claims against the manufacturer which relate to material or immaterial nature caused by the use or non use of the software are excluded redistribution additionally to the permissions conditions and limitations of the gplv3 the permission for redistribution must be manually requested in advance this ensures that neither the original software or any fork will be affected negatively by terms and conditions like the google play developer distribution agreement if you plan to redistribute this software please contact the maintainer at diaguard de gmail com license copyright c 2013 2020 philipp fahlteich this program is free software you can redistribute it and or modify it under the terms of the gnu general public license as published by the free software foundation either version 3 of the license or at your option any later version this program is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose see the gnu general public license for more details you should have received a copy of the gnu general public license along with this program if not see https www gnu org licenses ,https://github.com/Faltenreich,JavaScript
San Francisco Bay Area,3,0,1,0, diabetes this is a brief analysis of the aim94 diabetes dataset my objective in analyzing this dataset is to see if i can fit a simple linear model that will look for secular consistently increasing or decreasing trendds in the time series data a secular trend in the wrong direction would indicate that the patient needs attention the dataset analyzed here was collected for the 1994 ai in medicine symposium and is hosted at the uci irvine machine learning repository the dataset contains blood glucose and other measurements for 70 patients with insulin dependent diabetes mellitus iddm the following excerpt explains the data codes in this set diabetes patient records were obtained from two sources an automatic electronic recording device and paper records the automatic device had an internal clock to timestamp events whereas the paper records only provided logical time slots breakfast lunch dinner bedtime for paper records fixed times were assigned to breakfast 08 00 lunch 12 00 dinner 18 00 and bedtime 22 00 thus paper records have fictitious uniform recording times whereas electronic records have more realistic time stamps diabetes files consist of four fields per record each field is separated by a tab and each record is separated by a newline file names and format 1 date in mm dd yyyy format 2 time in xx yy format 3 code 4 value so what we are dealing with here is time series data with somewhat fictitious uniform time stamps for part of the data set the following excerpt is from the domain description provided for the symposium patients with iddm are insulin deficient this can either be due to a low or absent production of insulin by the beta islet cells of the pancreas subsequent to an auto immune attack or b insulin resistance typically associated with older age and obesity which leads to a relative insulin deficiency even though the insulin levels might be normal regardless of cause the lack of adequate insulin effect has multiple metabolic effects however once a patient is diagnosed and is receiving regularly scheduled exogenous externally administered insulin the principal metabolic effect of concern is the potential for hyperglycemia high blood glucose chronic hyperglycemia over a period of several years puts a patient at risk for several kinds of micro and macrovascular problems e g retinopathy consequently the goal of therapy for iddm is to bring the average blood glucose as close to the normal range as possible as explained below current therapy makes this goal a very challenging and often frustrating one for most patients one important consideration is that due to the inevitable variation of blood glucose bg around the mean a lower mean will result in a higher frequency of unpleasant and sometimes dangerous low bg levels to summarize in layman s terms both high and low blood glucose levels are very unhealthy for the diabetes patient ,https://github.com/jonneff,Python
New York,29,0,10,98, abstract the project implements 4 linear models and one deep learning model using scikit learn logistic regression naïve bayes support vector machine k nearest neighbours and multi layer perceptron neural network to investigate their performance on diabetes and heart disease datasets obtained from the uci data repository multi layer perceptron neural network outperforms other linear models however k nearest neighbours gives identical results with less computing overhead performance improvements could also be achieved by using complex deep learning methods experiment results cleveland heart disease dataset classifier hyper parameters accuray 10 fold cv logistic regression c 0 13 penalty l1 83 84 linear svc c 18 08 84 85 naïve bayes 84 51 k nearest neighbors n_neighbors 13 weights uniform 85 52 multi layer perceptron learning_rate_init 0 026958815931057856 hidden_layer_sizes 29 26 5 learning_rate constant activation identity alpha 16 681 86 2 pima indian diabetes classifier hyper parameters accuray 10 fold cv logistic regression c 0 25999 penalty l2 77 6 linear svc c 36 74999 78 77 naïve bayes 75 651 k nearest neighbors n_neighbors 27 weights uniform 78 125 multi layer perceptron learning_rate_init 0 0 043967984410493759 hidden_layer_sizes 23 44 learning_rate constant activation logistic alpha 0 1 79 03 deployment install python 3 and virtualenv a tif the deployment is being done in ubuntu run the following commands in the terminal sudo apt get install python3 python3 pip python3 tk sudo pip install virtualenv b tif the deployment is being done in windows installing python is recommended using anaconda download the zip or clone it using git git clone https github com nikhil pandey fyp ml create a virtual environment and install the dependencies a in ubuntu create the virtual environment for python 3 and activate it then install the dependencies in requirements txt file using the command pip install r requirements txt b tfor windows refer to requirements anaconda txt file for creating virtual environment and installing dependencies run app py live demo click here read full report click here license this project is open sourced under the mit license ,https://github.com/nikhil-pandey,R
Seattle,62,0,1,273, description how artificial pancreas closed loop systems can aid you in living with diabetes automated insulin delivery automated insulin delivery is a technology for managing type 1 diabetes that goes by many names hybrid or full closed loop artificial pancreas system aps looping and more but whatever you call them automated insulin delivery systems are not all the same you have choices ranging from the type of insulin pump body and cgm you want to use to the algorithm and controller to the interoperability and remote monitoring options and more like switching from multiple daily injections to an insulin pump switching from manual diabetes to automated insulin delivery has a learning curve it s certainly one you can tackle after all you re already tackling type 1 diabetes you already have the base knowledge and experience you need to succeed with a closed loop system if it s right for you but you might be wondering how to get ahead of your learning curve before you start or even choose an aps or maybe you ve started and want to dig even deeper into optimizing how an automated insulin delivery system fits into your lifestyle this book was written for you it leverages the collective knowledge of the early adopters of do it yourself and commercial systems from the past five years and packages it into easy understandable guides and lessons learned in this book you ll find new analogies to help you understand and explain this new method of diabetes management and tips on how to communicate with your healthcare provider s about it you ll see stories and examples from real families and individuals living with type 1 diabetes and how they benefit from artificial pancreas systems and why they chose and continue to choose to use them you ll be empowered to understand the basic components of artificial pancreas systems how they work and what questions to ask as you evaluate your choices and learn how best to integrate them into your lifestyle hint style success a traditional physical book format a physical printed book that s available through self publishing it s priced so that every 2 copies purchased will fund an author priced copy that i will donate to hospitals libraries etc you can find it here on amazon endhint hint style success an e book format a version that can be downloaded to your kindle you can find it here on amazon endhint hint style info a pdf format which you can download for free and read on your computer or other e reader of choice click here to go to the download page endhint hint style info a website this site so you can review portions of the content anytime and see any changes over time there will also be additional links and videos with more content the website and its content are open source so if you see any typos or have suggestions you can make those suggestions or edits directly to keep reading the web version just hit the next button below endhint ,https://github.com/danamlewis,Jupyter Notebook
Mclean,1,0,6,19, diabetes patient readdmission prediction the dataset represents 10 years 1999 2008 of clinical care at 130 us hospitals and integrated delivery networks it includes over 50 features representing patient and hospital outcomes information was extracted from the database for encounters that satisfied the following criteria 1 it is an inpatient encounter a hospital admission 2 it is a diabetic encounter that is one during which any kind of diabetes was entered to the system as a diagnosis 3 the length of stay was at least 1 day and at most 14 days 4 laboratory tests were performed during the encounter 5 medications were administered during the encounter the data contains such attributes as patient number race gender age admission type time in hospital medical specialty of admitting physician number of lab test performed hba1c test result diagnosis number of medication diabetic medications number of outpatient inpatient and emergency visits in the year before the hospitalization etc ,https://github.com/Srashti13,Java
Italy,2,5,2,630, since the freestyle libre 2 glucose sensor is a bluetooth low energy ble device and my purchase experience with the transmitters available for the previous generation has been quite frustrating i am trying to leverage its capabilities to implement something new compared to the traditional apps a universal swiftui application for iphone ipad and mac catalyst an independent apple watch app connecting directly via bluetooth scanning the libre directly via nfc using both online servers and offline methods for calibrating just like abbott s algorithm showing for comparison the healthkit and nightscout data shared with other apps varying the reading interval instead of the usual 5 minute one a detailed log to check the traffic from to the ble devices and remote servers still too early to decide the final design but i really like already the evil logo here there are some recent screenshots i tweeted xa0 xa0 libre 2 decrypted thanks to ivalkou atlas stress test 1 minute uploads phones and transmitters who needs them filling the gaps from a mac the project started as a single script for the ipad swift playgrounds to test the workings of the several ble devices i bought mainly the bubble and the miaomiao it was then quickly converted to an app by using a standard xcode template it should compile finely without external dependencies just after changing the bundle identifier in the general panel and the team in the signing and capabilities tab of xcode spike users know already very well what that means i am targeting only the latest betas of xcode to send the custom nfc commands you have to switch from basic to devel mode in the log tab and enjoy the verbose flow of debug messages please refer to the todos list for the up to date status of all the current limitations and known bugs of this prototype credits bubbledevteam captainbeeheart cryptax dabear ivalkou libremonitor loop nightguard travisgoodspeed woofwoof xdrip xdrip4ios ,https://github.com/gui-dos,HTML
Sri Lanka,5,0,7,164, diabetes prediction app streamlit web app to predict the onset of diabetes based on diagnostic measures data the data for the following example is originally from the national institute of diabetes and digestive and kidney diseases and is available on kaggle the data contains information on females at least 21 years old of pima indian heritage since the data has been added to the data directory cloning this repository would suffice pre requisites the project was developed using python 3 6 7 with the following packages pandas numpy scikit learn pandas profiling joblib streamlit installation with pip pip install r requirements txt getting started open the terminal in you machine and run the following command to access the web application in your localhost streamlit run app py run on docker alternatively you can build the docker container and access the application at localhost 8051 on your browser docker build tag app 1 0 docker run publish 8051 8051 it app 1 0 files diabetes_prediction_pipeline ipynb jupyter notebook with all the workings including pre processing modelling and inference app py streamlit app script requirements txt pre requiste libraries for the project models trained model files and scaler objects data source data summary this repository acts as a guide to this blog post where i talk about how i use streamlit to build machine learning applications quickly here we use a real world example of predicting if a patient has diabetes and built a machine learning model a streamlit app was then built using a step by step approach in this project acknowledgements kaggle for providing the data for the machine learning pipeline streamlit for the open source library for rapid prototyping ,https://github.com/arunnthevapalan,JavaScript
"Markhan, ON",1,0,5,28, diabetes main py to compare the accuracy of all five techniques below nn py to modify parameters to improve the accuracy of deep neural network svc py to modify parameters to improve the accuracy of support vector machine decisiontree py to modify parameters to improve the accuracy of decision tree logicticregression py to modify parameters to improve the accuracy of logistic regression naivebayes py to modify parameters to improve the accuracy of naive bayes ,https://github.com/sidongwei,HTML
Blumenau,67,18,41,295, estratificando riscos usando registros eletrônicos de pacientes diabéticos tipicamente dez por cento dos pacientes geram cerca de 70 das despesas de saúde dado dos eua ao identificar quais as pessoas são de alto risco ou a probabilidade de se tornarem de alto risco as equipes de saúde podem intervir para melhorar seus resultados e reduzir os respectivos custos de saúde um dos problemas mais comuns e que refletem as inadequações no sistema de saúde são as readmissões hospitalares nos estados unidos sozinho o tratamento de pacientes diabéticos readmitidos excede 300 milhões de dólares por ano https www diabetes org a readmissão hospitalar é uma das principais preocupações no tratamento do diabetes com milhões de dólares sendo gastos no tratamento de pacientes diabéticos que precisam ser readmitidos em um hospital após receberem alta identificação precoce de pacientes que enfrentam um alto risco de readmissão pode permitir que os profissionais de saúde conduzam investigações adicionais e possivelmente impeçam futuras readmissões sendo assim proposta aqui é utilizar os registros eletrônicos de dados médicos dos pacientes tais como resultados dos exames nível de insulina diagnósticos de outras doenças etc a fim de prever se um paciente pode ou não ser readmitido aliás iremos além vamos identificar os pacientes diabéticos de alto risco por meio de estratificação de risco de registros médicos eletrônicos já estamos vivendo uma nova medicina que está sendo guiada pelo processamento de um grande volume de informações através de algoritmos poderosos de machine learning uma das áreas da inteligência artificial para isso vamos treinar e comparar o desempenho de alguns algoritmos de aprendizado de máquina e decidir qual deles usar para prever o risco de readmissão para o paciente usarei o melhor modelo treinado para estratificar a população em três grupos de risco alto risco probabilidade de readmissão 0 7 risco médio 0 3 probabilidade de readmissão 0 7 baixo risco probabilidade de readmissão 0 3 o conjunto de dados diabetes 130 us hospitals for years 1999 2008 foi baixado do uci machine learning repository diabetes 130 us hospitals for years 1999 2008 data set os dados representam 10 anos 1999 2008 de atendimento clínico em 130 hospitais dos eua e redes de distribuição integradas com 100 000 observações e 50 recursos variáveis que representam os registros eletrônicos com resultados de exames dos pacientes e dados sobre cada hospital descrição completa do trabalho impact of hba1c measurement on hospital readmission rates analysis of 70 000 clinical database patient records créditos data science academy https www datascienceacademy com br ,https://github.com/RodrigoLima82,Java
"Melbourne, Australia",94,8,2,1034, bifrost a bridge between 2 diabetes worlds ,https://github.com/pazaan,Python
"New York, NY",12,80,330,16, diabetes readmission short project predicting hospital readmission for diabetes patients using r ,https://github.com/juanmanubens,Jupyter Notebook
Belo Horizonte,0,0,1,22, previsão de diabetes este projeto foi desenvolvido como desafio final do bootcamp desenvolvedor python do igti o objetivo do projeto foi o desenvolvimento de um projeto completo de machine learning desde o pré processamento normalização dos dados treinamento teste persistência do modelo e deploy da solução final base de dados a base de dados utilizada no desenvolvimento diabetes csv provém do famoso dataset do kaggle pima indians diabetes database https www kaggle com uciml pima indians diabetes database que trata da ocorrência de diabetes em mulheres por motivos didáticos o dataset foi fornecido sem cabeçalho abaixo está o dicionário de dados número de vezes em que ficou grávida concentração de glicose pressão diastólica mm hg espessura da dobra cutânea do tríceps mm insulina mu u ml índice de massa corporal peso em kg altura em m 2 histórico familiar de diabetes idade anos classificação 0 não diabético 1 diabético construção do modelo as etapas de pré processamento dos dados e a construção treinamento teste e persistência do modelo foram feitas em um jupyter notebook construção_modelo ipynb foram testados 3 modelos knn k nearest neighbor decision tree e mlp multilayer perceptron como o objetivo era o desenvolvimento do projeto como um todo não foi criado um baseline para comparação com o desempenho dos modelos etapa altamente necessária em um projeto real nem mesmo foi realizado tuning do modelo outra etapa muito importante em um projeto real sendo utilizado o modelo da forma padrão como foi criado o modelo com melhor nível de acuracidade foi persistido para o arquivo mlp_model sav e a normalização dos dados foi persistida para o arquivo normalização sav para que os dados novos que chegasem via formulário fossem corretamente normalizados e não alterassem o comportamento do modelo aplicação web para colocar o modelo em produção foi utilizado o micro framework flask o arquivo app py faz toda a integração através das rotas foram criadas 2 páginas html uma para que o usuário coloque os dados para uma nova predição formulario html e uma segunda onde é mostrado o resultado da predição resultado html ambas as páginas estão na pasta templates limitações o projeto buscou desenvolver uma solução simples e unicamente com fins educacionais não sendo portanto uma proposta real de solucação do problema como pontos de melhoría podem ser apontados necessidade de uma base de dados maior o que traria maior confiabilidade ao modelo necessidade de uma baseline de forma a avaliar a efetividade da solucação proposta em relação a uma solução simples e rápida necessidade de tuning do modelo a fim de melhorar os resultados ,https://github.com/JoseWalterLima,R
"Cairo,Alexandria",9,91,42,1, diabetes implementing a model to classify is the patient has a diabetes or now ,https://github.com/MohamedElrefai,MIT license
Singapore ,12,54,69,54, diabetes data analysis data source is from kaggle setup and run this project is based on python 3 6 6 run the following command and set up the environment pip3 install r requirements txt python main go ,https://github.com/andyafter,Jupyter Notebook
Arinos,4,13,0,218, python getting started a barebones django app which can easily be deployed to heroku this application supports the getting started with python on heroku article check it out running locally make sure you have python 3 7 installed locally to push to heroku you ll need to install the heroku cli as well as postgres git clone https github com heroku python getting started git cd python getting started python3 m venv getting started pip install r requirements txt createdb python_getting_started python manage py migrate python manage py collectstatic heroku local your app should now be running on localhost 5000 deploying to heroku heroku create git push heroku main heroku run python manage py migrate heroku open or documentation for more information about using python on heroku see these dev center articles python on heroku ,https://github.com/ademirrocha,MIT license
"Leeds, West Riding, UK",29,0,4,1092, diabetes this project was generated with angular cli version 6 0 8 development server run ng serve for a dev server navigate to http localhost 4200 the app will automatically reload if you change any of the source files code scaffolding run ng generate component component name to generate a new component you can also use ng generate directive pipe service class guard interface enum module build run ng build to build the project the build artifacts will be stored in the dist directory use the prod flag for a production build running unit tests run ng test to execute the unit tests via karma running end to end tests run ng e2e to execute the end to end tests via protractor further help to get more help on the angular cli use ng help or go check out the angular cli readme diabetes ,https://github.com/KevinMayfield,"Updated Oct 12, 2018"
Bangalore,29,0,4,20, diabetes_predictor web_app this repository consists of files required to run diabetes predictor machine learning web app created with flask ,https://github.com/Saeed-Khan46,Python
glasgow,10,16,11,60, interest areas mydiabetesiq use of recurrent neural networks convolutional neural networks to extract information from time series data in diabetes to allow regression classification analysis applications include prediction of mortality from hba1c time series analysis prediction of inpatient outcomes from pre admission data and individualised virtual n 1 drug trials to allow optimum drug selection use of unsupervised ml algorithms to identify incorrected entered data within large scale diabetes datasets continuous risk stratification of inpatients with diabetes association of inpatient glucose metrics and long term outcomes mechanisms linking glucose and cv risk in diabetes problem drug use and diabetes cystic fibrosis related diabetes multiscale variability in glucose metrics and association with outcome efficacy of structured intervention on glycaemic endpoints people current dr chris sainsbury consultant diabetes endocrinology csainsbury x y where x c sainsbury y nhs net dr greg jones consultant diabetes endocrinology honorary associate professor gregcjones x y where x g jones3 y nhs net dr debbie morrison gpsi diabetes honorary clinical lecturer previous dr sean harbison clinical development fellow output 2020 non steroidal anti inflammatory drugs and susceptibility to covid 19 joht singh chandan dawit tefra zemedikun rasiah thayakaran nathan byne samir dhalla dionisio acosta mena krishna m gokhale tom thomas christopher sainsbury anuradhaa subramanian jennifer cooper astha anand kelvin o okoth jingya wang nicola j adderley thomas taverner alastair k denniston janet lord g neil thomas christopher d buckley karim raza neeraj bhala krishnarajah nirantharakumar shamil haroon arthritis and rheumatology 2020 https doi org 10 1002 art 41593 2020 sodium glucose co transporter 2 inhibitors and susceptibility to covid 19 a population based retrospective cohort study c sainsbury j wang k gokhale d acosta mena s dhalla n byne j singh chandan a anand j cooper k okoth a subramanian m bangash t taverner w hanif s ghosh p narendran kk cheng tom marshall g gkoutos k toulis phd gn thomas phd a tahrani n adderley s haroon k nirantharakumar diabetes obesity and metabolism 2020 https doi org 10 1111 dom 14203 web 2020 renin angiotensin system inhibitors and susceptibility to covid 19 in patients with hypertension a propensity score matched cohort study in primary care s haroon a subramanian j cooper a anand k gokhale n byne s dhalla d acosta mena t taverner k okoth j wang j singh chandan c sainsbury d zemedikun gn thomas d parekh t marshall e sapey nj adderley k nirantharakumar preprint medrxiv 18 sep 2020 web 2020 remodelling diabetes services and emerging innovation dj wake fw gibb p kar b kennon dc klonoff g rayman mk rutter c sainsbury rk semple european journal of endocrinology 183 2 web 2020 obstructive sleep apnea a risk factor for cardiovascular and microvascular disease in patients with type 2 diabetes findings from a population based cohort studynj adderley a subramanian k toulis k gokhale t taverner w hanif s haroon gn thomas c sainsbury aa tahrani k nirantharakumar diabetes care https doi org 10 2337 dc19 2116 web 2019 thyroid replacement therapy thyroid stimulating hormone concentrations and long term health outcomes in patients with hypothyroidism longitudinal study r thayakaran nj adderley c sainsbury b torlinska k boelaert d šumilo m price gn thomas ka toulis k nirantharakumar bmj 2019 366 https doi org 10 1136 bmj l4892 web 2018 admission glucose number agn a point of admission score associated with inpatient glucose variability hypoglycaemia and mortality j mckechnie r maitland car sainsbury gc jones journal of diabetes science and technology https doi org 10 1177 1932296818800722 web 2018 identifying modifiable risk factors to reduce inpatient hypoglycaemia pd murray ba mckee car sainsbury gc jones clinical pharmacist august 2018 vol 10 no 8 online doi 10 1211 cp 2018 20205227 web 2018 structured education using dose adjustment for normal eating dafne reduces long term hba1c and hba1c variability gs walker jy chen h hopkinson car sainsbury gc jones 2018 diabetic medicine web 2018 visit to visit hba1c variability and systolic blood pressure sbp variability are significantly and additively associated with mortality in people with type 1 diabetes an observational study stuart s wightman christopher a r sainsbury gregory c jones diabetes obesity metabolism web 2017 hba1c variability is associated with increased mortality and earlier hospital admission in people with type 1 diabetes graham s walker scott g cunningham christopher a r sainsbury gregory c jones diabetic medicine web 2017 a practical review of c peptide testing in diabetes e leighton c sainsbury g jones diabetes ther web pdf 2017 hypoglycemia and clinical outcomes in hospitalized patients with diabetes does association with adverse outcomes remain when number of glucose tests performed is accounted for gc jones jg timmons sg cunningham sj cleland car sainsbury journal of diabetes science and technology web pdf 2016 a practical approach to glucose abnormalities in cystic fibrosis gc jones car sainsbury web pdf 2016 is all hypoglycaemia treated as equal an observational study of how the type of diabetes and treatment prescribed prior to admission influences quality of treatment of inpatient hypoglycaemia gc jones j khan car sainsbury web pdf 2016 stroke and diabetes a dangerous liaison sl macpherson c sainsbury j dawson gc jones web pdf 2016 living with asthma and chronic obstructive airways disease using technology to support self management an overview d morrison fs mair l yardley s kirby m thomas web 2016 patterns and impact of hypoglycemia hyperglycemia and glucose variability on inpatients with insulin treated cystic fibrosis related diabetes gc jones zm chong j gilmour c matheson g macgregor c sainsbury web pdf 2016 metformin increases cortisol regeneration by 11βhsd1 in obese men with and without type 2 diabetes mellitus anderson aj andrew r homer nz jones gc smith k livingstone de walker br stimson rh web 2016 inpatient glycemic variability and long term mortality in hospitalized patients with type 2 diabetes jg timmons sg cunningham car sainsbury gc jones journal of diabetes and its complications 2016 evaluation of a combination of sglt2 inhibitor and glp 1 receptor agonist treatment in type 2 diabetes hayden j huang f mcconnell lmj sainsbury car jones gc diabetes primary care 18 3 135 138 2016 managing multimorbidity in primary care in patients with chronic respiratory conditions npj primary care respiratory medicine 26 16043 d morrison k agur s mercer a eiras ji gonzález montalvo k gruffydd jones primary care respiratory medicine 26 16043 2016 experience of and predictors of response to dapagliflozin in a real life cohort of people with type 2 diabetes huang f hayden j mcconnell lmj sainsbury car jones gc journal of diabetes nursing 20 7 238 243 2015 capillary blood glucose monitoring inpatient hypoglycaemia and quality of care gc jones cg perry a monaghan b kennon car sainsbury british journal of diabetes 15 1 24 26 pdf 2015 comment on a justification for less restrictive guidelines on the use of metformin in stable chronic renal failure gc jones car sainsbury diabetic medicine 32 2 287 287 2015 longitudinal blood pressure control long term mortality and predictive utility of serum liver enzymes and bilirubin in hypertensive patients l mccallum j panniyammakal ce hastie j hewitt r patel gc jones s muir m walters n sattar af dominiczak s padmanabhan hypertension 66 1 37 43 pdf 2014 trends in recorded capillary blood glucose and hypoglycaemia in hospitalised patients with diabetes gc jones h casey cg perry b kennon car sainsbury diabetes research and clinical practice 104 1 79 83 2014 dipeptidyl peptidase 4 inhibitors in routine clinical practice experiences from a scottish teaching hospital al brown cr sainsbury c fenelon ab mullen gc jones british journal of diabetes 14 4 134 137 pdf 2014 numerical simulation of blood flow and pressure drop in the pulmonary arterial and venous circulation mu qureshi gda vaughan c sainsbury m johnson cs peskin ms olufsen na hill biomechanics and modeling in mechanobiology 13 5 1137 1154 2013 long term and ultra long term blood pressure variability during follow up and mortality in 14 522 patients with hypertension ce hastie p jeemon h coleman l mccallum r patel j dawson w sloan p meredith gc jones s muir m walters af dominiczak d morrison gt mcinnes s padmanabhan hypertension 62 4 698 705 pdf 2012 rarefaction and blood pressure in systemic and pulmonary arteries ms olufsen na hill gda vaughan c sainsbury m johnson journal of fluid mechanics 705 280 305 2012 hematocrit predicts long term mortality in a nonlinear and sex specific manner in hypertensive adultsnovelty and significance l paul p jeemon j hewitt l mccallum p higgins m walters j mcclure hypertension 60 3 631 638 2012 boerhaave s syndrome and diabetic ketoacidosis k mitchell g jones practical diabetes 29 7 268 268 2011 amp activated protein kinase is activated in adipose tissue of individuals with type 2 diabetes treated with metformin a randomised glycaemia controlled crossover study jg boyle pj logan gc jones m small n sattar jmc connell diabetologia 54 7 1799 1809 presentations 2019 predicting mortality in both diabetes and open source clinical datasets from free text entries using machine learning natural language processing diabetes technology society november 2019 washington dc pdf 2019 personalising risk prediction in diabetes using machine learning bridging the gap between rct and rcd royal college of physicians and surgeons glasgow may 2019 glasgow pdf 2019 data landscape presentation march 2019 pdf 2018 machine learning approaches to i predicting response to therapy in diabetes ii data driven diabetes subtype classification and iii synthetic data generation dundee 210618 pdf ppt 2018 machine learning neural network driven algorithmic classification of type 1 or type 2 diabetes at the time of presentation significantly outperforms experienced clinician classification duk london pdf 2018 parallel time series analysis of hba1c and systolic bp using a recurrent neural network rnn stratifies for 1 year mortality in type 2 diabetes independent of age and parameter variability duk london pdf 2018 parallel time series analysis of hba1c systolic blood pressure and bmi using recurrent neural networks stratifies for 1 year mortality in t2dm independent of age and parameter variability attd vienna pdf 2018 time series analysis of hba1c using recurrent neural networks stratifies for 1 year mortality in type 1 and type 2 diabetes independent of age and variability attd vienna pdf 2017 mydiabetesiq machine learning for decision support outcome prediction in diabetes automated clinical epidemiology studies workshop university of birmingham 141217 pdf 2017 diabetes and opiate replacement therapy ort a retrospective cohort study of health care usage and clinical outcomes h druce d morrison c sainsbury r lowrie c ritchie gc jones oral presentation rcgp london pdf 2017 glucose dynamics and mortality in rrt patients an initial report matthew a rutherford gregory c jones alan g jardine patrick b mark peter c thomson christopher ar sainsbury oral presentation sra dunblane 2017 pdf 2017 diabetes and opiate replacement therapy ort a retrospective cohort study of healthcare usage and clinical outcomes h druce r lowrie c ritchie d morrison car sainsbury gc jones poster presentation easd lisbon 2017 pdf 2017 serum chloride predicts mortality risk in type 2 diabetes analysis of 91 159 patients from the west of scotland linsay mccallum christopher a sainsbury gregory c jones sandosh padmanabhan aha 2017 pdf 2017 serum chloride is a mortality risk predictor in type 2 diabetes mellitus analysis of 91 159 patients in the west of scotland linsay mccallum christopher a sainsbury gregory c jones sandosh padmanabhan oral presentation esh milan 2017 pdf 2017 non stimulated c peptide is independently associated with requirement at 1 year for insulin therapy in paitnets with diabetes a retrospective cohort study of 872 patients el leighton k smith sg cunningham car sainsbury gc jones poster presentation ece lisbon 2017 pdf 2017 admission glucose number agn a novel score associated with adverse outcomes in patients admitted with type 2 diabetes car sainsbury sg cunningham r srivastava gc jones poster presentation diabetes uk manchester 2017 pdf 2017 glucose variability and risk of hypoglycaemia amongst inpatients with type 2 diabetes and its relationship to drug class exposure km fairhurst sg cunningham car sainsbury gc jones poster presentation diabetes uk manchester 2017 pdf 2017 does pre admission hba1c predict inpatient glucose characteristics and outcomes in patients with diabetes m talla sg cunningham car sainsbury gc jones poster presentation diabetes uk manchester march 2017 pdf glucose_ai_presentation_files diab uk hba1c inpatient glucose characteristics pdf 2017 admission glucose number agn a novel point of admission score associated with prolonged admission duration and with glycaemic characteristics in patients with type 1 diabetes r maitland r srivastava s cunningham g jones c sainsbury 2017 attd paris oral presentation pdf 2016 does type of diabetes and treatment prescribed prior to admission influence quality of treatment of inpatient hypoglycaemia car sainsbury j khan gc jones british endocrine society oral presentation pdf ,https://github.com/csainsbury,Jupyter Notebook
"columbia, Missouri",1,3,4,0, diabetesapp ,https://github.com/YohanesPatrick,"Updated Aug 20, 2018"
Finland,4,0,6,1144, diabetesassistant aiheenkuvausjarakenne md testausdokumentti md käyttöohjeet md tuntikirjanpito md linkit pit testi checkstyle raportti kurssisivu ,https://github.com/KristianLauttamus,"Updated May 6, 2020"
"Austin, TX",11,9,13,0, detection of diabetes in pima indian dataset given a pima indian dataset predict the onset of diabetes by training a deep neural network the features in the data are number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 no diabetes 1 diabetes ,https://github.com/nirav99,"Updated Mar 9, 2018"
"Ohio, United States",1,1,1,9, a crossplatform program used to store and calculate glucose numbers carbohydrate intake and the insulin dosages necessary to counteract both currently offers basic functionality but the plan is to be able to use this on windows android ios and web interfaces to help manage your diabetes ,https://github.com/ethan-lefeb,"Updated Mar 21, 2019"
Spain,1,1,2,69, diabetesslmanager ongoing project about diabetes management ,https://github.com/Pinx0,"Updated Dec 27, 2015"
Delhi,16,15,10,219, diabetesdataset diabetes dataset using logistic regression ,https://github.com/manavgakhar,"Updated Jul 3, 2019"
Bangalore,6200,0,2,412, diabetes prediction ,https://github.com/krishnaik06,Python
Shanghai,26,38,89,90, 天池精准医疗大赛 人工智能辅助糖尿病遗传风险预测 第一赛季 这次大赛第一赛季的主题 是通过对病人的临床数据和体检指标来预测其血糖值 大赛提供的训练数据包含病人的性别 体检日期以及血常规 肾功能检查等指标 每个指标分别作为一个字段储存在数据表中 最后一列为我们要预测的血糖值 该repo记录了参加本次大赛的各种数据探索 特征工程 特征选择 交叉验证模型以及 线上提交模型 虽然 最后的结果并不尽人意 但是从doufu大佬和wufei大佬那里学到了很多 basic_analysis offline 这个文件夹下 包含了最开始的数据探索和线下的交叉验证模型 通过数据探索 了解了数据的大体分布情况 线下模型从一开始的按性别划分 分别进行训练预测 演变成直接把性别作为特征 全量训练预测 期间 doufu大佬开源的基于交叉验证的lightgbm融合模型给了我很大的启发 相信排行榜中 有不少参赛队是在那份开源代码的基础上修改来的 而那份代码确实 四两拨千斤 仅仅用原始特征就取得了较好的结果 后来 看到wufei大佬的融合方案 借鉴了其nn模型 并利用其nn模型最后隐层的26个batch normalized的输出 作为特征输入到lightgbm进行测试 线下也得到了提高 同时 也与nn模型的结果进行了融合 online 包含了线上提交所使用的各种模型 最后 提交所使用的模型为lgb_nn_ensembing py 融合了nn模型与lightgbm 同时将nn模型的隐层输出作为特征加入到lightgbm中 util 包含了特征工程 评价函数 模型参数 缺失数据采用随机森林填充 特征间的相关性 比各特征与血糖值之间高多了 ,https://github.com/zixuanweeei,JavaScript
Ghana,12,14,56,0, diabetes prediction with k nearest neighbor algorithm using knn algorithm to predict if a person will have diabetes or not visualizing data before processing f1_score 0 6956521739130436 accuracy_score 0 8181818181818182 ,https://github.com/boosuro,Kotlin
"Mountain View, CA",37,0,0,4, this repo contains the jupyter notebook for predicting hospital readmission for patients with diabetes using deep learning for simplicity we will use the train validation test splits from a prior project https github com andrewwlong diabetes_readmission this uses the dataset from uci machine learning repository https archive ics uci edu ml datasets diabetes 130 us hospitals for years 1999 2008 the methodology behind this notebook is explained in my medium blog post getting started with conda environment conda env create f environment yml conda activate diabetes_deep python m ipykernel install user name diabetes_deep ,https://github.com/andrewwlong,Python
Hamburg/ Germany ,1,1,1,13, healthcare app this application helps the patients who suffer from diabetes to maintain there sugar level support from version 4 to till dated please fork and work don t push anything here android application diabetes patients building it build gradle note target sdk 27 will no longer support android studio 3 0 ,https://github.com/viswesvar,Jupyter Notebook
"Trichy,India ",15,16,7,458, end to end diabetes prediction application using machine learning mini project table of content overview motivation demo learning objective technical aspect technologies used to do installation run bug feature request team license credits overview in this project the objective is to predict whether the person has diabetes or not based on various features suach as pregnancies insulin level age bmi the data set that has used in this project has taken from the kaggle this dataset is originally from the national institute of diabetes and digestive and kidney diseases the objective of the dataset is to diagnostically predict whether or not a patient has diabetes based on certain diagnostic measurements included in the dataset several constraints were placed on the selection of these instances from a larger database in particular all patients here are females at least 21 years old of pima indian heritage and used a simple random forest classifier motivation the motivation was to experiment with end to end machine learning project and get some idea about deployment platform like heroku and offcourse this diabetes is an increasingly growing health issue due to our inactive lifestyle if it is detected in time then through proper medical treatment adverse effects can be prevented to help in early detection technology can be used very reliably and efficiently using machine learning we have built a predictive model that can predict whether the patient is diabetes positive or not this is also sort of fun to work on a project like this which could be beneficial for the society demo visit this link for live demo learning objective the following points were the objective of the project if you are looking for all the following points in this repo then i have not covered all in this repo i m working on blog about this mini project and i ll update the link of blog about all the points in details later the main intention was to create an end to end ml project data gathering descriptive analysis data visualizations data preprocessing data modelling model evaluation model deployment technical aspect training a machine learning model using scikit learn building and hosting a flask web app on heroku a user has to put details like number of pregnancies insulin level age bmi etc once it get all the fields information the prediction is displayed on a new page technologies used bug feature request if you find a bug the website couldn t handle the query and or gave undesired results kindly open an issue here by including your search query and the expected result if you d like to request a new function feel free to do so by opening an issue here please include sample queries and their corresponding results installation clone this repository and unzip it after downloading cd into the flask directory begin a new virtual environment with python 3 and activate it install the required packages using pip install r requirements txt execute the command python app py team ditikrushan giri credits took inspiration from krish naik who is a youtuber he makes contents on data science his youtube channel link icons by icons8 note webapp can handle concurrency upto some extent but can be scaled ,https://github.com/ditikrushna,Jupyter Notebook
"La Jolla, CA",16,2,134,195, synopsys project 2016 2017 leveraging deep learning to derive de novo epigenetic mechanisms from ppargc1a to account for missing heritability in type ii diabetes mellitus data statistical analysis jupyter notebooks until github fixes notebook renderings please visit the following links same as notebooks https nbviewer jupyter org github minhoolee synopsys project 2017 blob master notebooks 0 1 mhl data analysis ipynb https nbviewer jupyter org github minhoolee synopsys project 2017 blob master notebooks 0 1 mhl model predictions ipynb https nbviewer jupyter org github minhoolee synopsys project 2017 blob master notebooks 0 2 mhl model predictions ipynb synopsys competition tri fold the focus of the project was in using deep learning to predict novel epigenetic mechanisms like dnase i sites histone modifications and transcription factor binding sites from raw genomic sequences type ii diabetes t2d is a common disease that affects millions of people each year but as of today only around 10 of its heritability has been explained researchers speculate that this is because epigenetics is heavily involved so my project was designed to interpret millions of samples and hundreds of epigenetic regulators to be able understand the combinatorial effects of these epigenetic mechanisms i conducted this independent research project for the synopsys science fair as a high school junior in order to train my models i built my own custom pc see specs here i would like to thank my mentor renee fallon in providing me biology textbooks and general advice custom built pc steps for reproducing results step 1 get data download processed data from deepsea and move them to data processed data is processed in the following manner data on histone modifications dnase i hypersensitive sites and transcription factor binding sites is collected from chip seq and dnase seq methods this data entails 919 chip seq and dnase seq peaks from processed encode and roadmap epigenomics data releases for grch37 this data is publically available to download and has been processed by the researchers of the deepsea framework zhou the input is encoded in a 1000 x 4 binary matrix with the columns corresponding to a t g and c the rows corresponds to the number of bp 1kbp in a single bin that will serve as the input for a single neuron these 1000 bp regions are centered around 200 bp sequences that contain at least one transcription factor site 400 bp sequence paddings for genome sequence context the data is split into test train and validation sets and the sets are separated based off of chromosomes in order to ensure that the model can be tested for high bias step 2 create model create a method in src models create_models py that constructs a keras model sequential functional etc and then returns it step 3 train model run make train model_func method from step 2 model_name some unique identifier step 4 test model and generate predictions run make test model_func same as from step 3 model_name same as from step 3 step 5 generating performance roc pr stdev etc scores and visualizations see notebooks and run the code after execute the following headers make sure to run them with the theano backend for keras because the models were all trained on theano project organization license makefile makefile with commands like make data or make train readme md the top level readme for developers using this project data xa0 xa0 external data from third party sources xa0 xa0 interim intermediate data that has been transformed xa0 xa0 processed the final canonical data sets for modeling xa0 xa0 raw the original immutable data dump docs a default sphinx project see sphinx doc org for details models trained and serialized models model predictions or model summaries csv csv logs of epoch and batch runs json json representation of the models predictions predictions generated the train models and their best weights weights best weights for the models yaml yaml representation of the models notebooks jupyter notebooks naming convention is a number for ordering the creator s initials and a short delimited description e g 1 0 jqp initial data exploration references data dictionaries manuals and all other explanatory materials reports generated analysis as html pdf latex etc xa0 xa0 figures generated graphics and figures to be used in reporting requirements txt the requirements file for reproducing the analysis environment e g generated with pip freeze requirements txt src source code for use in this project xa0 xa0 __init__ py makes src a python module xa0 xa0 data scripts to download or generate data xa0 xa0 xa0 xa0 make_dataset py xa0 xa0 features scripts to turn raw data into features for modeling xa0 xa0 xa0 xa0 build_features py xa0 xa0 logging scripts to improve python logging xa0 xa0 xa0 xa0 log_utils py xa0 xa0 models scripts to train and test models and then use trained models to make predictions xa0 xa0 xa0 xa0 create_models py script to create a keras model and return it to train_model py xa0 xa0 xa0 xa0 predict_model py xa0 xa0 xa0 xa0 test_model py xa0 xa0 xa0 xa0 train_model py xa0 xa0 unit_tests scripts to test each unit of the other scripts xa0 xa0 xa0 xa0 visualization scripts to create exploratory and results oriented visualizations xa0 xa0 plot_train_valid py xa0 xa0 stats py xa0 xa0 visualize py tox ini tox file with settings for running tox see tox testrun org project based on the cookiecutter data science project template cookiecutterdatascience ,https://github.com/minhoolee,JavaScript
Brazil,5,3,26,199, openlibrenfc disclaimer do not use sensors modified with this app to make medical decisions i am not responsible to any damage to the sensor that might occur use this at your own risk this app is only intended for research installation apks are available on the release tab here on github you can also build the app yourself this guide from the androidaps docs explains how to build an apk the steps should be basically the same just using this repository instead you ll need the android sdk installed and define the android_sdk_root environment variable after that you can run gradlew to build the apk file it should probably be signed so you can install it you can also install android studio and build it from there usage when you open the app you can select different options scan reset age start and then scan the sensor which will execute whatever you selected when you scan the sensor to perform any action you should wait for the second vibration to stop scanning this might take a bit longer with operations which involve writing into memory the dump memory option will dump 360 bytes of the sensor s fram to sdcard openlibrenfc memory_dump txt and the load memory will load that same file if you edit that file the checksums won t be checked and it might send the sensor into failure if a checksum is incorrect make sure you have backups of previous memory dumps so you can restore it in case anything happens ,https://github.com/cominixo,Jupyter Notebook
Brazil,107,133,423,4802, meu diabetes repositório da plataforma meu diabetes um projeto da disciplina de inteligência artificial da ufrn instalação para instalar o projeto entre na pasta após a realização do git clone e execute os comandos a seguir para o projeto é necessário o python 3 6 e o pip já instalados primeiramente deveremos instalar o pipenv pip install pipenv com o pipenv instalados devemos entrar no nosso virtualenv com pipenv shell com o pipenv instalado deveremos instalar nossas dependencias pipenv install requeriments caso o pipenv install der problema instale o numpy pipenv install numpy execução para executar o projeto entre na pasta meudiabetes cd meudiabetes agora inicie seu servidor python manage py runserver se tudo ocorreu bem seu servidor está ativo na porta 8000 basta entrar no link do seu localhost ,https://github.com/mpsdantas,GPL-3.0 license
"Shenzhen, China",28,5,208,40, diabetes diagnosis expert system this program is written by liu kanglong kim dung bui meng yang lwi tiong chai dipti bijpuria tan xinli steven 2016 nus copyright this is a knowledge based recommender system to help diagnose diabetes for users ,https://github.com/mikelkl,JavaScript
The Netherlands,33,2,2,267, d calc d calc is a bolus calculator for type 1 diabetics using an insulin pen not an insulin pump introduction once configured start the app input your blood glucose reading input your estimated carbohydrate intake and it will suggest a bolus based on that information d calc has been designed for convenience and helps to remove errors and guesswork when calculating your insulin dose history started in 2012 d calc is a bolus calculator for your iphone the project was originally in delphi xe2 the 1st delphi version that came with an ios compiler and the firemonkey framework it ran on ios4 and ios5 and ios6 in 2014 the project was re written in delphi xe6 the new version added support for iob insulin on board and an application badge for units of insulin on board it ran on ios7 and ios8 d calc integrates with chris bowley s diabetes diary available separately on the app store in 2015 apple pulled d calc from the app store because it is out of compliance with guideline 22 9 22 9 apps that calculate medicinal dosages must be submitted by the manufacturer of those medications or recognized institutions such as hospitals insurance companies and universities are you a hospital university insurance company or drug manufacturer please contact me together we might bring this project back to life diabetes is hard work we can help patients with diabetes often children and remove errors from their guesswork requirements delphi 10 seattle delphi mobile add on pack disclaimer always consult your physician or diabetes clinic before use and please adjust the settings before using the calculator for the first time ,https://github.com/svanas,Java
Japan,15,21,11,287, diabeatit click here to view user authentication implemented deployed app click here to view single user deployed app click here to view app code with user authentication implemented technologies used html css javascript react jsx bootstrap font awesome datepicker moment node express mongoose orm object relational mapping mongodb nosql restful api google maps api yelp fusion api edamam api json axios passport google oauth mlab heroku app is responsive and designed for a mobile screen and larger overview an app that helps prevent diabetes through healthy eating this is a group project of an eight member team diabeatit is a mern stack app mongodb express react node technical specification by page login the user logs in with their google credientials and their email address is assigned as the username and saved to window localstorage whenever a user logs in a data entry they make through the app will be saved together with their username as one of the data fields into mongodb while signed in out of all the data that is stored in mongodb only data that has their username saved together with it will display to the app when the user clicks any of the sign out buttons on the app localstorage will be cleared out and the user will be taken back to the splash page the page uses passport and google oauth for user authentication calorie entry the user can enter their calorie intake by meal drink or ingredient from a predefined list or they can type in the information by manual entry the data is then sent and stored in mongodb the app uses its own restful api a restful api is an application program interface api that uses http requests to get put post and delete data this functionality is also known as crud create read update delete calorie data the user can retrieve the data entered on the calorie entry page from mongodb the retrieved data is then filtered by date and sorted by meal category the page has button options to allow a user to edit or delete an entry in mongodb store finder the user can search for market or fitness places based on their specified location the result is then displayed to a map the page uses a yelp fusion api to make the store search request and a google maps api to display the location of the store recipe finder the user can search for recipes by entering the ingredients they wish to have included and their target calorie amount the page uses an edamam api to make the receipe search request health timeline the user can enter a variety of information including gender height and weight to display their life expectancy in a horizontal bar chart digital health card the user can enter their emergency and personal information to render a digital health card this data is sent and stored in mongodb resources the user can find information on what diabetes is and how to prevent becoming diabetic ,https://github.com/makicoding,HTML
CA,3,1,13,5, laravel php framework laravel is a web application framework with expressive elegant syntax we believe development must be an enjoyable creative experience to be truly fulfilling laravel attempts to take the pain out of development by easing common tasks used in the majority of web projects such as authentication routing sessions and caching laravel aims to make the development process a pleasing one for the developer without sacrificing application functionality happy developers make the best code to this end we ve attempted to combine the very best of what we have seen in other web frameworks including frameworks implemented in other languages such as ruby on rails asp net mvc and sinatra laravel is accessible yet powerful providing powerful tools needed for large robust applications a superb inversion of control container expressive migration system and tightly integrated unit testing support give you the tools you need to build any application with which you are tasked official documentation documentation for the entire framework can be found on the laravel website contributing to laravel all issues and pull requests should be filed on the laravel framework repository license the laravel framework is open sourced software licensed under the mit license ,https://github.com/jooskim,"Updated Aug 23, 2018"
"Denver, Colorado",0,1,0,252, diabetes demographics in colorado visualization project of diabetes rates along age income food security and urban rural settings motivation effectiveness in health awareness programs and education come from a greater understanding of the demographics involved by indentifying target areas within the population health and food resources prevention and treatment programs can be aimed with greater precision we believe that the stated variables of age income food security urban rural setting have an effect on the rates of diabetes amongst the population of colorado goal by visualizing the demographics of colorado along age income food security and urban rural settings as they pertain to diabetes rates the aim is to identify areas within the state s population that would benefit from allocation of resources and education data data sources usda food environment atlas data for colorado census tracts 2017 diabetes in adults cdphe community level estimates census tracts 2014 2017 diabetes hospitalization rate census tracts 2013 2017 income poverty census tracts 2014 2017 current prevalence of diabetes center for disease control 2011 2020 educational attainment census tracts 2013 2017 all resources were accessed from cdphe open data https data cdphe opendata arcgis com using the above sources the data will be visualized across multiple charting methods urban vs rural diabetes and hospitalization rates rural and urban coloradans have roughly equivalent average diabetes rates 8 however urban coloradans are hospitalized for diabetes far more often than rural coloradans 20 we conjectured that distance to a hospital may account for why rural diabetics are hospitalized less often than urban diabetics looking into this we mapped hospital locations in reference to rural and urban census tracts and differences were not significant while rural coloradans do have less access to hospitals in terms of distance that doesn t explain why hospitalizations per 100 000 people occur at a much greater rate in urban areas we conjecture that people in urban areas may have less access to consistent care in terms of yearly checkups and prescription compliance and may have lower insured rates leading to more complications and hospitalizations additionally there is a slightly higher correlation between almost all access impairing factors income distance education and both hospitalization per 100 000 and estimated diabetes rates in urban census tracts suggesting that the higher hospitalization rate in urban areas may be connected to a compounding of access imparing issues this study could be furuther pursued by adding in census data regarding rural and urban insured rates and by looking at compounded access imparing factors insured data is available from the small area health insurance estimates 2018 dataset from the census bureau diabetes rates along lila rated census tracts low income li rankings are determined by poverty rates at least 20 or median family income at or below 80 of metropolitan area or the state s median income low access la status is measured in four different ways the first three are based on the distance to the nearest supermarket or grocer the distance thresholds for urban ares is 0 5 and 1 mile while rural areas are measured at 10 and 20 miles the last measure is based on household without access to a vehicle that live over 0 5 miles colorado has 52 9 of it s census tracts with no lila designation that represents 3 701 428 residents of colorado s 5 395 805 total population this analysis will compare their rates of diabetes along their population sizes there was a slight negative correlation between the diabetes rates and the population size of each lila tract group this was also showed in the census tracts that did not have a lila designation though not as strongly given the weight of the non lila tracts it was worth investigating where that correlation was coming from the variance among the data points in the lower population tracts gave a path for the data to determine where that variance would come from seperating the data along the urban rural designation in each lila tract allowed for more visualization of where the variance was occuring the lower population rural tracts showed significantly higher rates of diabetes rates adding health and education resources per capita would allow for a clearer view of how these affected tracts are being managed from a medical perspective ,https://github.com/Ryan-Eberle,JavaScript
Shanghai,4,3,36,644, diabetes control app an android app to record the blood sugar and other data for diabetes users record the data presentation in table and chart upload to the cloud to be accessed by doctors remind user to take medications build up good habits for taking pills and record data on time ,https://github.com/chennanni,HTML
"Jabalpur,India",1,10,29,0, diabetes detection using neural network diabetes mellitus dm commonly known as diabetes is a group of metabolic disorders characterized by high blood sugar levels over a prolonged period artificial intelligence in medical science refers to real world medical domains considered and discussed at the proper depth from both the technical and the medical points of view data science and machine learning is helping medical professionals make diagnosis easier by bridging the gap between huge data sets and human knowledge we can begin to apply machine l earning techniques for classification in a dataset that describes a population that is under a high risk of the onset of diabetes given the medical data we can gather about people we should be able to make better predictions on how likely a person is to suffer the onset of diabetes and therefore act appropriately to help we can start analyzing data and experimenting with algorithms that will help us study the onset of diabetes ,https://github.com/akanshu11121,Jupyter Notebook
Kochi,16,34,98,79, gluco open source diabetes management gluco is a open source diabetes management system features cloud based material design track blood glucose level blood pressure body weight get a detailed graph overview of your diabetes track your activity get diet tips license copyright 2018 patrick prakash licensed under the apache license version 2 0 the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license 2 0 unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license ,https://github.com/PatrickPrakash,JavaScript
"Houston, Texas",77,0,20,185, patient selection for diabetes drug testing i built a model that predicts the expected days of hospitalization time which determines whether the patient is selected for the clinical trial in clinical trials the drug is often administered over a few days in the hospital with frequent monitoring testing therefore the target patients are people that are likely to be in the hospital for this duration of time and will not incur significant additional costs for administering the drug and monitoring after discharge dataset i used a modified dataset from uc irvine dependencies using anaconda consists of the following 1 install miniconda on your computer by selecting the latest python version for your operating system if you already have conda or miniconda installed you should be able to skip this step and move on to step 2 download the latest version of miniconda that matches your system linux mac windows 64 bit 64 bit bash installer 64 bit bash installer 64 bit exe installer 32 bit 32 bit bash installer 32 bit exe installer install miniconda on your machine detailed instructions linux http conda pydata org docs install quick html linux miniconda install mac http conda pydata org docs install quick html os x miniconda install windows http conda pydata org docs install quick html windows miniconda install 2 create and activate a new conda environment for windows users these following commands need to be executed from the anaconda prompt as opposed to a windows terminal window for mac a normal terminal window will work these instructions also assume you have git installed for working with github from a terminal window but if you do not you can download that first with the command conda install git 3 create local environment clone the repository and navigate to the downloaded folder this may take a minute or two to clone due to the included image data git clone https github com idataist patient selection for diabetes drug testing git cd downloads create and activate a new environment named ehr env with python 3 7 if prompted to proceed with the install proceed y n type y linux or mac conda create n ehr env python 3 7 source activate ehr env windows conda create name ehr env python 3 7 activate ehr env at this point your command line should look something like ehr env user user_dir user the ehr env indicates that your environment has been activated and you can proceed with further package installations install a few required pip packages which are specified in the requirements text file be sure to run the command from the project root directory since the requirements txt file is there pip install r requirements txt ipython3 kernel install name ehr env user ,https://github.com/iDataist,GPL-3.0 license
"Berlin, Germany / Hennigsdorf, Germany",1,1,3,0, diabetes diary a meteor mobile app to keep track of health data for diabetes patients pre alpha disclaimer experimental pre alpha this app is in pre alpha status it s an experiment and should be treated as such if you feel like joining the experiment feel free about the management of health data health data is sensitive and important as a diabetes patient you should keep track of your values outside of this app as neither the data s safety nor its integrity can be guaranteed in experimental pre alpha mode neither owner nor any contributors are responsible for any actions anybody takes regarding his or her health exemption from liability this app is heavily under development neither owner nor contributors are responsible for actions an individual chooses to take with the code published this includes but is not limited to any effects the app will have on the device it is installed on choices based on the data entered into the app or any other action about this app this app is an experiment in using the meteor framework to build a mobile app the app s goal is to provide a diabetes patient with the means to keep track of his blood glucose value the meals he eats the insuline injected and further comments we aim to keep as much control over the data as possible with the user please refer to the to do list for features not yet included in the app demo find a running demo here diadia meteor com the demo is running in the browser and is also a native mobile app for example the android version can be downloaded here you need to allow the installation of untrusted apps on your android device quickstart install meteor https www meteor com install clone the repository git github com borp diabetes diary git one plugin must be installed via mrt before mrt add clockpicker this plugin is not transferred to the new package style yet more info can be found here https github com andrasph meteor clockpicker run the app in browser for local development meteor or on a plugged in device meteor run android device meteor run ios device more general information regarding meteor can be found here http docs meteor com basic technical details for more specific technical details please see technical documentation build ℹ this has only been tested for android to build the app meteor build tmp diadia server diadia meteor com 80 debug the debug flag seems to be needed to install the apk on the phone without going through the app store afterwards you ll find the compiled apk within tmp diadia insert_path more information on building mobile apps for android and ios http docs meteor com basic buildingmobileapps license mit ,https://github.com/boRp,R
"Seattle, WA",13,14,1,4, keras transfer learning ,https://github.com/alew104,Jupyter Notebook
Mumbai,0,2,2,20, diabetes diabetes predicitons using pima india diabetes data from kaggle ,https://github.com/mananashah007,Python
United Kingdom,39,13,0,2, express prototyping tool prototyping tool built in express it will give you a basic express app with templates css and images from the gov uk front end toolkit requirements node you may already have it try node version getting started clone this repo if you don t have node download it here http nodejs org run the app node start js go to localhost 3000 in your browser hot reload any code changes should update in the browser without you restarting the app the app recompiles app assets stylesheets application scss everytime changes are observed ,https://github.com/amosie,"Updated Apr 11, 2016"
Berlin,2,0,0,5, diabetes about 422 million people worldwide have diabetes particularly in low and middle income countries diabetes is a chronic metabolic disease characterized by elevated levels of blood glucose or blood sugar which leads over time to serious damage to the heart blood vessels eyes kidneys and nerves the most common is type 2 diabetes usually in adults which occurs when the body becomes resistant to insulin or doesn t make enough insulin in the past three decades the prevalence of type 2 diabetes has risen dramatically 1 goals of the exercise 1 take the original diabetes dataset and preprocess it to get the toy dataset that comes with scikit learn 2 given features like age sex and blood sugar and lipid levels predict the disease progression of diabetes patients after one year diabetes dataset database obtained from bradley efron trevor hastie iain johnstone and robert tibshirani 2004 least angle regression annals of statistics with discussion 407 499 there are ten baseline variables and six blood serum measurements obtained for each of n 442 diabetes patients as well as the response of interest a quantitative measure of disease progression one year after baseline each row corresponds to the values of one patient 2 variables age sex 1 male 2 female bmi body mass index kg m2 bp average blood pressure mm hg blood serum measurements s1 tc total cholesterol mg dl s2 ldl low density lipoprotein ldl mg dl bad cholesterol s3 hdl high density lipoprotein hdl mg dl good cholesterol s4 tch ratio total cholesterol hdl s5 ltg triglycerides mmol l s6 glu glucose mg dl response y a quantitative measure of disease progression one year after baseline ,https://github.com/macabeigier,"Updated Nov 24, 2019"
São Paulo/SP,0,1,0,0, diabetes ,https://github.com/marrsantos,MIT license
"Banglore,India",0,11,17,193, diabetes predicting if a patient has diabetes or not using the dataset from kaggle called pima indians diabetes database ,https://github.com/Siddhesh19991,"Updated Oct 3, 2019"
India,7,8,21,93, diabetes ,https://github.com/mphirke,Apache-2.0 license
"Banglore,India",0,11,17,193, diabetes predicting if a patient has diabetes or not using the dataset from kaggle called pima indians diabetes database ,https://github.com/Siddhesh19991,"Updated Oct 3, 2019"
"St charles, MO",0,11,17,28, diabetes build models and compared different models accuracy ,https://github.com/tle1000,MATLAB
"London, UK",63,43,72,1516, drac filthy script to automatically ingest some lovely blood data from my accu chek mobile and aviva expert install npm install config most of this is hard wired for my set up atm run npm link drac upload path to file csv upload from a csv accu chek mobile and aviva expert support drac download downloads from accu chek mobile directly drac info loverly bit of information credits tidepool data schema https github com tidepool org data model blob master device data types smbg md ascii vamp http www chris com ascii joan www geocities com soho 7373 haloween html ,https://github.com/zaccolley,Jupyter Notebook
Houston Area,0,0,16,391, diabetesclassifier ,https://github.com/madarahr,"Updated Dec 30, 2019"
"Auckland, New Zealand",2,1,0,64, type ii diabetes prediction model this study will provide validated t2d prediction models relevant in contemporary new zealand s primary care core data see wiki for details regarding the core dataset including variable descriptions the core dataset is a predict population from 2006 2018 individuals are eligeable if they are diabetes free at time of predict risk assessment and where an index hba1c value is avaiable inclusion does not limit the number of prior predict assessments or prior cvd where eligeability is met at multiple predict assessments the earliest predict record is used as baseline information from the national health collection are linked to provide demographic hospitalised history hospitalised outcomes death specific outcomes and baseline treatment to ensure consistency the exclusion criteria see wiki have been applied in data management exclude if prior admission for diabetes or treated with antidiabetic drugs in last 6 months or noted as diabetic in predict or non existing hba1c test in prior 2 years or any hba1c in prior 2 years 50mmol mol exclusion critiera met within 30 days of study index date qc conflicts roll to next examine each visit and apply exclusion criteria continue with each nth visit to find those who could meet the inclusion criteria in subsequent visits starting with 564180 participants 371362 met criteria after first visit 12191 meet criteria in subsequent visit further removals remove out of age limits 25 74 14806 remove non avaliable hba1c within 30 days of predict 75764 remove dispensing records 1 month beyond dod 107 remove people with renal dialysis transplantation 826 remove exclusions detected within 30 days of study index 179 total remaining 277075 ,https://github.com/VIEW2020,"Updated Aug 13, 2019"
"Cuiabá, MT",27,13,4,94, diabetesproject_git ,https://github.com/eduardomartinsl,"Updated Nov 25, 2013"
Nigeria,0,1,0,20, diabetesprediction diabetes prediction ,https://github.com/Dandignity,"Updated Feb 26, 2020"
Israel,8,0,74,66, diabetes with machine learning predict future glucose level ,https://github.com/OrDuan,Java
"Ohio, United States",1,1,1,9, a crossplatform program used to store and calculate glucose numbers carbohydrate intake and the insulin dosages necessary to counteract both currently offers basic functionality but the plan is to be able to use this on windows android ios and web interfaces to help manage your diabetes ,https://github.com/ethan-lefeb,"Updated May 3, 2019"
Singapore,209,253,22,670, build a machine learning classifier model the pima indians of arizona have the highest reported prevalence of diabetes of any population in the world a small study has been conducted to analyse their medical records to assess if it is possible to predict the onset of diabetes based on diagnostic measures dataset is downloaded from kaggle xa0 the objective of this article is to build a predictive machine learning model to predict based on diagnostic measurements whether a patient has diabetes this is a binary 2 class classification problem there are 768 observations with 8 medical predictor variables input and 1 target variable output 0 for no or 1 for yes read more https towardsdatascience com building a machine learning classifier model for diabetes 4fca624daed0 connect with me https www linkedin com in jnyh ,https://github.com/JNYH,Jupyter Notebook
New York,3,0,0,3, pima diabetes prediction using pima indians diabetes data set to predict whether a patient has diabetes or not based upon patient s lab test result variables like glucose blood pressure etc using cart decision tree algorithm and k nearest model achieving 76 accuracy python scikit learn scipy pandas matplotlib problem statement diabetes is one of the deadliest diseases in the world it is not only a disease but also creator of different kinds of diseases like heart attack blindness etc the normal identifying process is that patients need to visit a diagnostic center consult their doctor and sit tight for a day or more to get their reports so the objective of this project is to identify whether the patient has diabetes or not based on diagnostic measurements dataset used the dataset used has been obtained from uci machine learning repository having 769 records of female patients exclusively dataset link https archive ics uci edu ml datasets pima indians diabetes from the domain knowledge i have analyzed and found out the ranges of values and its effects on diabetes for each continuous variable in the dataset based upon these ranges we will categorize the continuous variables for implementing the decision tree in the next step also we can utilize these ranges to come up with appropriate null value replacement for each independent variable there are 8 independent variables pregnancies no of times pregnant glucose plasma glucose concentration a 2 hour in an oral glucose tolerance test mg dl a 2 hour value between 140 and 200 mg dl 7 8 and 11 1 mmol l is called impaired glucose tolerance this is called pre diabetes it means you are at increased risk of developing diabetes over time a glucose level of 200 mg dl 11 1 mmol l or higher is used to diagnose diabetes blood pressure diastolic blood pressure mmhg if diastolic b p 90 means high b p high probability of diabetes diastolic b p 60 means low b p less probability of diabetes skin thickness triceps skin fold thickness mm a value used to estimate body fat normal triceps skinfold thickness in women is 23mm higher thickness leads to obesity and chances of diabetes increases insulin 2 hour serum insulin mu u ml normal insulin level 16 166 miu l values above this range can be alarming bmi body mass index weight in kg height in m2 body mass index of 18 5 to 25 is within the normal range bmi between 25 and 30 then it falls within the overweight range a bmi of 30 or over falls within the obese range diabetes pedigree function it provides information about diabetes history in relatives and genetic relationship of those relatives with patients higher pedigree function means patient is more likely to have diabetes age years outcome class variable 0 or 1 where 0 denotes patient is not having diabetes and 1 denotes patient having diabetes the dependent variable is whether the patient is having diabetes or not data cleaning will take place as data has got lot of missing values handling missing values can be done either by replacing null values with mode or mean or replacing the null value with a random variable algorithms used as we have to classify the data into patients having diabetes or not the best method which can be used is classification and regression tree algorithm cart because in this the dataset is divided into training and testing data further we can easily classify and predict the outcome using nodes and internodes software package used python scikit learn numpy scipy matplotlib advantage of this project the rules derived will be helpful for doctors to identify patients suffering from diabetes further predicting the disease early leads to treating the patient before it becomes critical ,https://github.com/niharikagulati,JavaScript
"Paderborn, Germany",28,46,99,45, pima indians diabetes kaggle this repo contains the solution of the pima indians diabetes database https www kaggle com uciml pima indians diabetes database given on kaggle ,https://github.com/rrichajalota,JavaScript
India,7,10,39,458, diabetis detection machine learning practice diabetes detection using python jupyter notebook pima diabetes data etc ,https://github.com/AvinashKrSharma,Python
"Changchun, Jilin",8,30,113,1, tianchi diabetes game 大赛网址 https tianchi aliyun com competition introduction htm spm 5176 11165320 5678 1 5bed6d79kvosxw raceid 231638 introduction 天池精准医疗大赛 其分为三个阶段初赛 复赛和决赛 初赛的题目是针对2型糖尿病的回归问题 根据受检者的体检数据和临床信息对血糖值进行预测 复赛的题目是针对妊娠糖尿病的二分类问题 通过体检信息和基因信息预测出是否患有妊娠糖尿病 决赛是在现场进行答辩 本人是积极向上团队中的队员 积极向上团队再精准医疗大赛中取得了初赛top 11和复赛top 6的成绩 当前代码仓库仅仅包含了本人参赛中的思路和代码 当公布初赛结果时 我发现初赛预测结果比我们提交的效果更好 后来也没有仔细分析 仅仅把当时的代码稍微整理一下 团队复赛最终提交版的天池社区技术圈 https tianchi aliyun com forum new_articledetail html spm 5176 8366600 0 0 36a8311fxpfajx raceid 231638 postsid 4714 path tianchi diabetes preliminary 初赛代码 repecharge 复赛代码 preliminary 预处理 矩阵补全技术softimpute填充缺失值 标准化 归一化 模型 lightgbm 调参 grid search 关键 样本中存在两类数据 正常血糖值 高血糖值 通过分类方法找到高血糖值得样本 对其进行整体预测值提高 达到精准得效果 运行方式 数据预处理 preprocesskma py 模型预测 kma py repecharge 预处理 snp基因位点信息与其余信息进行分别填充 snp填0 其余信息通过softimpute填充 模型 lightgbm 调参 grid search 关键 模型融合 多次填充取均值 运行方式 程序运行较慢 preprocess3 py lgb py prerequisites numpy pandas scikit learn lightgbm fancyimpute ,https://github.com/hekind,TSQL
"Munich, Germany",75,55,100,1, diabetes60 dataset rgb d images of 60 western dishes home made data was recorded using a microsoft kinect v2 feel free to read and cite our corresponding paper raw dataset the raw dataset contains 60 chunks of rgbd pairs of typical german dishes within the current version there are some duplicate dishes so there may be more than 60 scenes in total download the raw dataset from here python utilities use the utilities in python utils py to load the data basically images are dumped in plain npz format whereas color has 4 channels bgra and depth has 1 channel the helper function in the python package removes the alpha channel by default and performs a barrel roll such that the channel format becomes rgb the kinect sensor typically records depth values in millimeters so you can divide the depth values by a factor of 1000 to obtain meters cite inproceedings christ_2017_iccv author ferdinand christ patrick and schlecht sebastian and ettlinger florian and grun felix and heinle christoph and tatavatry sunil and ahmadi seyed ahmad and diepold klaus and menze bjoern h title diabetes60 inferring bread units from food images using fully convolutional neural networks booktitle the ieee international conference on computer vision iccv month oct year 2017 ,https://github.com/PatrickChrist,JavaScript
UK,11,17,0,0, diabetes classification predict whether a patient has diabetes this dataset is originally from the national institute of diabetes and digestive and kidney diseases the objective is to predict based on diagnostic measurements whether a patient has diabetes i conducted a brief exploratory data analysis then ran three models logistic regression linear svc and gradient boosting classification links 1 https www kaggle com uciml pima indians diabetes database ,https://github.com/mldataanalysis,"Updated Aug 23, 2018"
"Dublin, Ireland",29,39,10,121, trocaire diabetes management app collection the goal of this project is to provide tools to enable patients with diabetes to communicate their blood sugar level and blood pressure test results these test results data must be visualised for doctors so that they can track the health and wellbeing of their patients and take actions if necessary client requirements in countries like somalia in which poor health literacy is prevalent diabetic patients are unable to attend frequent doctor appointments diabetes mellitus is a chronic condition predominantly affecting the pancreas that fails to adequately produce insulin this results in dangerously high blood sugar levels these spikes often cause comorbidities such as diabetic ulcers blindness and hypertension as these can rapidly develop regularly scheduled doctor appointments are highly recommended to maximise patient care however poor online infrastructure in somalia has resulted in poor patient compliance for these appointments as there is currently no digital platform for doctors to track and monitor their patients solution to combat this problem we have developed an app entitled korta that aims to resolve the disconnect between patients and doctors this results in an improvement in both patient compliance and overall care korta is a mobile and web based app designed for both diabetic patients and their doctors using the app doctors can create individual patient profiles to allow for the ability to automatically and securely upload patient data with minimal literary requirements the biometric data is displayed graphically for the clinician with any abnormalities highlighted notifications alert the doctor to contact a patient should they need to be called in for an appointment overall a platform has been created to track and monitor diabetic patients in somalia thereby improving patient care the app has the potential to be translated to other regions or to monitor additional biometrics like cholesterol finally the app is particularly relevant to covid 19 of which diabetes is a large risk factor as allowing doctors to remotely identify and monitor these high risk patients without the need for an in person assessment would reduce a diabetic patient s risk of contracting the virus patient android app allows patients to input readings designed for illiterate users readings can be inputted manually or through optical character recognition doctor android app allows doctors to sign up patients and monitor them includes a visualisation and alert system patient follow up reminders and patient profiles administrative dashboard web app allows signing up doctors clinics and admins this dashboard serves both administrators and doctors includes an email verification procedure technology description front end android studio for the doctor and patient apps google vision api and opencv for ocr mpandroidchart for visualisations firebase for authentication technology description back end node js for the server express to handle requests mysql as the database developed using typescript firebase for authentication azure blob storage to store images screenshots patient app doctor app web app team developed by a team comprising of senior sophister ba mod computer science students and msc bioengineering students at trinity college dublin installation xa0 please get in touch with one of the contributors to discuss installation ,https://github.com/sullaVM,JavaScript
Pune,1,3,1,3, pima indian diabetes prediction context this dataset is originally from the national institute of diabetes and digestive and kidney diseases the objective of the dataset is to diagnostically predict whether or not a patient has diabetes based on certain diagnostic measurements included in the dataset several constraints were placed on the selection of these instances from a larger database in particular all patients here are females at least 21 years old of pima indian heritage content the datasets consists of several medical predictor variables and one target variable outcome predictor variables includes the number of pregnancies the patient has had their bmi insulin level age and so on source https www kaggle com uciml pima indians diabetes database ,https://github.com/akashtalla,JavaScript
India,0,0,6,20, pima indian diabetes model using keras diabetes model implemented in keras deep learning library here pima indian diabetes data set is used i have used keras sequential to create the model https keras io models sequential data set csv file link https raw githubusercontent com jbrownlee datasets master pima indians diabetes data csv data set link https raw githubusercontent com jbrownlee datasets master pima indians diabetes names there are eight input variables and one output variable the last column in the dataset csv file we will be learning a model to map rows of input variables x to an output variable y which we often summarize as y f x input variable x number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years output variables y class variable 0 or 1 keras diabetes model implementation steps load data define keras model compile keras model fit keras model evaluate keras model make predictions ,https://github.com/erdivyang10,"Updated Oct 10, 2019"
Montreal,1,0,0,1, diabetes eda this small project is an exploratory data analisis of a diabtes dataset from from kaggle project structure notebooks in the root folder of the project you will find two notebooks prepended with a number 1 preparation ipynb 2 univariate analysis ipynb 3 multivariate analysis ipynb this files are to be opened in order so that the flow in which the project was developed can be followed data the folder data contains the following paths 1_original contains the original data as was received the contents of this folder should never be modified so we always have a backup 2_prepared data ready for analysis project setup in order to successfully run the project make sure that anaconda https www anaconda com downloads is installed in your system since it is used as an environment package manager once conda is installed in your system navigate to the project s root in your terminal where the file transit_env yml and run the following command conda env create f transit_env yml this will create the environment that will be used to run the project once all the packages are installed run the command jupyter notebook ,https://github.com/lkronecker13,"Updated Sep 22, 2019"
"Plainsboro, New Jersey",8,8,2,362, diabetes an application to measure how much pizza you have eaten ,https://github.com/VirajShah21,"Updated Apr 11, 2016"
Mumbai,46,6,21,209, pima diabetes dnn ,https://github.com/vidit0210,"Updated Nov 21, 2020"
Arinos,4,13,0,218, python getting started a barebones django app which can easily be deployed to heroku this application supports the getting started with python on heroku article check it out running locally make sure you have python 3 7 installed locally to push to heroku you ll need to install the heroku cli as well as postgres git clone https github com heroku python getting started git cd python getting started python3 m venv getting started pip install r requirements txt createdb python_getting_started python manage py migrate python manage py collectstatic heroku local your app should now be running on localhost 5000 deploying to heroku heroku create git push heroku main heroku run python manage py migrate heroku open or documentation for more information about using python on heroku see these dev center articles python on heroku ,https://github.com/ademirrocha,"Updated Oct 3, 2019"
"Leeds, West Riding, UK",29,0,4,1092, diabetes this project was generated with angular cli version 6 0 8 development server run ng serve for a dev server navigate to http localhost 4200 the app will automatically reload if you change any of the source files code scaffolding run ng generate component component name to generate a new component you can also use ng generate directive pipe service class guard interface enum module build run ng build to build the project the build artifacts will be stored in the dist directory use the prod flag for a production build running unit tests run ng test to execute the unit tests via karma running end to end tests run ng e2e to execute the end to end tests via protractor further help to get more help on the angular cli use ng help or go check out the angular cli readme diabetes ,https://github.com/KevinMayfield,Apache-2.0 license
"Castle Rock, CO",5,6,14,643, diabetes this script was written to track measurements collected by diabetics d_monitor py prompts the user to update data files reads information from files and creates graphical representations of the data prompts the user to create a back up of the data files d_update py accelerates the input of routine entries into the data files ,https://github.com/TimothyHelton,Python
Roodeport,5,6,14,0, diabetescms ,https://github.com/SMhlengi,"Updated Dec 30, 2019"
Karachi Pakistan,6,5,1,449, diabetes_identification diabetes_identification ,https://github.com/MuhammadUsama100,Ruby
"Cuiabá, MT",27,13,4,94, diabetesproject_git ,https://github.com/eduardomartinsl,Objective-C
"Nairobi, Kenya",2,1,1,71, diabetesprediction diabetes prediction challenge ,https://github.com/fonyango,"Updated Jul 3, 2019"
North America,2,0,1,47, diabetes analysing pima indians diabetes dataset with weka and python reproducing expanding in weka abstract reproducing case study of shvartser 1 posted at dr brownlee s comprehensive ml learning website 2 reproducing the study and explicitly stating the filters used expanding on the case study by balancing classes by over and under sampling minority and majority classes respectively annotating predictions with probabilities exercising control over probability threshold to reduce false negatives at the cost of false positives reproducing in part 1 of the case study the case study claims that larger values of plas combined with larger values for age pedi mass insu skin pres and preg tends to show greater likelihood of testing positive for diabetes i don t see much likelihood from the scatter plot both positive and negative data points for the said attributes overlap for the most part the datasets are reproduced with the following filters diabetes arff original unchanged dataset discretize arff supervised attribute discretize missing arff it is ambiguous which filter was applied to generate this dataset in the case study so i skip this file instead i provide further treament in 5 and 6 normalized arff unsupervised attribute normalize on all attributes not applied on the class which is nominal anyways remove_missing arff fellow user credits due at the uci ml repository 3 4 observes there are zeros in places where they are biologically impossible such as the blood pressure they are likely missing values i further checked the remaining attributes except pregnancy they either cannot be zero e g mass or don t have zero e g pedigree in the former case i assume zero indicates missing values and use dr brownlee s post 1 to remove the missing values this reduces the number of instances from 768 to 392 needless to say this purges dataset by half replaced_missing arff following on comment on 5 i again use brownlee s post 5 to replace the missing values with the mean of the attribute value square arff standardized arff unsupervised attribute standardize with these datasets i have been able to reproduce the weka experiment in part 2 i added one more algorithm for establishing a baseline namely zeror the numbers are highly similar as reported by shvartser 5 we have considered both linear e g logistic regression lr and non linear e g random forest rf classifiers we also see that their evaluation metrics are not statistically different in such a case linear model is preferable and i use lr for further analysis expansion now the case study rightly notices that there is class imbalance 65 ve and 35 ve in part 2 i am unsure if the class was balanced in cross validation in the interest of reproducing the study i do not balance the classes for the above datasets namely 1 8 as you may know class imbalance leads to a majority classifier and we see this artifact when zeror gives us about 65 accuracy to balance the classes i generate two additional datasets oversampling arff increases the number of minority class ve instances by a specified percentage i specify the default of 100 and that increases the number of ve instances to be at par with the majority class ve instances i applied the smote and randomize filters in that order the total instance count becomes 1 036 this mildly contaminates the pure data samples with synthethic ones see shams youtube for step by step method for applying smote and randomize filters 7 undersampling arff i use spreadsubsample and randomize filters in that order to reduce the number of majority class instances to be at par with minority class instances namely 268 the total number of instances are now 536 again see shams second video 8 for step by step procedure this method removes valuable instances of the majority class intuitively acquiring additional instances is likely to be more effective than undersampling the majority class or just oversampling the minority class the accuracy or percent_correct in the weka experiment are stated below dataset t t zeror lr diabetes arff t65 11 77 10 v oversampling arff t51 74 75 51 v undersampling arff t49 62 73 73 v where v represents the statistical difference note the accuracy of zeror dropped to about 50 as anticipated the accuracy of lr is still close to our previous best determining statistical significance of accuracies for lr across the datasets is still outstanding next the area under roc in the weka experiment are stated below dataset t t zeror lr diabetes arff t0 50 0 83 v oversampling arff t0 50 0 84 v undersampling arff t0 50 0 82 v finally the f measures in the weka experiment are stated below dataset t t zeror lr diabetes arff t0 79 0 83 v oversampling arff 0 00 0 75 v undersampling arff t0 50 0 74 v note f measure of zeror for oversampling is 0 00 this seems incorrect and is different 0 446 to the same metric algorithm and dataset in weka explorer controlling the number of false negatives it might be nice to see the associated probabilities with a prediction incidentally lr provides associated probability out of the box the following direction will allow you to store the predictions in csv weka explorer classify more options output predictions choose csv file i build lr model with use training set and store the predictions in the pred csv file a sample inst actual predicted error neg_prob pos_prob 1 1 tested_negative 1 tested_negative 0 744 0 256 2 1 tested_negative 1 tested_negative 0 577 0 423 3 1 tested_negative 1 tested_negative 0 829 0 171 4 1 tested_negative 1 tested_negative 0 994 0 006 5 1 tested_negative 2 tested_positive 0 424 0 576 the sign indicates the probability of the predicted class the sign indicate an incorrect prediction whichever class has the highest probability i e greater than 0 5 is the predicted class the confusion matrix for building lr across the whole dataset confusion matrix a b classified as 446 54 a tested_negative 111 157 b tested_positive the false positives 54 above cause unnecessary worry and typically follows another test to confirm the result the false negatives 111 above are really bad in this case lr is predicting that a subject does not have a disease where they may have actually got one naturally a physician might want to reduce the number of false negatives at the cost of increasing false positives i could not adjust the probability threshold from 0 5 to an another value in weka i did a work around by building on pred csv file at the bottom of diabetes_proc tab in the diabetes xlsx file positive probability and trigger are drawn the positive probability has been sorted and hence the ascending curve is seen as the probability crosses 0 5 delta the trigger happens and the prediction is a positive test i invite you to change the value of delta to see the effects on the chart and the confusion matrix the value of false negatives reduces from 112 to 84 when the delta value is reduced from zero to 0 10 as a side effect false positives also increase from 69 to 94 with this delta change outstanding so far we have prepared and identified which datasets and algorithms seem most suitable an actual model to generate predictions is pending i see that as a simple exercise and is documented in the lesson 14 of the 14 day mini course on weka 10 determining statistical significance of accuracies for lr across the datasets is still outstanding reproducing expanding in python after reproducing and expanding the case study in weka i decided to reproduce them in python reasons i have developed understanding of the problem weka case will serve as a baseline for comparison i want to get an idea on the amount of effort and flexibility both platforms provide on the same problem for the warm up i worked through dr brownlee s your first machine learning project in python step by step 11 i wrote up the code with headings to allow the follower of the output to see what is going on in addition to my expanded weka case study the python part expands the case study further by additional algorithms for spot checking balancing class labels using lr parameter grid search on the hyperparameters searching for the cross over point between sensitivity and specificity plotting roc curve sensitivity and specificity cross over not too exciting saving and loading the model from disk reproducing expansion similar to python step by step 11 i summarize and visualize the datasets generating plots where possible i in contrast to creating different files for each datasets i store the datasets in memory i rescale the data both normalization and standardization as suggested in the post 12 i observe that that the mean and standard deviation are very close to zero and one respectively but not exactly i posted this as a question on the blog 12 and assume that these close enough values are acceptable in the community and move forward i feed the dataset to the algorithms for each dataset a comparison plot is generated where each algorithm performance is drawn using a box plot while not too worried about the average accuracy value being different i notice the weka and python are report differences in the statistical significance for the same algorithms this merits further investigation nonetheless the algorithms have similar performance one exception is svm which has consistently lower accuracy the algorithms are instantiated with their default parameters arguably sufficient for the first run the algorithms contain both linear lr and lda and nonlinear knn cart nb etc algorithms in all the cases i see that lr performs well with high accuracy either lr has the highest accuracy or statistically insignificant to others having higher accuracy one exception is where rf provides statistically significant better accuracy compared to lr one possible way forward is to fine tune rf to see if we can further improve the accuracy this is left as future work grid search i take lr to the next rounds next step is to fine tune lr i perform a grid search 13 for lr over c and penalty parameters logisticregression implementation in scikit takes a class_weight parameter which when set to balanced automatically adjust weights inversely proportional to class frequencies in the input data i prefer this over oversampling minority class with smote as that contaminates the samples mildly i use test_size 0 33 for splitting train test sets for grid search before the actual grid search i get a baseline accuracy of lr with default parameters and the train test datasets namely about 0 76 to my surprise optimal c and penalty_model parameters from grid search also give us about the same accuracy i e 0 76 it turns out the optimal and default c value is the same i e 1 however there is a difference in the penalty model i e default is l2 and the optimal is l1 the different penalty model apparently had no effect on the accuracy next i did a quick store and load of the model and confirm the accuracy score remains the same with the loaded model i generate the evaluation metrics on the test set x_test accuracy_score about 0 76 1 confusion_matrix tn fp fn tp 121 41 21 71 sensitivity or true positive rate tpr about 0 63 specificity or ture negative rate tnr about 0 75 classification report roc area under the curve auc about 0 84 controlling number of false negatives the sensitivity and specificity trade off recall we want to exercise control over false negatives by adjusting the value of delta i e as the positive probability crosses 0 5 delta the trigger happens and the prediction is a positive test in general sensitivity and specificity trade off against each other recall we saw an example in the diabetes xlsx when we changed the value of delta the original paper 14 that provides the dataset shows that sensitivity and specificity cross over when their values are about 0 76 1 this may be considered a good balance between tpr and tnr the default value of zero delta provide us with tpr and tnr of 0 63 and 0 75 respectively i determine the value of delta where sensitivity and specificity cross by looping through a set of delta values and generating respective tpr and tnr values note i am superimposing the delta value on the underlying lr model and probabilities and then generating predictions and other metrics on the superimposed perspective the underlying lr model remains unchanged i looked into pushing the delta value into the underlying but decided against it due to the reasoning by lejlot at stackoverflow 15 i draw a plot show the changing values of sensitivity and specificity with each delta value from the plot it can be seen that sensitivity and specificity cross when delta is about 0 026 the rate value of sensitivity and specificity is about 0 76 we have reproduced the result of the paper by lr in the shell output we can also see that false negative fn increase when the value of delta increases deltax sensitivity_tpr specificity_tnr 0 02 0 7717391304347826 0 7407407407407407 confusion_matrix tn fp fn tp 120 42 21 71 deltax sensitivity_tpr specificity_tnr 0 06 0 7391304347826086 0 7654320987654321 confusion_matrix tn fp fn tp 124 38 24 68 deltax sensitivity_tpr specificity_tnr 0 12 0 717391304347826 0 7777777777777778 confusion_matrix tn fp fn tp 126 36 26 66 let delta 0 10 the evaluation metrics on the test set x_test accuracy_score about 0 74 confusion_matrix tn fp fn tp 111 51 16 76 reduced from 21 when delta 0 sensitivity or true positive rate tpr about 0 83 increased specificity or ture negative rate tnr about 0 67 decreased classification report finally we can also plot the probability values for sorted positive tests and their respective triggers and visualize them graphically future work investigate why weka and python report differences in the statistical significance with their default parameters explore if fine tuning rf further improve the accuracy of predictions reproducing in jupyter and databrick notebooks after reproducing and expanding the case study in python i first reproduced it in jupyter notebook diabetes ipynb the motivation is to get hands on with jupyter notebook in hindsight it might be natural to explore and develop a data science case study with the notebook first and then transform it into a script this is because the notebook allows more interactive to and fro modications and micro executions once the jupyter notebook is complete i move on to databricks platform 16 databricks aims to help users with cloud based big data processing using spark also it has a notebook similar in principle to jupyter the community edition offers a single node cluster and associated workspace to create and execute multiple notebooks the cluster springs to life within minutes and i use databricks runtime version 4 1 includes apache spark 2 3 0 scala 2 11 i see the databricks notebook over spark cluster as a jumping board to perform data science at scale so i transform diabetes py into a databricks notebook 17 naturally i need to upload the data diabetes data to the cluster it turns out to be mostly a copy paste job except with the following annoying differences with present version of sklearn 0 18 1 in databricks cluster the latest version of smote package does not work i installed an older compatible version the plot show needs to be followed by display for the plot to appear after you sign up to databrciks say community edition and setup a cluster you may import my notebook with a click of a button 17 isn t that nice the only caveat is notebook available for 6 motnhs after publishing so i also export it as diabetes_databricks ipynb so that it remains eternal it is possible to load jupyter notebook in databricks 18 though i haven t tried myself i need to see how can i use pyspark and scala spark perhaps in a different sitting conclusions personally i feel drawing a visual grid of too many attributes is overwhelming especially for scatter plot between attributes i found a correlation matrix much more helpful in quantifying relationships in this tutorial we didn t address any outliers or performed any feature engineering one reason that jumps out is that it is highly curated dataset my thoughts are weka explorer and experimenter are excellent tools to get quick and dirty analysis with algorithms and datasets without writing code for run time changes and further fine tuning coding seems necessary references 1 https machinelearningmastery com case study predicting the onset of diabetes within five years part 1 of 3 2 https machinelearningmastery com start here 3 https archive ics uci edu ml datasets pima indians diabetes 4 lichman m 2013 uci machine learning repository http archive ics uci edu ml irvine ca university of california school of information and computer science 5 https machinelearningmastery com how to handle missing values in machine learning data with weka 6 https machinelearningmastery leadpages co leadbox 144d0b573f72a2 3a164f8be4f346dc 5675267779461120 7 https www youtube com watch v w14ha2fmg6u t 242s 8 https www youtube com watch v ocolm73hens 9 https social msdn microsoft com forums azure en us 71d0efe7 4de0 4434 a4a6 5c27af876c1b smote consequences a question and an alternative forum machinelearning 10 https machinelearningmastery com applied machine learning weka mini course 11 https machinelearningmastery com machine learning in python step by step 12 https machinelearningmastery com rescaling data for machine learning in python with scikit learn comment 425333 13 https machinelearningmastery com how to tune algorithm parameters with scikit learn 14 https www ncbi nlm nih gov pmc articles pmc2245318 pdf procascamc00018 0276 pdf 15 https stackoverflow com questions 19984957 scikit predict default threshold 16 https databricks com try databricks 17 https databricks prod cloudfront cloud databricks com public 4027ec902e239c93eaaa8714f173bcfc 6710283852221561 2246037980686797 3061735664085706 latest html 18 https vincentlauzon com 2018 02 27 import notebooks in databricks ,https://github.com/dr-riz,Jupyter Notebook
"Dublin, Ireland",4,4,4,1, abbot freestyle libre flash glucose meter parser viewer objective create a library to read and manage tsv files created by the freestyle libre app to better understand and visualize the report data how to install npm install how to use the viewer user mount a local web server for example using node s http server and browse to the index html for example http 127 0 0 1 8080 index html to open the main view that lets you import a tsv file generated from the abbott freestyle libre app or use the test tsv example file and visualize the data in the highchart chart how to use the freestylelibrelib developer var reader new filereader reader readastext file reader onload function var report freestylelibrelib parsereport reader result tsv file format tab separated values like a csv but with tabs this is the format of the exported file generated by the abbot freestyle libre app when running the file export data menu option with the meter connected line 1 patient name this non standard tsv line break standard parsers is this line optional line 2 headers id time is yyyy mm dd hh mm the only possible date format record type 0 historic glucose 1 scan glucose 2 3 4 insulin need to read if rapid acting insulin units or long acting insulin units has data to know witch is witch probably appies to the non numeric ones too but is not tested 5 food 6 date change not implemented is there anything beyond type 6 historic glucose mmol l does the column name change if the meter units are not mmol l scan glucose mmol l does the column name change if the meter units are not mmol l non numeric rapid acting insulin rapid acting insulin units non numeric food carbohydrates grams non numeric long acting insulin long acting insulin units notes strip glucose mmol l does the column name change if the meter units are not mmol l ketone mmol l does the column name change if the meter units are not mmol l meal insulin units correction insulin units it seems that this is not used for insulin units user change insulin units it seems that this is not used for insulin units previous time for record type 6 updated time for record type 6 are these all the possible columns can the columns have another name if the meter or app is set up in other language lines 2 data how it looks ,https://github.com/nahog,Python
beijing,4,31,26,6, head diabetes_manage_app diabetes_manage_app 糖尿病管理系统安卓app c2b60bbedb1b4c258c2d71cd42b71fa7b5b152c0 ,https://github.com/ZhouBey,Jupyter Notebook
Germany,8,6,51,97, opendiabetesvault ,https://github.com/juehv,Jupyter Notebook
Kolkata,17,21,17,9, diabetes_prediction_software this is diabetes prediction software using python this is a machine learning model here i use knn algorithm you need to install pip install pywin32 for windows pip3 install pywin32 linux or mac if this is not working then try both pip install pywin32 and pip install pypiwin32 pip install sklearn pip install pandas pip install matplotlib download this and put into a same folder open jupyter notebook on this folder then run the diabetes_prediction_software ipynb or diabetes prediction software py use any ide for py enter values for prediction if you want to watch prediction time graphs etc then run the knn py try this values 148 72 35 0 33 6 0 6277 50 for diabetes and try this for non diabetes 89 66 23 94 28 1 0 167 21 ,https://github.com/codeingschool,R
"Pokhara, Nepal",62,31,276,1990, disease predictor a web app for heart disease prediction diabetes prediction and breast cancer prediciton using machine learning based on the kaggle datasets getting started these instructions will get you a copy of the project up and running on your local machine for development and testing purposes installation follow the instructions to run the system on your local machine first clone the project and https github com thearjun disease predictor git install the virtual environment pip install virtualenv then virtualenv myenv after that activate the virtual environment source myenv bin activate subsequently install the dependencies on your local machine pip install r requirement txt finally run the application python manage py runserver built with django the web framework used pip dependency management contributing please fork this project and send us a pull request authors arjun adhikari ,https://github.com/theArjun,MIT license
"Oakland, CA",111,16,94,56, readme a simple web app to help calibrate medtronic minimed insulin pumps and cgm sensors development npm i to install development dependencies npm run start to start a development server npm run build to create a production ready build located in the build folder ,https://github.com/ryanwiemer,JavaScript
Montreal,30,27,41,235, freshpulse built by edumonteiro fantasticjimmy prateeksan freshpulse is an app built to make life a little easier for diabetes patients it offers an interactive and robust way to record meals medications and medical readings furthermore it uses this data to monitor bmi and nutritional intakes make dietary recommendations and generate reports which may be equally useful for the patient and his or her doctor tech stack server side ruby v 2 2 3 sinatra sinatra contrib sintra activerecord sintra partial rake activesupport faker prawn puma tux google charts client side html css normalize css bootstrap font awesome javascript jquery chartjs classiejs demo important note freshpulse s current deployment is for demonstration purposes only please do not use this site for any other purposes it has not been built or verified by medical professionals and none of its content should be treated as a credible source of information or advice if you visit our site to test it s features please keep the aforementioned in mind and treat it as nothing more than an experimental model click here to visit the site username test0 password 1234 features following are a few of freshpulse s nifty features maintain an up to date profile with medical history and other important details track all meals and medications with a robust entry logging system record blood pressure and blood sugar levels daily access automatically generated analytics and interactive reports based on previous entries receive daily nutritional recommendations based on bmi calculations recent meals and other relevant factors all this and more in a clean and compact user interface screenshots log in screen user authentication and encryption architecture built using bcrypt the app maintains sessions for previously authenticated users sign up page form fields contain server side validations to ensure all important information is submitted in proper format dashboard the user s personalized dashboard is accessible upon login it links to all other components of the app and displays important information about daily nutritional intake bmi measurements and dietary recommendations meal reports a breakdown of daily nutritional intake along with a list of all foods consumed per day and the total calorific consumption new entry forms forms for recording meals medications blood pressure readings and blood sugar level readings the form displayed below is for recording medications freshpulse comes loaded with a database of every single medicine legally registered in canada as of february 2016 along with its drug identification number this database is integrated with the autocomplete feature of the input field for new medicines the drug identification number is updated automatically and can be shown to a doctor or pharmacist for precise drug identification a similar database is also integrated for food items and their estimated nutritional value entry logs automatically generated logs for all recorded meals medications and readings in the user s recent history all logs are categorized by date and ordered by time of consumption reading a user can edit previous entries recorded in the logs readings report a patient friendly and doctor friendly report containing the user s blood pressure readings blood sugar levels and weight readings in interactive graphs this page also contains other important analytics computed by the app including the average highest and lowest readings for each of the aforementioned parameters ,https://github.com/prateeksan,Java
"Pune, India",29,37,437,155, diabetes prediction onset of diabetes binary classification partial implementation of mlp as described in this paper dataset pima indians diabetes multilayer perceptron neural network with 8 inputs in the visible layer 32 and 16 neurons in the 2 hidden layer with relu activation function and 1 neuron in the output layer with sigmoid activation function network trained for 700 epochs with batch size of 10 using adam optimizer and binary_crossentropy loss function attribute information number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 or 1 ,https://github.com/nirajpandkar,HTML
"Warsaw, Poland",6,3,9,90, diabetes diagnosis and classification using machine learning neural networks tech paul walczak konrad sobolewski med doctor agata walczak bogatek ,https://github.com/WalczakPaulo,Python
fuzhou,17,10,47,0, diabetesarithmetic_version3 0 this resource includes the use of a variety of machine learning methods knn decisiontree random forest logistic regression support vector machine etc to predict diabetes ,https://github.com/hanlaoshi,"Updated Feb 5, 2018"
sector 35 b chandighar,7,6,45,77, pima diabetes prediction using tensflow ,https://github.com/adilshagoo87,HTML
VIT Vellore,10,5,192,105, fecare with an intention of fekar care in hindi towards the health of indian women web app link to view demo scroll to the end researchers have identified a bunch of districts in india that have a maximum prevalence of diabetes among women at least 50 of the 640 districts studied have a high prevalence of diabetes greater than one in every 10 among women and hence fecare classifier model aims to detect diabetes in indian women the clasifier was trained using pima indians diabetes dataset dataset info the dataset consists of several medical predictor variables and one target variable outcome predictor variables include number of times pregnant plasma glucose concentration 2 hours in an oral glucose tolerance test not included in training diastolic blood pressure mm hg triceps skinfold thickness mm 2 hour serum insulin mu u ml not included in training body mass index diabetes pedigree function age years as you can notice that two variables were not included in the training process this was due to the reason that the glucose tolerance test gtg can give very inaccurate results when conducted at home using a blood sugar measuring device and same is the case for finding the reading of 2 hour serum insulin as this project aims to provide regular diabetes check up for all women above the age of 20 years irrespective of their work engagement house wives and working women it is not possible in all cases that user will have the required tools skills and experience to execute the required test at home and hence the above features were eliminated from the training process requirements the user should know her general information age height weight and pregnancies to know the reading of diastolic blood pressure the user should have a blood pressure monitor like this which costs less than 100 to know the tricep skinfold thickness value the user should have a skinfold caliper and take the reading in the following manner the cost of skinfold caliper is less than 4 if the user do not know her diabetes pedigree function then it can be calculated on the web application using the following reference the user can input relative s details as much she knows in the web application and diabetes pedigree function will be calculated note that the value of the dpf increases as the number of relatives who developed dm increases as the age at which those relatives developed dm decreases and as the percentage of genes that they share with the subject increases also notice that the value of the dpf decreases as the number of relatives who never developed dm increases as their ages at their last examinain increase and as the percent of genes that they share with the subject increases steps for pre processing data and training classifier the data has a very less number of 1s in output cases with positive diabetes and hence this can affect the classifier s accuracy to differentiate with 1s and 0s due to this reason almost equal amount of data for 1s and 0s were taken in the training set for which the data was divided into two parts on the same basis and then segregated for training data now the two data frames with 1s and 0s were concatenated so that they can be accessed easily fixing missing values zeros in all other variables except pregnancies missing values in glucose 5 missing values in bloodpressure 35 missing values in skinthickness 227 missing values in insulin 374 missing values in bmi 11 missing values in diabetespedigreefunction 0 missing values in age 0 these values were fixed using the following algorithm let s say a data frame has 3 variables as shown below the missing value is 1st value in var1 now the 1st values of var2 and var3 are noted which are 500 and 0 35 respectively now we try to find similar values 500 0 35 in var2 and var3 which in this case are 3rd value in var2 and 0th value in var3 the missing value is then replaced by the average of var1 values at these positions 3rd and 0th in this case 89 81 2 85 var1 1 code the above algorithm is used to fix missing values in the following way glucose values from similar age and outcome values fix_miss_value data glucose age outcome bloodpressure values from similar age and glucose values bmi values from similar age bloodpressure and glucose values skinthickness values from similar age outcome glucose bmi values the rest variables used in training age and diabetespedigreefunction had no missing values scaling us the diabetespedigreefunction values these values were less than 1 while the other values were greater than 1 and hence these values were multiplied by 100 splitting data into training and testing set for training data 300 entries with 0 outcome and 250 values with 1 outcome were taken this collectively was 71 of the total data now the training data was ready the remaining 29 of data was further split into the 13 testing and 13 validation dataset neural network definition model_architecture py network fc1 linear in_features 6 out_features 40 bias true fc2 linear in_features 40 out_features 81 bias true fc3 linear in_features 81 out_features 36 bias true fc4 linear in_features 36 out_features 19 bias true out linear in_features 19 out_features 2 bias true the training data was passed to the above network and was trained for 1250 epochs the best trained network which had the least validation loss was saved and was further used to made predictions on test data the training accuracy given by the best model was 96 36 and the test accuracy was 85 fecare ipynb the pickle file fecare pkl of this best trained model was saved and was further used to make predictions in the web application web application app py general instructions to user for providing required inputs a know button for user to know how she can measure the tricep skinfold thickness taking the required inputs except diabetes pedigree function information about what diabetes pedigree function and how we can calculate that taking input of diaetes pedigree function if user already knows else taking inputs of the relatives information for calculating diabetes pedigree function a submit info button when the user is done inputting all the required information for calculating diabetes pedigree function and finally the results button which will display weather the user has diabetes or not if the user is found diabetic the user is adviced to do glucose tolerence test as next prefrence at the nearest laboratory to confirm results demo when diabetes pedigree function is unknown demo when diabetes pedigree function is known ,https://github.com/Rushanksavant,JavaScript
"Poland, Kraków",38,77,252,1055, diabefriend simple android application that is dedicated to help you handle your diabetes diabefriend is not currently available on google play store but you can download it from the link below https 1drv ms u s ahhucoe2 bg2 w_yy03_ficeakjb features provided by the app you can use offline database with nutritional data like kilocalories carbohydrates fat and proteins just provide app with product name you may choose product name from the list of about 7000 products and its weight i am diabetic myself and for me it is crucial to be reminded about the necessity of measurement after meal therefore you are welcomed to use the measurement feature you can enter how many carbohydrates there is in your meal how many insulin units you gave yourself and sugar level before the meal you will be reminded about testing sugar level after 2 hours then your whole measurement will be summarized which will help you keep your diary summary examples timer progress bar can be seen after a little while information about dosage ,https://github.com/jakubowiczish,GPL-3.0 license
India,10,14,97,1584, diabetes prediction using machine learning table of content overview motivation demo learning objective technical aspect technologies used to do installation run bug feature request team license credits overview in this project the objective is to predict whether the person has diabetes or not based on various features like number of pregnancies insulin level age bmi the data set that has used in this project has taken from the kaggle this dataset is originally from the national institute of diabetes and digestive and kidney diseases the objective of the dataset is to diagnostically predict whether or not a patient has diabetes based on certain diagnostic measurements included in the dataset several constraints were placed on the selection of these instances from a larger database in particular all patients here are females at least 21 years old of pima indian heritage and used a simple random forest classifier motivation the motivation was to experiment with end to end machine learning project and get some idea about deployment platform like heroku and offcourse this diabetes is an increasingly growing health issue due to our inactive lifestyle if it is detected in time then through proper medical treatment adverse effects can be prevented to help in early detection technology can be used very reliably and efficiently using machine learning we have built a predictive model that can predict whether the patient is diabetes positive or not demo visit this link for live demo learning objective the following points were the objective of the project the main intention was to create an end to end ml project data gathering descriptive analysis data visualizations data preprocessing data modelling model evaluation model deployment technical aspect training a machine learning model using scikit learn building and hosting a flask web app on heroku a user has to put details like number of pregnancies insulin level age bmi etc once it get all the fields information the prediction is displyed on a new page technologies used installation clone this repository and unzip it after downloading cd into the flask directory begin a new virtual environment with python 3 and activate it install the required packages using pip install r requirements txt run execute the command python app py bug feature request if you find a bug the website couldn t handle the query and or gave undesired results kindly open an issue here by including your search query and the expected result if you d like to request a new function feel free to do so by opening an issue here please include sample queries and their corresponding results owner sarvesh kumar sharma license gnu general public license version 3 ,https://github.com/shsarv,R
"Denver, Colorado",10,14,97,6, diabetes a test case illustrating the use of spark on real time iot data challenge the standard of care for type 2 diabetes includes monitoring average blood insulin level over three months new advances in medicine and data engineering allow for granular monitoring and care recommendations our challenge is to ingest data from personal health monitors securely transmit that data to the cloud apply data science analysis and display current status to the patient and care givers solution the first prototype uses python code on a raspberry pi to generate mock patient data streams simulating an oem diabetes monitor we ingest json data as mqtt packets into amazon aws iot subsequent iterations used a direct connection to kafka running on an ec2 instance which allows us to ingest streams from multiple patients maintain fault tolerance and enable multiple consumers to subscribe kinesis was also tested as an alternative to kafka from kafka kinesis or aws iot the next step is to subscribe to topics and ingest the data into longer term storage in s3 a small spark 2 1 cluster running on ec2 instances is used for this purpose we wrote code for spark in scala which reads json streams from a kafka topic transforming and joining the data into normalized formats then writing out the stream to parquet files on s3 that are partitioned by time and patientid for analysis and display of the patient condition the parquet files are analyzed in databricks notebooks running spark 2 2 the notebooks use regression and classification algorithms to score the current status of the patient and prioritize patients for home care visits ,https://github.com/brantseibert,"Updated Jul 15, 2015"
"Chicago, IL",204,146,220,555, diabetes research files for nshap diabetes project ,https://github.com/fgregg,"Updated Apr 11, 2016"
"kathmandu,Nepal",0,1,0,3, diabetes prediction diabetes prediction from pima indian diabetes database ,https://github.com/Basantakatuwal,HTML
delhi,3,4,0,20, diabetes logistic reg model matplotlib inline import numpy as np import pandas as pd import matplotlib pyplot as plt import seaborn as sns from sklearn preprocessing import standardscaler from sklearn linear_model import logisticregression from sklearn model_selection import train_test_split cross_val_score data pd read_csv diabetes2 csv header 0 print data head 5 print data tail 5 data info data corr y data outcome x data drop outcome axis 1 x pd get_dummies x drop_first true x head sns pairplot data kind reg plt show sns heatmap data corr plt show from sklearn model_selection import train_test_split x_train x_test y_train y_test train_test_split x y train_size 0 7 test_size 0 3 random_state 10 from sklearn linear_model import logisticregression log_reg logisticregression solver liblinear class_weight balanced log_reg fit x_train y_train y_pred log_reg predict x_test print y_pred from sklearn metrics import accuracy_score precision_score recall_score roc_curve auc roc_auc_score confusion_matrix classification_report accuracy accuracy_score y_test y_pred precision precision_score y_test y_pred recall recall_score y_test y_pred roc_auc roc_auc_score y_test y_pred cm confusion_matrix y_test y_pred print accuracy is accuracy print precision is precision print recall is recall print roc auc is roc_auc print confusion matrix is cm false_positive_rate true_positive_rate thresholds roc_curve y_test y_pred plt plot false_positive_rate true_positive_rate plt plot 0 1 0 1 y plt xlim 0 1 plt ylim 0 1 plt title receiver operating characteristic plt ylabel true positive rate sensitivity plt xlabel false positive rate 1 specificity plt show print area under the curve round auc false_positive_rate true_positive_rate 3 ,https://github.com/Pallavi7597,"Updated Nov 24, 2019"
beijing,4,31,26,6, head diabetes_manage diabetes_manage_server 糖尿病管理系统服务端 c1884651ed7e3cb4d246f51426e026ec3c9c8cce ,https://github.com/ZhouBey,Jupyter Notebook
127.0.0.1,29,297,2000,444, diabetes data mining in python r and weka attributes number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years ,https://github.com/Sphinxs,"Updated May 11, 2015"
"Wales, UK",826,2,57,2526, dboard a dashboard for type 1 diabetes visualize your historical blood glucose levels in a calendar like view with weekly summaries of a few key metrics generated from data stored in nightscout usage install python dependencies python3 m venv venv source venv bin activate pip install r requirements txt export data from nightscout mongoexport h host d database u user p password c entries fields type sgv mbg date datestring type csv o tmp entries csv publish locally dboard py bg_lower 3 9 bg_upper 8 tmp entries csv out python3 m http server 8000 then open http localhost 8000 out in a browser alternatively publish to google cloud to keep a permanent record export google_application_credentials see https cloud google com docs authentication production obtaining_and_providing_service_account_credentials_manually dboard py bg_lower 3 9 bg_upper 8 tmp entries csv gs bucket then open https storage googleapis com bucket index html in a browser how it works there is a single web page index html that has a small amount of javascript no libraries to load data from a metadata file index json and display the images for each day here s a snippet of index json week_start 03 09 2018 plots 2018 09 03 plot png 2018 09 04 plot png 2018 09 05 plot png 2018 09 06 plot png 2018 09 07 plot png 2018 09 08 plot png 2018 09 09 plot png range_low 3 9 range_high 8 0 tir 81 0 average_bg 6 7 est_hba1c 40 1 week_start 10 09 2018 plots 2018 09 10 plot png 2018 09 11 plot png 2018 09 12 plot png 2018 09 13 plot png 2018 09 14 plot png 2018 09 15 plot png 2018 09 16 plot png range_low 3 9 range_high 8 0 tir 80 3 average_bg 6 2 est_hba1c 37 0 the plots element contains paths to the images for each day in the week the json and png files are generated by the dboard python package the traces library is used to interpolate bg values to every minute this ensures that accurate statistics can be produced from the data time in range average estimated hba1c for plotting matplotlib is used to render each daily plot reports there are a few other reports daily carbs insulin that are produced separately mkdir p reports dboard py tmp treatments csv reports then look in the reports directory testing pytest coverage pip install pytest cov pytest cov report html cov dboard open htmlcov index html ,https://github.com/tomwhite,Jupyter Notebook
Paris,826,2,57,22, diabetes the data was collected and made available by national institute of diabetes and digestive and kidney diseases as part of the pima indians diabetes database several constraints were placed on the selection of these instances from a larger database in particular all patients here belong to the pima indian heritage subgroup of native americans and are females of ages 21 and above first of all download and read the data from the csv file and manipulate it as desired ,https://github.com/jose3g,Apache-2.0 license
Hamburg/ Germany ,1,1,1,13, diabetesrecords android project for diabetes patients ,https://github.com/viswesvar,"Updated May 6, 2020"
"Charlotte, NC",0,0,2,0, diabetesdiagnosis predicted whether a patient has diabetes and found out the common symptoms for providing accurate analysis used ggplot2 and lattice libraries to create customized charts and mice library for data imputation in r performed classification algorithms like decision tree neural networks knn on model achieving 70 overall accuracy used crisp dm methodology for structured approach and tableau for creating dashboards and statistical analysis ,https://github.com/rachitchoksi,1
"Nairobi , Kenya",10,4,2,247, diabetes prediction using logistic regression and scikit learn first we will have to import the necessary modules you can use either anaconda jupyter notebook or vs code to write your code we ll be using python and some of its popular data science related packages first of all we will import pandas to read our data from a csv file and manipulate it for further use we will also use numpy to convert out data into a format suitable to feed our classification model we ll use seaborn and matplotlib for visualizations we will then import logistic regression algorithm from sklearn this algorithm will help us build our classification model lastly we will use joblib available in sklearn to save our model for future use you can install the necessary dependencies using pip pip3 install matplotib pip3 install seaborn pip3 install scikit learn pip3 install joblib for storage of data for future use pip3 install pandas ,https://github.com/oyugirachel,"Updated Mar 21, 2019"
Curitiba Paraná,19,44,227,1124, diabetesapp for running this project you will need to put your google vision api key inside gradle properties visionapikey your api key ,https://github.com/FilipeLipan,Java
istanbul,8,9,25,49, diabetestracker project description diabetes is a diseas that widespread in today s world because of there is no permanent cure for it people with diabetes should learn how to live their lives and struggle with the difficulties they will face on their own in other words they are all alone on it our main purposes on that project are give informations to patients about what they need to do according to their test results and body mass index bmi create an opportunity of taking ideas from experts on subject users must add their personal details such as their ages and weights medicines they use or details on previous illnesses if they had etc while registering storing this kind of information will help for improve any further website activities the system also have doctors and fitness instructors which are experts on their areas as user beside diabetic patients it is expected that users can be able to ask questions to experts on topics that they are curious about the system will provide exercise plans eating schedules and also charts about their conditions that changing daily weekly and monthly based on patients blood glucose level which updated daily by them it is demanded from system that create a base which users can contact with others who at same level of disease and mutually help each other basis on their own experiences specific requirements functional requirement 1 1 title sign up 1 1 system shall provide register page for users 1 2 system must provide three login options to obtain account type 1 3 system must redirect user to another page according to chosen account type 1 4 system shall show a message that says users should upload document which can confirm account type to all users 1 5 system shall send user s information to system administration automatically 1 6 system will provide text boxes according to chosen account type 1 7 system must save name surname password e mail phone number birth date gender height weight profile picture and short cv 1 8 system shall contain document upload button 1 9 the confirmation document can be dietician report for diabetes or expert report from an institution 1 10 system must warn users if there is any empty box 2 functional requirement 1 2 title sign in 2 1 system will show two text boxes 2 2 system must check validity of given information and automatically send to home page 2 3 system must show warning if given information is wrong 3 functional requirement 1 3 title account recovery 3 1 system will show a text box 3 2 system must check validity of e mail address 3 3 system shall send mail that contain recovery link to given e mail address 3 4 system must show warning if given e mail address is wrong 3 5 system must redirect users to password changing page that contains two text boxes 3 6 system will accept password change if two written password equals 4 functional requirement 1 4 title adding new contacts 4 1 system must provide a button for adding a user when user see an overview of profile 4 2 if user click that button system must send a friend request to that user show notification on requested profile 4 2 1 if other user accepts the friend request users automatically added their contact lists 4 2 2 if other user rejects the friend request friend request must be deleted 5 functional requirement 1 5 title send message 5 1 system should provide a list of text boxes to obtain users in the system 5 2 system must provide a text box and a send button each user should be able to send instant message to any contact on users contact list 5 3 system will provide a message box that will display an error when trying to send a message that has more than 400 characters 5 4 system will provide a text box to display the message when the send message button is pressed 6 functional requirement 1 6 title show message 6 1 the system should provide a list of incoming messages alongside the message box 6 2 the system should provide a text box showing the user name of the sender of the message and a short preview of the incoming message to the list showing the new incoming messages 6 3 when the system clicks on the incoming message it will redirect to the message sending page and provide a list of text boxes to display incoming and outgoing messages 6 4 the system should provide text boxes with the date and time that they are sent alongside the text boxes where the messages are located 7 functional requirement 1 7 title show notification 7 1 the system must alert user if they are online by pop ups when there is notification 7 2 the system should provide notification box on the menu where users can view their recent notifications up to date 7 3 the system must send notifications when users daily and weekly posted 7 4 the system should allow users to clear their notification list 8 functional requirement 1 8 title search dieticians and fitness coaches 8 1 the system must let user to search dieticians and fitness coaches in search bar on the menu 8 2 the system should display profile pictures names and surnames and specific profession of the entered search 8 3 the system must display error message if there is no matching result 9 functional requirement 1 9 title show users best matches 9 1 the system must create a database by given information s while registering and match the users at same level of disease 9 2 the system should display profile pictures names and surnames and brief factors that cause the matching of users in the best matches menu 9 3 the system must display accounts by relevance order 9 4 the system should allow users to directly contact by putting send message button in that menu 9 5 the system must update best matches list weekly according to users data s 9 6 the only users who has registered as patient must see the best matches 9 7 users must see bests matches on their home page 10 functional requirement 1 10 title add diet and exercise list 10 1 system must include a button for adding a diet and exercise list 10 2 system must include text box areas and a save button 10 3 system must allow to add and save diet and exercise list for the users who registered as dieticians or fitness coaches 10 4 users shall be able to add additional information s on diet and exercise list these are type of the diabetes age range gender weight range and height range using insulin or not 10 5 system must save the given additional information and the writer information as a metadata for the diet and exercise list 11 functional requirement 1 11 title match diet and exercise list with users 11 1 system shall be able to compare users some information 11 1 1 if the users insulin usage and type of the diabetes information s are unknown system must warn the user for a once and until user enter his her these information s system does not match for a diet and exercise list 11 1 2 system must compare gender age body mass index type of diabetes and insulin usage information between user and diet and exercise lists and save it ones a day if the user online at that day 12 functional requirement 1 12 title show the diet and exercise list 12 1 system must include a text area 12 1 1 system must show the diet and exercise list if the user saved a diet and exercise list before 12 1 2 system must show a message in that area inform users about this are for the diet and exercise list 1 12 2 system must include a second text area and a button 12 2 1 system must show the recommended diet and exercise lists when user press that button in that area 12 2 2 system must show the writer of the lists below every list 12 2 3 system must include a save button for every list 12 2 4 system must save the lists for that user 13 functional requirement 1 13 title show users diabetes rate 13 1 users will be entering their blood sugar level according to their measurement on blood sugar meter 13 2 the system will be having three levels which are corresponding to low level normal level high level 13 3 the system will be showing a warning message for the user when it is low or high 14 functional requirement 1 14 title entrance for user information 14 1 the system will be containing an add previous diseases section in each users personal pages 14 1 1 users will enter their chronical diseases 14 1 2 users will enter their surgery history if there exists any 14 2 the system must provide an area for user to add blood sugar level on home page 14 3 the system must provide update button for any blood sugar level previous diseases and personal information 15 functional requirement 1 15 title show popular users who are fitness coaches or dieticians 15 1 system must show popular users who has registered as patient 15 2 there will be a rating star button for each fitness coach users will rate them 15 2 1 there will be a top list on the right of the page who has the most star 16 functional requirement 1 16 title categorize 16 1 the system will be having a two different type of diabetes level for users 16 1 1type 1 will be containing the users who are just diagnosed diabetes patients 16 1 2 type 2 will be containing the users who are using insulin 16 2 the system categorizes users according to their body mass index and their age ranges 17 functional requirement 1 17 title show graphical data 17 1 the system will be showing the last 7 days entrance for blood sugar 17 2 the system will be calculating the difference for each day by subtracting current blood sugar value from normal blood sugar value the dividing the result with current blood sugar 17 3 the system will be having information about sugar level whether it is on the range or not if it is not in the range it will show how far from the normal value 17 3 1 for each day if the blood sugar is not in the range it will be red on the graphic 17 3 2 for each day if the blood sugar is in the range it will be green on the graphic 17 4 the system will be storing these graphics at most one year in its database there will be a button to show previous graphics 18 functional requirement 1 18 title see detailed profile of contacts 18 1 the system must provide a that user can see their friends detailed information 18 2 the user can see all information except users private information such as e mail phone number password confirmation document and messages ,https://github.com/malionde,"Updated Dec 27, 2015"
Toronto,0,1,2,60, diabetes prediction python flask apis anaconda environment summary data analytic application which can predict diabetes based on various variables framework and libraries flask panda matplotlib numpy pydot decision tree logistic regression algorithms model decision tree and logistic regression dataset for training model variables main screen data vizualization ,https://github.com/kelvintrinh174,"Updated Jul 3, 2019"
Mumbai,314,6,12,375, diabetes prediction deployment this repository consists of files required to deploy a machine learning web app created with flask on heroku platform if you want to view the deployed model click on the following link deployed at https predicting diabetes herokuapp com if you are searching for code algorithms used and accuracy of the model you won t find it here click the link mentioned below for the same link https github com anujvyas machine learning projects tree master diabetes 20prediction please do the repository if it helped you in anyway a glimpse of the web app important note if you encounter this webapp as shown in the picture given below it is occuring just because free dynos for this particular month provided by heroku have been completely used you can access the webpage on 1st of the next month sorry for the inconvenience ,https://github.com/anujvyas,Python
San Francisco,244,63,646,91, set ft rst restructuredtext hacking diabetes fidelity of care circa 2011 despite many novel applications of technology to the medical field therapies for chronic disease lacks enough transparency and credibility to humanely empower users to manage therapy diabetes data bus there s a rising notion of a diabetes data bus a system which integrates data collected from a variety of systems and communicates that data to authorized users in addition this infrastructure would support agents from an expert systems presenting analyses and simulations of expected results diabetics own multiple mobile computers that record biometric data on a regular basis this typically includes a menagerie of glucometers of which i own at least 5 2 of which are in active rotation at any given time i also use an insulin pump like many diabetics and it keeps logs of insulin given as well as performs opaque simulations on expected results in addition there are ancillary devices that measure interstitial glucose levels on a real time basis as well as pedometers sleep monitors and the list goes on ad nauseum with so many sources of data critical to managing medical therapy it is impossible to predict the new sources of data that will arise it s also impossible to replace all the existing devices with new devices that are designed to cooperate with one another however all existing devices have a serial port with which an authorized agent can communicate with the device in order to audit therapeutic details therefore it s much easier to adapt existing devices into a common framework that knows how to present data to expert systems knows how to store data over time and knows how to keep the user connected to that data in ways that allow better decision making despite all the data currently logged by devices how much of it is leveraged to drive ongoing decisions the proprietary software offered by medical industry offers snapshots of interesting data from the past and then asks the user to manually fill in any missing data each manufacturer offers a perspective that their software knows everything about managing diabetes and in so doing fails to offer a holistic perspective on therapy instead a data bus accepts input from a variety of sources aggregates it with other available sources and makes it available to the user at any time and any place the user can choose which applications can subscribe to data as well as re route and transform data into those applications indivo already provides the container for aggregating a user s data with customizable schema types cube offers a great presentation engine for arbitrary data when the two are tweaked to manage the data from diabetic therapy we have a diabetic data bus log december s sugars and pump histories as of 2011 set ,https://github.com/bewest,Jupyter Notebook
"Kolkata, West Bengal, India",9,14,10,12, diabetes predictions application in python this application is made using sklearn machine learning libraries and pyqt5 for its graphical user interface support vector machine classifies input data with a 80 accuracy we have choosen the pima indians diabetes dataset from uci archive usage firstly install all dependencies via the following command pip3 install r requirements txt now train the application in you pc as python3 diabetes py finally run the application python3 gui py now insert all the requires details ,https://github.com/pritesh-ranjan,JavaScript
San Francisco,21,12,151,20, http diabetesvis herokuapp com ,https://github.com/benrudolph,Kotlin
"Saint Louis, MO",40,54,60,132, diabetes food database food information for people with diabetes visit the website at https dfdb netlify com and search for a food item contributing the infrastructure for this app is there but the database itself is extremely lacking pull requests are welcome please look at modifying src database json when adding a new food please include the following properties name the name of the food will be used for searching must be unique singular smoothie instead smoothies and all lowercase carrot instead of carrot displayname a prettier name of the food if the name is sugar the displayname might be sugar with capitalization alternatenames an array of names people might also use when searching for this food should also be singular and all lowercase level a number from 1 to 5 1 avoid diabetic people should stay away from this food 2 caution this food can be eaten in moderation or under certain conditions 3 okay neutral no significant positive or negative health effects 4 good food that is good for a diabetic person to eat 5 great foods at this level are among the healthiest options explanation a reason why this food is or is not healthy suggestions actions to take regarding this food alternatives to this food if it is unhealthy ingredients an array of items that make up this food items in this array must match the name of another food in the database running the application locally for development clone the repository and install dependencies git clone https github com travishorn diabetes food database git cd diabetes food database npm install start the backend lambda service and serve the client npm run start lambda npm run start vue the user interface will be available at http localhost 8080 built with axios querying the database from the client fuse fuzzy text search icons8 icon favico netlify hosting the client and the database api pluralize helping normalize search queries vue user interface webpack auto inject version place version at bottom of client license mit license copyright c 2018 travis horn permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software ,https://github.com/travishorn,Python
San Francisco,244,63,646,91, bayer contour contour nextlink both are usb devices and require a usb library to access bayer contour lsusb bus 002 device 008 id 1a79 6002 bayer health care llc implemented by glucodump includes a block storage device advertises as an hid device syslog jun 1 11 35 58 paragon kernel 31023 517052 usb 2 2 2 usb disconnect device number 6 jun 1 11 36 53 paragon kernel 31078 713849 usb 2 2 2 new full speed usb device number 7 using uhci_hcd jun 1 11 36 54 paragon mtp probe checking bus 2 device 7 sys devices pci0000 00 0000 00 11 0 0000 02 00 0 usb2 2 2 2 2 2 jun 1 11 36 54 paragon kernel 31078 946724 generic usb 0003 1a79 6002 000e hiddev0 hidraw2 usb hid v10 10 device bayer healthcare llc contour usb on usb 0000 02 00 0 2 2 input0 jun 1 11 36 54 paragon mtp probe bus 2 device 7 was not an mtp device usb devices t bus 02 lev 02 prnt 03 port 01 cnt 02 dev 7 spd 12 mxch 0 d ver 2 00 cls 00 ifc sub 00 prot 00 mxps 64 cfgs 1 p vendor 1a79 prodid 6002 rev 01 00 s manufacturer bayer healthcare llc s product contour usb s serialnumber 0000000002902076 c ifs 2 cfg 1 atr 80 mxpwr 500ma i if 0 alt 0 eps 2 cls 03 hid sub 00 prot 02 driver usbhid i if 1 alt 0 eps 2 cls 08 stor sub 06 prot 50 driver usb storage see ubuntu_sys_bus_usb markdown and pci_tree markdown find dev hid dev hidraw0 dev hidraw1 bewest paragon src decoding bayer nextlink different device no block storage socat what s the easiest way to provide socat with an interface to read write data from configured usb endpoint how to configure endpoint in python connect it to one of unix domain socket tcp port serial device pty tty loopback example i had thinking to re use the mail sh and ftp sh examples http www tldp org ldp abs html ioredirintro html http stackoverflow com questions 11030766 one virtual serial port with socat http stackoverflow com questions 2174071 how to use dev ptmx for create a virtual serial port http www dest unreach org socat doc socat html examples the reason i d like to do all this is to connect the usb device to a server implementation like this https github com bewest insulaudit ssh tools kernel http www linux usb org usb guide x75 html http code activestate com recipes 576834 interrogating linux devusbhiddev0 in python https www kernel org pub linux kernel people marcelo linux 2 4 documentation usb hiddev txt http www linux usb org usb guide x194 html http www linux usb org usb guide x173 html http www linuxjournal com article 6573 page 0 1 example usbserial device driver https www kernel org doc documentation usb proc_usb_info txt https www kernel org pub linux kernel people marcelo linux 2 4 documentation usb hiddev txt http www linux usb org gadget usb c http www linux usb org gadget http www linux usb org usb devices txt http www linuxjournal com article 6434 page 0 1 usb serial drivers explained because the bayer advertises itself as an hid type linux fails to hook it up to usbserial for the generic serial adapter a simple kernel driver could fix this 1359 ,https://github.com/bewest,Python
"Stanford, CA",11,1,17,37, diabetes classification with scikit learn this is an example of a datmo model which uses a dataset of patient attributes and predicts the likelihood of a patient having diabetes you can take a look at the dataset details here check out the snapshots tab above for information on snapshots that were taken with various parameters search and filter them to find the best ones clone this model on your local machine with the datmo cli datmo clone shabazp diabetes classification first you can check out all of the snapshots that have already been created by the user this is equivalent to checking out the snapshots tab on datmo except without the search and filter capabilities available on the gui datmo snapshot ls once you have viewed all of the existing snapshots you can start by running an experiment by simply running the code below which runs the fraud detection training code datmo task run python regression py create your first snapshot by running the following command datmo snapshot create m my first snapshot for reference here are few more quick details about what you can find in the repository dockerfile this is meant to keep track of your environment for example this dockerfile ensures that our environment has all of the requirements needed to run our model you can manage edit and create new enviroments with the datmo env command each session you create with datmo will have a default environment associated with it the commands and quick reference above is by no means meant to be comprehensive please refer to the cli documentation for more details on the various datmo commands to use and file structures present in datmo happy building ,https://github.com/shabazpatel,TypeScript
"Toronto, canada",96,0,0,20, exploratory data analysis and prediction on diabetes dataset using r this project first conducts exploratory data analysis eda and data visualization on the diabetes dataset and then predict the disbetes using machine learning dataset diabetes data can be downloaded from http biostat mc vanderbilt edu wiki main datasets cgisessid 10713f6d891653ddcbb7ddbdd9cffb79 exploratory data analysis eda descriptive statistics attribute type class distribution mean stadard deviation median quartile skewness correlation data visualization histogram plot density plot box and whisker plot bar plot missing data map pair wise correlation plot prediction on diabetes we compare the performance for the following classifiers logistic regression support vector machine svm random forest ,https://github.com/Yifeng-He,TSQL
"Nottingham, United Kingdom",33,26,9,457, pima indians diabetes dataset uci the test problem we will use in this repository is the pima indians diabetes problem taken from machine learning repository uci https archive ics uci edu ml datasets pima indians diabetes this problem is comprised of 768 observations of medical details for pima indians patents the records describe instantaneous measurements taken from the patient such as their age the number of times pregnant and blood workup all patients are women aged 21 or older all attributes are numeric and their units vary from attribute to attribute each record has a class value that indicates whether the patient suffered an onset of diabetes within 5 years of when the measurements were taken 1 or not 0 this is a standard dataset that has been studied a lot in machine learning literature a good prediction accuracy is 70 76 in this repository we study this dataset by using k nearest neighbour classification method ,https://github.com/LamaHamadeh,Jupyter Notebook
Italy,109,8,10,763, introduction the pima are a group of native americans living in arizona a genetic predisposition allowed this group to survive normally to a diet poor of carbohydrates for years in the recent years because of a sudden shift from traditional agricultural crops to processed foods together with a decline in physical activity made them develop the highest prevalence of type 2 diabetes and for this reason they have been subject of many studies dataset the dataset includes data from 768 women with 8 characteristics in particular number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years the last column of the dataset indicates if the person is affected 1 by diabetes or not 0 source the original dataset is available at uci machine learning repository and can be downloaded from this address http archive ics uci edu ml datasets pima indians diabetes the problem the type of dataset and problem is a classic supervised binary classification given a number of elements all with certain characteristics features we want to build a machine learning model to identify people affected by type 2 diabetes to solve the problem we will have to analyse the data do any required transformation and normalisation apply a machine learning algorithm train a model check the performance of the trained model and iterate with other algorithms until we find the most performant for our type of dataset note for the presentation part i ve used rise which is being installed by requirements txt but it has to be configured you can find all the instructions on the original website https damianavila github io rise index html ,https://github.com/andreagrandi,Jupyter Notebook
Lagos,18,21,96,65, diabetetics neural net a javascript matlab neural network written to predict the possibility of having diabetes in percentile the training dataset is originally from the national institute of diabetes and digestive and kidney diseases required tools matlab neural net toolbox used to train the neural network current stage trained models utilized trained data in javascript library support php to utilize library enables live testing include procfile for deployment on heroku visit diabetics prediction heroku deployed future plans retrain the network using tenserflow and lstm for better accuracy improvement visit kaggle pima indians diabetics database for better ways of training this model ,https://github.com/virgincodes,R
Knoxville,10,7,142,222, project glucose tracker team name code bashers project owner kawsar project team members aaron barlow david beverley grant watson josiah smythe justin cathelyn and thomas burtner scrum master david beverley product owners aaron barlow josiah smythe brief description patients submit their food intake blood glucose level and exercise information from their phone applications and doctors can view those information graphically from a phone application or web app languages frameworks and libraries languages javascript css frameworks react react native libraries react native paper firebase datatable react timeseries charts react native chart kit react icons and pond js running mobile and web app tpre conditions must have node js install and have the expo app on your phone t https facebook github io react native docs getting started html t https nodejs org en download tmobile t 1 download the glucose tracker zip file and extract it t 2 in file explorer inside of the glucosetracker file and type cmd in the top bar t 3 install react by running the command npm install react native t 4 once installed run the command npm start t 5 after a short while there should be a qr code scan the code with the expo app for android or with the camera app for iphone t 6 allow the application to build and it will start automatically tweb t 1 download the glucose tracker zip file and extract it t 2 in file explorer inside of the glucosetracker web and type cmd in the top bar t 3 install react by running the command npm install react native t 4 once installed run the command npm start t 5 the application will build and then open up in your web browser publishing the application web 1 follow the running mobile and web app guideline 2 host on a linux server and 3 run npm start in the web directory android expo build android ios expo build ios mobile screenshots patient login patient signup patient settings page glucose list add glucose add nutrition add exercise web screenshots admin view web screenshots doctor view ,https://github.com/AroSwift,Jupyter Notebook
Bangalore,12,60,18,259, pima indians onset of diabetes dataset prediction using neural networks in keras this is a simple neural network implementation using keras i have used the pima indians onset of diabetes dataset which you can find on this link http archive ics uci edu ml datasets pima indians diabetes you can also fit other data sets of the same type which can be downloaded from the uci machine learning repository pre requisities 1 python 2 or 3 installed and configured 2 you have scipy including numpy installed and configured 3 you have keras and a backend theano or tensorflow installed and configured algorithm 1 initialize the random number generator with any seed you like i have taken 10 2 download the data set in csv format and put it in the local working directory as nn py 3 load the data set using loadtxt 4 split the data set into the independent variables and the class to be predicted into z and q 5 create a sequential model and add layers first layer contains 12 neurons and will take 8 input variables activation funtion rectifier activation functio second layer contains 8 neurons hidden layer activation funtion rectifier activation function output layer will contain one neuron activation funtion sigmoid function because its a binary classification 0 or 1 6 fit the data in the model using fit the training process will run for a fixed number of iterations through the dataset called epochs that we must specify using the nepochs argument 7 set the number of instances that are evaluated before a weight update in the network is performed called the batch size 8 used model predict to predict the class variables under update please be patient ,https://github.com/architsingh15,MIT license
Israel,45,21,319,2494, glycemic load calculator https glcalc com ,https://github.com/assafmo,Java
"Accra,Ghana",83,63,39,0, introduction this is a python project that we are looking for contributors to re build this code into a solution that helps minimize the rise of diabetes in africa all you need to do is re write this code in any programming language put life into to this code and automatically we will employ you as a developer at oasis websoft organisation ,https://github.com/raindolf,HTML
"Tehran, Iran ",86,283,185,337, pima indian diabetes deep learning diabetes prediction with deep mlp models webapp streamlit io ipynb data the datasets consist of several medical predictor independent variables and one target dependent variable outcome independent variables include the number of pregnancies the patient has had their bmi insulin level age and so on link of data in kaggle columns columns description pregnancies number of times pregnant glucose plasma glucose concentration for 2 hours in an oral glucose tolerance test bloodpressure diastolic blood pressure mm hg skinthickness triceps skin fold thickness mm insulin 2 hour serum insulin mu u ml bmi body mass index weight in kg height in m 2 diabetespedigreefunction diabetes pedigree function age age years outcome class variable 0 or 1 268 of 768 are 1 the others are 0 context this dataset is originally from the national institute of diabetes digestive and kidney diseases the objective of the dataset is to diagnostically predict whether or not a patient has diabetes based on certain diagnostic measurements included in the dataset several constraints were placed on the selection of these instances from a larger database in particular all patients here are females at least 21 years old of pima indian heritage acknowledgements smith j w everhart j e dickson w c knowler w c johannes r s 1988 using the adap learning algorithm to forecast the onset of diabetes mellitus in proceedings of the symposium on computer applications and medical care pp 261 265 ieee computer society press inspiration can you build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes todo add unblacend class train dev test add normalizing regularizer linear regression support vector machine naive bayes streamlit deep learning graduation project report batch norm lr tuner lime production tips for speed tf server purning qunatization deploy diabetes_large data persian blog english blog upload dataset to kaggle transfer learning online learning adding more languages for ui refactor paging capability dockerize it fandoughe for eg or my vps flask api flutter app error analysis feature enginearing database for patients test learning curve fill missing data with a model or other stuff ,https://github.com/AminTaheri23,HTML
Île-de-France,18,60,237,622, diabetes analysis main side project of gustavo magaña lópez contact me at gmaganna biomed gmail com disclaimer this is a personal project it has two and only two scopes help me understand better my diabetes i e quench a personal and academic curiosity explore different ways of adjusting my therapy finding patterns through diverse techniques and algorithms if you decide to test it on yourself it is your responsibility nothing within this repo is enodorsed by medtronic or mysugr app i am merely a patient using his own data and applying algorithms to it bibliography this project departed from my own knowledge of diabetes physiopathology however to make of this a valuable state of the art tool i have decided to add also some docs publicly available scientific papers these will be found in docs if you want to consult them these are the original sources review_of_formulas pdf glycaemic variability pdf if you have found anything that you consider pertinent valuable for this project and have the proper copyright ownership rights to share it please do so i d be ravished to include it in the project email it to me or add it to your fork of this repo and send me a pull request requirements and dependencies tested hardware this software has been tested on a 13 inch mid 2012 macbookpro which is considered vintage a k a pre obsolete i ve tampered with it so it has 8 gib ram and a samsung 1tb ssd latest and last test using macos mojave 10 14 6 a system 76 oryx pro virtual environments using poetry given the lack of reproducibility that anaconda s virtualenvs have displayed in my personal experience i ve decided to fully migrate to poetry these virtual environments have proven to be reliable resisting constant migration between machines and operating systems deprecated create a virtual environment using conda all of the code has been developed using conda using the provided files within the repo env yml and requirements txt will facilitate running the scripts and notebooks here present for futher information consult anaconda distribution conda environment to create the virtual environment make sure you have installed the latest version of anaconda run the following command replacing env_name with the name you would like to give to the virtual environment conda env create name env_name file env yml you will be prompted for confirmation accept typing y on the interactive session to activate the newly created environment type the following command on your terminal conda activate env_name some dependencies those which could not be installed through conda were installed using pip this is not the standard installation found on your machine if you already had python installed verify that you are using the correct pip by activating the virtual environment that you have designated for this repo can be done via which pip before installing dependencies via pip make sure you have activated the virtual environment running conda activate env_name afterwards type pip install r requirements txt now you re ready to run the scripts and notebooks found on this repo ,https://github.com/gmagannaDevelop,Java
"Washington, DC",39,21,14,12, meta insulaudit oe meta layer for hacking diabetes related to bewest insulaudit this layer depends on openembedded core meta meta openembedded meta oe meta openembedded meta networking ,https://github.com/n-west,JavaScript
"Amrita Vishwa Vidyapeetham Amritapuri ,Kollam, India",15,27,31,191, diabetes detection using python ,https://github.com/devtechnocode,Python
Hyderabad,15,27,31,3, diabetes diabetes prediction using machine learing algorithms ,https://github.com/Muzammil-A90,"Updated Sep 22, 2019"
Hyderabad,0,0,1,26, diabetes using various machine learning algorithms to get the best prediction accuracy if possible for the pima indians dataset the best result was found with random forest with an accuracy of 83 install python version used in this project 3 6 6 libaries used pandas 0 23 4 numpy 1 15 3 matplotlib 2 2 2 scikit learn 0 20 0 ,https://github.com/nishithagampa,"Updated Nov 27, 2019"
"Chittagong, Bangladesh",14,110,19,192, diabetes dataset analysis using machine learning diabetes dateset analysis using machine learning classification algorithm references https www who int news room fact sheets detail diabetes about diabetes and it s symptoms https www kaggle com uciml pima indians diabetes database about data set ,https://github.com/sayanta28,HTML
Spain,1,1,1,1, diabetes app de ayuda en tratamiento de diabetes mellitus tipo i dosificación de insulina y predicción de hipoglucemias el trabajo se va a realizar sobre las siguientes fases 1 creación en java del sistema de dosificación de insulina actualmente resuelto y probado con junit para todas las situaciones posibles 2 app de android para gestionar el histórico de glucosas e insulina finalizada 3 machine learning para predecir y evitar hipoglucemias finalizado ,https://github.com/efervescencia,"Updated May 11, 2015"
127.0.0.1,29,297,2000,444, diabetes data mining in python r and weka attributes number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years ,https://github.com/Sphinxs,Jupyter Notebook
"St charles, MO",29,297,2000,28, diabetes build models and compared different models accuracy ,https://github.com/tle1000,"Updated Jul 9, 2020"
"Chicago, IL",0,0,1,16, diabetes dsc 540 project ,https://github.com/salikhussaini,C#
Arinos,4,13,0,218, python getting started a barebones django app which can easily be deployed to heroku this application supports the getting started with python on heroku article check it out running locally make sure you have python 3 7 installed locally to push to heroku you ll need to install the heroku cli as well as postgres git clone https github com heroku python getting started git cd python getting started python3 m venv getting started pip install r requirements txt createdb python_getting_started python manage py migrate python manage py collectstatic heroku local your app should now be running on localhost 5000 deploying to heroku heroku create git push heroku main heroku run python manage py migrate heroku open or documentation for more information about using python on heroku see these dev center articles python on heroku ,https://github.com/ademirrocha,"Updated Oct 3, 2019"
"Nairobi, Kenya",36,27,71,344, ntw_diabetes_model diabetes prediction model using retina images more documentation to come sorry test the model by passing it together with an image to the model_test py file additional model documentation will be doen in a 2 weeks ,https://github.com/anthonymiyoro,MATLAB
"Canada, Edmonton,AB",1,6,15,9, pima indians diabetes database the pima indian diabetes dataset is originally from the national institute of diabetes and digestive and kidney diseases the objective is to predict if a patient has diabetesor not based on diagnostic measurements of eight simple features pregnancies glucose bloodpressure skinthickness insulin bmi diabetespedigreefunction age you can download the dataset from this link https www kaggle com uciml pima indians diabetes database ,https://github.com/khatabi-abderrahim,Jupyter Notebook
"Paris, France",29,6,8,14, demo xebicon 18 use case diabetes progression uses the sklearn diabetes dataset to predict diabetes progression using elasticnet the predicted progression column is a quantitative measure of disease progression one year after baseline explicative variables 10 age sex body mass index bmi blood pressure bp serum measurements references scikit learn datasets least angle regression efron hastie johnstone tibshirani 2003 ,https://github.com/giulbia,"Updated Sep 23, 2016"
Berlin,1,4,36,371, eda and modelling for diabetes dataset ,https://github.com/tu-artem,"Updated Apr 20, 2019"
"Dublin, IRE",11,24,35,147, diabetesapp ,https://github.com/mikeyPower,Python
"Chennai, Tamilnadu, India",10,75,0,12, diabetesprediction this repository contains python notebook for diabetes readmission prediction dataset this is mere replication learning from medium article https medium com uraza how to use machine learning to predict hospital readmissions part 1 bd137cbdba07 ,https://github.com/balajivenky06,1
"Edison, New Jersey",4,5,0,178, diabetesdetection this is an application used to detect whether a user has diabetes given certain parameters and locate the nearest doctor features predicts whether user may have diabetes uses a custom machine learning model which has been trained by using over 10000 data points of users with diabetes and their pre exisitng conditions this machine learning model has been trained to an accuracy of 99 6 on microsoft azure s machine learning service recomends nearest docter using google maps api and better doctors api this application recommends the highest rated doctors within the span of 20 miles of your current locaitonl tech stack app development xamerin c location and maps google maps api diabetic detection ml model azure machine learning service ,https://github.com/jeevanantham2002,"Updated Nov 26, 2019"
"Nairobi , Kenya",10,4,2,247, diabetes prediction using logistic regression and scikit learn first we will have to import the necessary modules you can use either anaconda jupyter notebook or vs code to write your code we ll be using python and some of its popular data science related packages first of all we will import pandas to read our data from a csv file and manipulate it for further use we will also use numpy to convert out data into a format suitable to feed our classification model we ll use seaborn and matplotlib for visualizations we will then import logistic regression algorithm from sklearn this algorithm will help us build our classification model lastly we will use joblib available in sklearn to save our model for future use you can install the necessary dependencies using pip pip3 install matplotib pip3 install seaborn pip3 install scikit learn pip3 install joblib for storage of data for future use pip3 install pandas ,https://github.com/oyugirachel,"Updated May 3, 2019"
San Francisco,244,63,646,91, insulaudit homepage https github com bewest insulaudit this python package provides a toolkit for dealing with data used and created by a modern circa 2010 insulin therapy regimen we provide a command line text based tool and a python library to audit therapeutic data from a variety of medical devices widely used target devices medtronic minimed paradigm series insulin pumps using the usbstick observed working with a 522 lifescan glucose meters onetouch series mini profile dexcom onetouch ping bayer omnipod in no particular order bayer coming soon thanks to iko https bitbucket org iko glucodump src e37ea2a38776 glucodump usbcomm py usage insulaudit opts command insulaudit device opts command insulaudit device command opts insulaudit help insulaudit clmm scan lifescan nothing special my system registers a serial device right away minimed in linux you need to poke the usbserial module with some parameters to make it work this only needs to be done once sudo modprobe usbserial vendor 0x0a21 product 0x8001 or sudo reset sh which runs remove sh and insert sh the latter of which does the modprobe for you i ve observed runs working up to 5 times in a row at which point i needed to reset the usbstick by removing it and re inserting into the pc on mac i can t recall if this is necessary we just need a generic usb serial adapter i haven t tried it but i suspect com1 will likely work on m although auto scanning will not detect it if your mac inserts the device somewhere under dev usb serial we will likely scan it in dmesg you should see a message like this when you inser the usb stick 201197 513266 usb 2 1 new full speed usb device using uhci_hcd and address 3 201197 919110 usb 2 1 configuration 1 chosen from 1 choice 201205 729621 usbcore registered new interface driver usbserial 201205 730808 usb serial support registered for generic 201205 731143 usbcore registered new interface driver usbserial_generic 201205 731145 usbserial usb serial driver core 201205 806220 usb serial support registered for pl2303 201205 806248 pl2303 2 1 1 0 pl2303 converter detected 201208 305166 usb 2 1 pl2303 converter now attached to ttyusb0 201208 305187 usbcore registered new interface driver pl2303 201208 305189 pl2303 prolific pl2303 usb to serial adaptor driver bewest mimsy documents bb diabetes src mock installing insulaudit there is no official release of insulaudit only some pieces of code towards establishing a tool pull requests welcome download the source https github com bewest insulaudit or fork it on github git clone http github com bewest insulaudit git install insulaudit in your python runtime so you can hack on it from here python setup py develop status quo as thucydides said right as the world goes is only in question between equals in power while the strong do what they can and the weak suffer what they must decoding carelink medtronic is partially decoded we will be adding support to insulaudit when things are better tested and cleaned up have a medtronic pump help us analyze the data and visualizations are that much closer at this point we just need people to help line up records with the csv output and confirm accuracy or highlight problems decoding omnipod need captures traces decoding dexcom need captures traces decoding onetouchping need captures traces how to run outdated the commands using pythonpath assume you are in the root directory of the repo the commands using insulaudit assume you have installed insulaudit on your system including the develop version uses flaky port scanning feature to test if we are able to talk to a pump exchange a few bytes nothing more fails pythonpath src python m insulaudit main v clmm hello insulaudit v clmm hello specifying a port seems to work if it doesn t retry a few times using the subcommand stuff pythonpath src python m insulaudit main v clmm port dev ttyusb0 hello insulaudit v clmm port dev ttyusb0 hello run the protocol exercise directly pythonpath src python src insulaudit devices clmm proto py dev ttyusb0 python m insulaudit devices clmm proto py dev ttyusb0 read pump model log protocol exercise to read pump model number log of it running successfully 5 times before it starts failing stderr and timestamps were not capture todo now that the basic framework is taking shape the protocol support needs to be stabilized and the framework needs to continue to gel a bit convert hello to some kind of scan introduce new device flows introduce device profiles console flows record logs review logs audit logs merge logs search reformat cli tool insulaudit init set up a config from default checkport scan scan for a port device device profile log license author ben west bewest insulaudit gmail com this experimental software is provided under the mit license_ so you can do with it whatever you wish except hold me responsible if it does something you don t like _mit license http www opensource org licenses mit license php blather http www diabetesmine com 2013 01 the ethical imperative of diabetes interoperability html interoperability is my middle name just give us the raw data and we ll make it interoperable fidelity of care patients need open access to all the elements of technology involved in therapy in order to ensure safety one of many concrete examples involves generating safe insulin doses the vendor hard coded the active lifetime of insulin into all models earlier than the 515 series this guarantees that patients receive the wrong amount of insulin the only feasible way of getting safer doses of insulin is to buy a pump in the 515 series or newer users who do choose to buy a new pump can customize this variable but the variable remains static and mostly incorrectly calibrated until it s manually changed again in reality your sensitivity to insulin varies and the amount of insulin one should receive also varies dramatically throughout the day depending on what life throws your way however the pump has an administrative protocol that allows software to automatically audit logs reconfigure settings create and administer dosing schedules if users had access to this protocol we could use it to work around bugs like incorrect insulin calibrations in order to tune our doses we can also use the protocol to audit the logs allowing us to independently verify that pump therapy is safe there are many other examples where having direct access to all the technology involved in therapy provides an epistemic certainty integral to basic science as patients and users of medical technology we want to believe that it is safe the only way to do this is to empirically study all the relevant details of vendor technology with our peers and to study it for bugs and safety in the process of doing this we discovered that the same commands used to audit the native therapeutic logs can also be used to reconfigure the device and administer insulin in ways that can work around bugs that are currently ensuring unsafe dosing for pump users the manufacturer is content to give me inaccurate dosings but refuses to share information about the protocol needed to quickly safely and independently manage my therapy as patients we need access to all the technology in our therapy so that we can have epistemic certainty that it is safe we set out to use the protocol in order to audit logs more effectively and found out it s possible to generate safer doses and work around bugs in vendors therapeutic software the protocol is actively kept from our use but we need it in order to secure safe therapy without having investigated the technology involved in our therapy we cannot believe it is safe and we would not have learned about it s true capabilities thought exercises if a doctor approached you with a syringe said you needed some of it but wasn t personally sure a how much was in the syringe that b the syringe sometimes injects the wrong amount and c what contents of the syringe might due to the way the syringe performs but that someone told him this would probably be ok would you allow yourself to be injected what if the consequences for refusing the syringe was death what if the reason for the uncertainty was because someone had wiped off most of the calibration markings before giving it to the doctor to fill what if the person who had wiped off the markings was the same person insisting it was safe and selling you the syringes and no one else makes syringes for the argument most users won t need access to technology to get what they need this isn t an argument for preventing patients from accessing critical parts of their own therapy this is like arguing no one would need to do anything more than borrow a book from a library shortly after the printing press because the population was unlettered and homes lacked bookshelves to house the books blather blah blah blah diabetes therapy is wasteful unscientific and dangerous despite a variety of companies offering software to manage the condition very little data is used to drive real time decision making during the course of therapy many users take error prone and time consuming handwritten transcriptions of their devices because the software provided is incapable of communicating or managing therapeutic details in any useful way some users actually take pictures and upload those pictures to websites finding that the easiest way to share critical therapy data despite all the hard work diabetics undertake in efforts audit and control ongoing therapy most use a variety of mobile devices that automatically log many details in 2011 we have a nascent highly connected world where relationships construct a social graphs traversable on the web with enough security to trust these relationships for authentication despite all the technical advancement in our world the medical community asks diabetic patients to live inhumane lives maintaining open wounds while blaming them for lack of control and failing to explain cause and effect insulin is a powerful drug best administered by a pancreas when we use a syringe to inject a large dose all at once it is no surprise to see dangerous consequences however instead of developing ever increasingly accurate predictions the use of software in managing diabetes mostly involves entering and massaging lots of data as a result many diabetics suffer needlessly blamed for the effect their condition has on them due to their poor control even though the consequences are likely aggravated or caused by the very therapy they are trying to participate in this is poor fidelity of care the best example for this is the npr obituary for a baseball hall of famer who died of diabetic complications while he was praised for his adherence to his regimen he was also praised his tenacity on the field despite the terrible shakes attributed to his condition however they failed to mentioned that the shakes he suffered were due to the therapy for his condition the only way a type 1 diabetic suffers shakes like that is when too much insulin has been delivered an all too familiar mishap poor fidelity of care is not knowing what to expect despite adhering to a therapy by applying the fundamentals of the scientific method to therapy and to the application of technology to therapy we get a unique perspective on what the technology should do and the role people have in therapy the only data we should be entering are corrections on what we predict will happen this is be one of the ideal applications of technology to therapy through a lense i call high fidelity of care together we adjust our expectations to match what is possible so that over time the observations of therapy exactly match the expectations we recorded as predictions earlier as we integrate calendar data and predictions along side past observations we get a better understanding of causes and effects in the outcomes of our own therapy while gaining tools to communicate these understandings with our therapeutic team composed of any individual we choose the therapeutic team may well be mostly composed of members outside the medical community because social support is often important in maintaining habits and lifestyle this meta observation of the delta between hypothesis and empirical data is a principle component of the scientific method but entirely absent from therapeutic software leading to a dearth in fidelity of care my hope is that insulaudit can help to increase the fidelity of care the scientific method involves recording high fidelity observations making predictions based on that data performing an experiment and then analyzing the differences between the observations and the expectations therapy should not be any different however until we can get transparent access to audit the raw data produced by our therapy we cannot get an accurate perspective of our own health therefore the first fundamental principle of high fidelity care is open access to all the intimate details of therapeutic care in as close to the native format as possible it includes access to the protocols transporting the data so that novel applications can augment therapeutic fidelity in ways unforeseen by the original makers for the benefit of the patient and their caregivers the second is peer review a caregiver may be a friend or even a good samaritan in a time of need who needs instructions on what to do next a caregiver may be a researcher who needs access to data for simulations it includes access to the firmware because it is outrageous that the software that governs lives has not gone through open source review for bugs and safety with these in place safe and effective from insulaudit smart dubs gccs and many other collaborators can help infuse therapeutic practice with high fidelity care the needs of the patient in the practice of high fidelity care are not unique to diabetics we believe all patients will benefit from the application of these principles throughout their care insulaudit collaborators ,https://github.com/bewest,JavaScript
Switzerland,37,6,1,153, omnicore omnicore is a platform for controlling and automating drug delivery using the omnipod system update 03 01 2020 dear podders missed the deadline due some undiscovered issues in the very last minute murphy s law that sparked a need for a thorough review and in some cases re write since the next release is targeting stability and i am very picky about it it took several sleepless nights to dissect everything apart to look for potential problems of similar nature now the issues are fixed and consciousness cleared i can finally write this update it still requires some time to fit back all the screws which isn t a lot of work but i can start earliest mid next week around the 8th my apologies to everyone expecting the release sooner and many thanks to those who have donated to make life bearable it absolutely does update 29 12 2019 beta v1 0 is scheduled for release in 2019 so happy new year i m overwhelmed with all kinds of work for the moment so expect documentation and more information to appear in due time following the release in the meantime check out the updated roadmap https github com winemug omnicore wiki roadmap all thanks to joe for his original work on the omnipod eddie for the thousand pods and thousand words jeremy for his work on androidaps customizations dan tim jeff jordan theo jacob rene miguel maite yann rick edward mark mike for donating their precious time and resources adrian for all the insight jetbrains for being awesome seriously check out rider and insulet for being a bro so far downloads alpha builds are located in microsoft appcenter https install appcenter ms users winemug apps omnicore distribution_groups alpha 20testing beta and other releases will be available in github androidaps for omnicore https github com winemug androidaps releases support facebook page for announcements and feedback https www facebook com omnicorepdm new support group on facebook https www facebook com groups 2141146659318874 managed by community members join the live discussion on slack invite link contributions if you have the means to do so please consider donating money resources or time for the project all of which i am currently struggling to afford direct donations paypal https paypal me winemug sponsorship github https github com winemug if you can donate hardware such as pods expired or not especially omnipod dash used phones android or ios radio equipment and electronic tools donate cloud resources write code on net xamarin tizen android ios or develop a back end make things look better and more usable make text read in other languages then please send an e mail to my e mail address below contact barisk gmail com omnicore is the follow up project to omnipy ramblings and otherwise https balya net ,https://github.com/winemug,Kotlin
"Pune, India",4,24,58,95, diabetes predictor predict diabetes using machine learning in this project our objective is to predict whether the patient has diabetes or not based on various features like glucose level insulin age bmi we will perform all the steps from data gathering to model deployment during model evaluation we compare various machine learning algorithms on the basis of accuracy_score metric and find the best one then we create a web app using flask which is a python micro framework read more about it in my blogpost screenshot installation clone this repository and unzip it after downloading cd into the flask directory begin a new virtual environment with python 3 and activate it install the required packages using pip install r requirements txt execute the command python app py open http 127 0 0 1 5000 in your browser ,https://github.com/Aditya-Mankar,Python
Bangalore,27,11,25,33, diabetes detection this is my diabetes detection c project program which uses file handling as well the program tells wheather the person has diabetes or not after testing most of the things the program can 1 fix appointment 2 can proceed with testings 3 will generate pre report 4 will generate final report 5 has a paitent login 6 generate tips 7 admin login 8 query reply sending application 9 allow you to buy medicine 10 medicine bill 11 many more things are there there are many bugs also in some places so help me out in figuring them ,https://github.com/Amit3200,JavaScript
"Utrecht, NL",22,8,106,1671, diabetes app diabetes android application for the diabetes app challenge uk ,https://github.com/philleonard,TSQL
New York,253,5,29,269, machine learning predict whether patient suffer from diabetes machine learning predict whether patient suffer from diabetes ,https://github.com/soumilshah1995,Jupyter Notebook
"Dhaka, Bangladesh",39,0,1,13, pima diabetes dataset machine learning approach dataset pima indian diabetes study dataset info https www kaggle com kumargh pimaindiansdiabetescsv language python basic by tamim shahriar advanced freecodecamp org library anaconda jupyter notebook scikitlearn pandas matplotli numpy anaconda open source distribution of the python download installation jupyter notebook how to use the model try to predict the risk of diabetes for an out of sample patien ,https://github.com/mahemon,Jupyter Notebook
"Accra,Ghana",83,63,39,0, it is a simple web application that allows you to know your diabetes status you can test it from here and it is live http diabetes oasiswebsoft com ,https://github.com/raindolf,JavaScript
"Beijing, China",100,18,139,338, readmission prediction 1 dependencies python 3 6 libraries numpy pandas scipy imbalanced learn seaborn xgboost scikit learn matplotlib 2 datasets raw dataset diabetes 130 us hospitals for years 1999 2008 data set can be found hear the dataset represents 10 years 1999 2008 of clinical care at 130 us hospitals and integrated delivery networks it includes over 50 features representing patient and hospital outcomes information was extracted from the database for encounters that satisfied the following criteria 1 it is an inpatient encounter a hospital admission 2 it is a diabetic encounter that is one during which any kind of diabetes was entered to the system as a diagnosis 3 the length of stay was at least 1 day and at most 14 days 4 laboratory tests were performed during the encounter 5 medications were administered during the encounter the data contains such attributes as patient number race gender age admission type time in hospital medical specialty of admitting physician number of lab test performed hba1c test result diagnosis number of medication diabetic medications number of outpatient inpatient and emergency visits in the year before the hospitalization etc 3 files readmission prediction task can be concluded by the figure below preprocess py used for preprocessing data generate the processed data file preprocessed_data csv which saved in folder data train py used for training and output test models are xgboost and random forest accuracy confusion matrix and overall report of models will shown after running 4 usage _ python3 6 preprocess py _ python3 6 train py 5 performances xgboost confusion matrix top 10 importent features random forest confusion matrix top 10 important features 6 license ,https://github.com/freesinger,MIT license
"Cuttack , Odisha , India",13,10,8,32, pima diabetes prediction diabeties prediction model from pima data set pima dataset original owners national institute of diabetes and digestive and kidney diseases data set information several constraints were placed on the selection of these instances from a larger database in particular all patients here are females at least 21 years old of pima indian heritage adap is an adaptive learning routine that generates and executes digital analogs of perceptron like devices it is a unique algorithm see the paper for details attribute information number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 or 1 the reformatted data set csv used in the project can be found here ml algorithim entire prdeicition model is written with python3 and jupyter notebook used python lib pandas numpy matplot lib scikit entire notebook source in pdf here ,https://github.com/DevSurya,GPL-3.0 license
Jakarta,2,4,1,274, program diagnosa diabetes install requirements pip install r requirements txt jalankan py app py ,https://github.com/alfarelrizky,Java
"London, Ontario",12,11,217,54, opendatabetes an all inclusive data format to store diabetes treatment information we are currently at version 0 000 so there s not much to download but there s a lot of work to be done once the dataformat is all shiny and nice the primary focus will shift to providing conversions for other systems into the opendatabetes format ultimately it would be completely awesome to have a conversion for every pump glucometer and diabetes app out there right now there are hundreds of fragmented solutions for tracking blood glucose and insulin exercise life information that relate to living with diabetes most are proprietary every company has its own method of tracking and storing the data and they don t tend to play nice with each other open data betes started because i wanted to make my own diabetes management application but i didn t want to exclude users of specific devices or treatment strategies i was disappointed that with the proliferation of diabetes management tools nothing existed that was really universal and all the valuable data was essentially being siloed after completing a rough prototype of sanguine diabetes manager i realized that there was a better first step rather than adding one more management application to help expediate putting any tech using diabetic into decision paralysis i ought to focus on the foundation of the community encourage diabetesit development to behave in a progressive open helpful way much like the front end web community does so to get the ball rolling here is a github repo and a readme if you re interested in contributing to this project or if there s other projects already doing this that i haven t found please contact me for an inventory of existing formats in the wild the diabetes data wiki is a good place to start the author farrell paper also has some suggestions bewest is there a way to re use git npm egg style compilations of data so that there is a sane structure of plain text files these are easy to work with reformat into csv json xml etc and we will need many adapters this way i could point the tool sanguine git github com bewest my data git or insulaudit upload git github com bewest my phr git we can bundle some basic tools to verify reformat data and it provides a nice audit trail on what software has done to it and is endlessly extensible thedamon i m not familiar with those personally i was thinking of using straight up json because of its seeming ubiquity and ease of parsing it in most circumstances with json you get a low point of entry for people wanting to plug things in and play around but if one of these formats is more easily parsed that could make sense ,https://github.com/thedamon,HTML
"Berlin, Germany",13,14,394,596, gmi gmi glucose metabolism indices is an r package that bundles popular insulin sensitivity and beta cell function indexes so you don t need an extra excel sheet to copy paste a function or to write the formula yourself installation only the developmental version is currently available install packages remotes remotes install_github jcpsantiago gmi if you use gmi please cite it using the doi 10 5281 zenodo 2631368 indexes comparisons between each index and the hyperinsulinaemic euglycaemic clamp are discussed in otten et al 2014 the following indices are currently implemented fasting indices firi homa ir quicki both original and revised ogtt indices cederholm gutt isi0 120 matsuda composite index nefa isi stumvoll isi stumvoll mcr todo implement ogis ,https://github.com/jcpsantiago,"Updated Feb 5, 2018"
The Internet,64,88,297,230, wowdiabeteswebsite website for wow addon for diabetes research addon repo setup npm install gulp for production build gulp production icon font gulp iconfont ,https://github.com/lcb931023,HTML
Nairobi Kenya,90,77,90,1358, diabeteschatbot a chatbot model notebook to answer all your diabetes queries using tensorflow library how to use download all the required libraries and run the code in an ipyhton file e g jupyter notebook ,https://github.com/WanjiruCate,Jupyter Notebook
São Paulo,51,4,0,7, pima indians diabetes ml_ net in this example using the pima indians diabetes dataset we will perform a classification between people with positive and negative diagnoses to perform the classification we use net core 2 1 ml net 0 5 previews ,https://github.com/thayssa1186,GPL-3.0 license
Boston,18,15,29,0, diabetes manager general assembly web development immersive project 2 overview and purpose the purpose of this project was to demonstrate coding crud actions in a full stack application i coded this after having been in ga s web deveopment program for six weeks the the back end uses ruby on rails with a postgressql database and the front end uses javascript and jqery to manipulate the dom user instructions sign up with a username and password then sign in can create doses each dose is stored in the database with a medicine users can create new medicines to assign to a dose from the dose window ,https://github.com/MFBrewster,Jupyter Notebook
"Panjab University, Chandigarh",3,4,0,1, diabetes ,https://github.com/kundumeenu,"Updated Mar 27, 2017"
"Los Angeles, CA",5,5,5,419, this project was bootstrapped with create react app available scripts in the project directory you can run yarn start runs the app in the development mode open http localhost 3000 to view it in the browser the page will reload if you make edits you will also see any lint errors in the console yarn test launches the test runner in the interactive watch mode see the section about running tests for more information yarn build builds the app for production to the build folder it correctly bundles react in production mode and optimizes the build for the best performance the build is minified and the filenames include the hashes your app is ready to be deployed see the section about deployment for more information yarn eject note this is a one way operation once you eject you can t go back if you aren t satisfied with the build tool and configuration choices you can eject at any time this command will remove the single build dependency from your project instead it will copy all the configuration files and the transitive dependencies webpack babel eslint etc right into your project so you have full control over them all of the commands except eject will still work but they will point to the copied scripts so you can tweak them at this point you re on your own you don t have to ever use eject the curated feature set is suitable for small and middle deployments and you shouldn t feel obligated to use this feature however we understand that this tool wouldn t be useful if you couldn t customize it when you are ready for it learn more you can learn more in the create react app documentation to learn react check out the react documentation code splitting this section has moved here https facebook github io create react app docs code splitting analyzing the bundle size this section has moved here https facebook github io create react app docs analyzing the bundle size making a progressive web app this section has moved here https facebook github io create react app docs making a progressive web app advanced configuration this section has moved here https facebook github io create react app docs advanced configuration deployment this section has moved here https facebook github io create react app docs deployment yarn build fails to minify this section has moved here https facebook github io create react app docs troubleshooting npm run build fails to minify ,https://github.com/angelo1104,"Updated Jul 31, 2020"
Pittsburg CA,1,1,1,7, etl of 2012 and 2014 data on adult diabetes and childhood obesity from the centres for disease control and prevention introduction diabetes is a group of diseases which is marked by the body s inability to produce sufficient amounts or to respond appropriately to insulin it is not curable but it is highly treatable diabetes types 1 and 2 are the most common types of diabetes type 1 patients need insulin for survival because their immune systems are are destroying their pancreas beta cells those that produce insulin type 2 patients exhibit insulin resistance or relative insulin deficiency obesity in children on the other hand is defined by the centres for disease control and prevention cdc as the 95th percentile or greater of the body mass index bmi distribution of children of the same age and sex hillier et al 2007 reported that the risk of childhood obesity and gestational hyperglycaemia diabetes are positively correlated hence these two diseases are of high concern moreover the cdc reported that more than 100 million adults are living with diabetes in the u s a and cheung et al 2016 reported that childhood obesity is a public health concern in the country a possible first step in alleviating the effects of these diseases is to determine their prevalence in the 54 the states or territories of the u s a this project aimed to extract data from publicly available cdc information about adult diabetes and childhood obesity transform the data and load the data into a database it also aimed to create a flask app which would render the transformed data into html methodology three jupyter notebooks were used for extracting transforming and loading the diabetes and obesity data clean_chronic_disease_indicators ipynb clean_nutrition_data ipynb join_obesity_diabetes_tables ipynb in addition the mysql database diabetes_db was created using the diabetes sql script on the other hand a flask app diabetes_app py was developed to display the table and plots generated from the data onto html this app is not yet online and currently lives on the localhost upon download the code for these plots are found in join_obesity_diabetes_tables ipynb extraction data was extracted from two datasets provided by the cdc 1 on chronic disease indicators in the u s a and 2 on nutrition physical activity and obesity in women infants and children both datasets were downloaded as csv files and extracted using python version 3 6 pandas module in separate jupyter notebooks dependencies import pandas as pd the chronic diseases indicators file contains the statistics for diabetes prevalence in adults 18 years old on the other hand the data for occurrence of obesity in children 2 4 years old are found in the nutrition physical activity and obesity file load csv file as dataframe the csv files are stored locally in a resources folder but because they exceed github s file size requirement links to the google drive copy of the files are provided diseasedata pd read_csv resources u s _chronic_disease_indicators__cdi_ csv nutr_df pd read_csv resources nutrition__physical_activity__and_obesity_ _women__infant__and_child csv transformation filtering the dataframe for the most relevant columns the columns of interest in diseasedata were those that provided information about the crude prevalence of adult diabetes in 2012 and in 2014 hence the dataframe chronic_df was generated as follows chronic_df diseasedata yearend locationdesc topic question datavalueunit datavaluetype datavalue stratification1 the columns of interest in nutr_df provided information about obesity in children 2 4 years old in 2012 and in 2014 therefore the next iteration of the dataframe was generated with the following code nutr_df2 nutr_df yearend locationdesc question data_value stratificationid1 select the values for 2010 2012 and 2014 originally this project intended to extract data for three years 2010 2012 and 2014 hence the codes used to subset the dataframes for the identified years were years 2010 2012 2014 chronic_df2 chronic_df chronic_df yearend isin years nutr_df3 nutr_df2 nutr_df2 yearend isin years select diabetes as the chronic disease of interest there were numerous chronic diseases in the chronic_df dataframe because diabetes in adults was of interest rows pertaining for this disease were selected chronic_df3 chronic_df2 chronic_df2 topic diabetes obesity was not selected in the nutr_df dataframe because all rows were associated with obesity and weight status select rows on us states and territories the chronic diseases dataframe featured data for each u s state and territory and country wide data the country wide data was removed from the dataframe since this project was focused only on data from the different states and territories chronic_df4 chronic_df3 chronic_df3 locationdesc united states this step was not performed in the nutrition dataframe because it did not contain country wide data just for each state and territory select rows with no stratification value overall the values to be presented were for overall prevalence hence the other stratification e g age gender ethnicity were filtered out for the latest iteration of nutr_df the dataframe was also filtered for the target question obesity in 2 4 year old children for the latest iteration of chronic_df rows pertaining to crude prevalence were retained nutr_df4 nutr_df3 query stratificationid1 overall question percent of wic children aged 2 to 4 years who have obesity chronic_df5 chronic_df4 query datavaluetype crude prevalence stratification1 overall the filtering of chronic_df was refined by selecting the prevalence of diabetes in adults 18 years chronic_df6 chronic_df5 chronic_df5 question prevalence of diagnosed diabetes among adults aged 18 years removal of columns that showed the same information after all the filtering the latest iteration of the dataframes nutr_df4 and chronic_df6 contained category columns that contained the same values in their rows hence these columns had to be removed and their values were used as names of the data columns rename columns for clarity chronic_df6 chronic_df6 rename columns yearend year locationdesc us_state datavalue adult_diabetics_percent nutr_df4 nutr_df4 rename columns yearend year locationdesc us_state data_value obese_children_percent further clean the dataset chronic_df7 chronic_df6 year us_state adult_diabetics_percent nutr_df4 nutr_df4 yearend locationdesc data_value creating a database the nutrition and the chronic dataframes could now loaded into the diabetes_db which has been written in mysql two tables were created in this database 1 obesity and 2 diabetes loading into the database the obesity data from nutr_df4 was loaded into the obesity table while the diabetes data from chronic_df was loaded into the diabetes table through sqlalchemy dependencies from sqlalchemy import create_engine from config import password the config py file containing the password to mysql was not included in the github repository for security purposes a connection to diabetes_db was created as follows conn root 0 localhost 3306 diabetes_db format password password is in a separate file engine create_engine f mysql conn the presence of the two tables in diabetes_db was first confirmed before loading data engine table_names the data was then loaded using the following script if_exists is set to replace so that if the code were to be run again the data wouldn t be appended as duplicates index was set to false so that the index assigned to the data in the dataframes would not be saved in the database chronic_df7 to_sql name diabetes con engine if_exists replace index false nutr_df4 to_sql name obesity con engine if_exists replace index false joining tables and a second etl a third table was created in diabetes_db called merged this would contain the resulting data from joining the data from the obesity and the diabetes tables sqlalchemy was used to create a connection to the updated database and the presence of the three tables was confirmed using the code above to extract the data from the obesity and the diabetes table pandas was used read the table contents for diabetes diabetes pd read_sql select from diabetes con engine diabetes diabetes sort_values by us_state read the table contents for obesity obesity pd read_sql select from obesity con engine obesity obesity sort_values by us_state the data was sorted in alphabetical order of the u s state or territory then the data was transformed by merging the two dataframes diabetes and obesity based on year and u s state merge diabetes and obesity dataframes merged pd merge diabetes obesity on year us_state how inner using inner to merge the two dataframes caused rows pertaining to 2010 data to be removed hence only data for two years 2012 and 2014 were retained the resulting dataframe was loaded into the merged table of diabetes_db merged to_sql name merged con engine if_exists replace index false the newly loaded data could be read either using mysql or pandas in jupyter notebook pd read_sql_query select from merged con engine head or in mysql workbench select from merged extras creating a flask app that renders static html files visualising diabetes and obesity trends per statefor 2012 and 2014 in the third jupyter notebook the merged dataframe was further cleaned to replace none with nan and to convert numerical values from string to float convert none values to nan merged fillna value pd np nan inplace true merged adult_diabetics_percent merged adult_diabetics_percent astype float the dataframe was then split into two based on the year merged_2012 merged merged year 2012 merged_2014 merged merged year 2014 to create a bar chart for diabetes for 2012 the following code was used x_pos np arange len merged_2012 us_state diabetics_2012 list merged_2012 adult_diabetics_percent plt figure figsize 16 8 plt bar x_pos diabetics_2012 plt xticks x_pos merged_2012 us_state rotation 90 fontsize 12 plt yticks fontsize 12 plt xlabel u s state or territory fontsize 16 plt ylabel prevalence of adult diabetics fontsize 16 plt tight_layout this code was used to pattern other code to generate data for diabetes in 2014 and obesity for 2012 and for 2014 to create plots that compared data between years per disease merged was spliced to create new dataframe based on diseases merged_diabetics merged year us_state adult_diabetics_percent merged_obesity merged year us_state obese_children_percent to create a grouped bar chart the dataframes had to be pivoted such that the datapoints were placed into two columns based on the year merged_diabetics merged_diabetics pivot index us_state columns year merged_obesity merged_obesity pivot index us_state columns year the grouped bar plot for diabetes prevalence comparing 2012 and 2014 was generated with the following script ax merged_diabetics plot kind bar figsize 16 8 ax set_xlabel u s state or territory fontsize 16 ax set_ylabel prevalence of adult diabetes fontsize 16 ax legend 2012 2014 fontsize 12 plt tight_layout a similar bar plot for obesity prevalence was also generated adopting the code above all plots were saved into the images folder for example plt savefig images diabetics_2012_2014 png flask app development the diabetes_app py needed pymysql to connect to the diabetes_db database and several flask features from flask import flask request render_template jsonify import pymysql from config import password the connection to the database was created db pymysql connect localhost root f password diabetes_db several static html pages were rendered by some of the routes for example app route def intro return render_template index html these static pages have been pre loaded with the plots saved in the images folder one html page however contains the data extracted from the connected database app route data def index cursor db cursor sql select from merged cursor execute sql columns col 0 for col in cursor description gets the column headers in the merged table results dict zip columns row for row in cursor fetchall output is a list of dictionaries return render_template data html results results using cursor fetchall would lead to a list of tuples containing values output example tuple in html 2012 alabama 12 2 15 6 to be able to render the data onto a html table the output needed to be a list of dictionaries hence the column names were extracted from the merged table as well the first element in a list outputted by cursor description for each row effectively each tuple in the list the column names and the rows were zipped and converted to a dictionary output example dictionary in html year 2012 us_state alabama adult_diabetics_percent 12 2 obese_children_percent 15 6 the dictionary was rendered onto the table in data html table loop through rows in results each row contains year state diabetics obese values for row in results tr td row year td td row us_state td td row adult_diabetics_percent td td row obese_children_percent td tr endfor table ,https://github.com/rochiecuevas,"Updated Apr 11, 2016"
Jodhpur,1,0,0,2, diabetes prediction ,https://github.com/pankaj-iitj,"Updated Nov 24, 2019"
United Kingdom,32,36,10,207, machine learning algorithms for diabetes prediction ,https://github.com/kulasedat,Jupyter Notebook
Spain,1,1,1,1, diabetes app de ayuda en tratamiento de diabetes mellitus tipo i dosificación de insulina y predicción de hipoglucemias el trabajo se va a realizar sobre las siguientes fases 1 creación en java del sistema de dosificación de insulina actualmente resuelto y probado con junit para todas las situaciones posibles 2 app de android para gestionar el histórico de glucosas e insulina finalizada 3 machine learning para predecir y evitar hipoglucemias finalizado ,https://github.com/efervescencia,Jupyter Notebook
Fran Sancisco,55,4,30,12, in 2010 i raised 3500 for the juvenile diabetes research foundation my sister is sufferer this is the website i used to help raise funds see it here ride jimwhimpey com ,https://github.com/jimwhimpey,MIT license
"Pune,INDIA",5,2,6,800, medium blog diabetes_prediction in this project the objective is to predict whether the person has diabetes or not based on various features like glucose level insulin age bmi we will use the pima indians dataset from the uci machine learning repository quick demo we can predict diabetes from two ways user will fill the data after that prediction will be displayed over ui user can upload csv file with required features and then get downloadable predicted csv file below is screenshot for sample csv while bulk prediction same features column sequence needs to be maintained in uploading file description of variables in the dataset pregnancies number of times pregnant glucose plasma glucose concentration a 2 hours in an oral glucose tolerance test bloodpressure diastolic blood pressure mm hg skinthickness triceps skin fold thickness mm insulin 2 hour serum insulin mu u ml bmi body mass index weight in kg height in m ² diabetespedigreefunction diabetes pedigree function age age years outcome class variable 0 or 1 diabetes prediction directory tree app py demo gif downloads prediction csv license models model py my_model pkl predict py transformer pkl procfile readme md requirements txt src diabetes csv static css grid css images dia jpeg style css templates index html uploads test csv app py front and back end portion of the web application downloads conatains predcited csv file based on uploaded file models contains model for prediction requirements txt required library src conatins raw data file static contains static file css img for ui templates contains templates for ui uploads uploded csv file will store here after that it will used for prediction added test file for sample installation clone this repository and unzip it create new env with python 3 and activate it install the required packages using pip install r requirements txt execute the command python app py open http 127 0 0 1 5000 in your browser technologies used license ,https://github.com/Uttam580,MATLAB
Nigeria,9,8,30,1497, diabetesml ,https://github.com/teezzan,Python
"Sydney, Australia",1,2,7,0, diabetes classifier a set of diabetes classifiers written for an ai assignment the data the dataset for this assignment is the pima indian diabetes dataset it contains 768 instances described by 8 numeric attributes there are two classes xa0 xa0 yes and no each entry in the dataset corresponds to a patient s record the attributes are personal characteristics and test measurements the class shows if the person shows signs of diabetes or not the patients are from pima indian heritage hence the name of the dataset the classifiers and tools naïve bayes decision tree and 10 fold stratified cross validation were implemented ,https://github.com/Technoash,"Updated May 6, 2020"
between Brittany and South Korea,99,39,418,217, django diabetes django diabetes is a personal glucose manager it allows you to follow your daily health improvements as i m not suffering from diabetes i am very open to suggestions for improvement of this project that i designed for a friend for example with the type of examinations etc currently i maintain the project by evolving versions of python and django requirements python 3 6 django 2 arrow 0 12 x installation to get the project from your virtualenv do git clone https github com push things dj diabetes git to add the needed modules do pip install r requirements txt create a new user who will be the admin python manage py createsuperuser and at least python manage py makemigrations dj_diabetes python manage py migrate dj_diabetes python manage py loaddata dj_diabetes_preferences json python manage py createsuperuser to startup the database and load the data ,https://github.com/foxmask,Python
"Chennai,Tamil Nadu,India",31,29,23,23, prediction of diabetes type 2 mellitus hosted link click here this is a machine learning project based on the prediction of type 2 diabetes with a given data it uses logistic regression to classify the diabetic outcomes of each person s record the diabetes is growing threat nowadays one of the reasons being that there is no perfect cure for it there are actually two types of diabetes namely type 1 type 2 the type 2 diabetes is commonly called diabetes mellitus it can be defined as a chronic condition that affects the way the body processes blood sugar glucose we consider the mellitus here after several researches we found that some parameters are directly responsible for the mellitus to occur by using the data of the people with diabetes and without diabetes a dataset has been build we use that dataset to classify the people who are in the risk of getting diabetes directory structure code this directory contains the source code files prediction rmd source code r markdown file data diabetes csv the dataset results this directory has the codes and the outputs presented in a neat format prediction html presents the project as html file with wonderful designs download is recommended prediction pdf presents the project as simple document table of contents the topics are elaborated in the markdown results introduction loading the required libraries data loading correlations visualizations preparing the data logistic regression prediction roc curve comparison conclusion ,https://github.com/SridharCR,Jupyter Notebook
"Washington, DC",564,10,29,546, diabetes data use case contents motivation usage docker install manual install motivation interpretability the missing link between machine learning healthcare and the fda recent advances enable practitioners to break open machine learning s black box august 20 2018 andrew langsner co founder managing partner sphaeric ai patrick hall senior director of product h2o ai from machine learning algorithms guiding analytical tests in drug manufacture to predictive models recommending courses of treatment to sophisticated software that can read images better than doctors machine learning has promised a new world of healthcare where algorithms can assist or even outperform professionals in consistency and accuracy saving money and avoiding potentially life threatening mistakes but what if your doctor told you that you were sick but could not tell you why imagine a hospital that hospitalized and discharged patients but was unable to provide specific justification for these decisions for decades this was a roadblock for the adoption of machine learning algorithms in healthcare they could make data driven decisions that helped practitioners payers and patients but they couldn t tell users why those decisions were made today recent advances in machine learning research and implementation may have cracked open the black box of algorithmic decision making a flurry of research into interpretation or the ability to explain or to present in understandable terms to a human has resulted in a growing body of credible literature and tools for accurate models with interpretable inner workings accountability and fairness of algorithmic decision making and post hoc explanation of complex model predictions can this research really be applied to healthcare and if so where would it be most immediately impactful three suggestions and an example use case are put forward below three hurdles to black box algorithms fda and drug development the fda has notoriously stringent requirements for the approval of new drugs this could pose a challenge to drug companies experimenting with machine learning to enforce quality control and even to analyze test results to better detect the presence and proper concentrations of drug compounds the fda requires full transparency and replicability for all analytical tests involved in the manufacture of new drugs in the past this has involved providing lists of formulas and methods for analyzing test results e g chromatography tests but questions remain about how the fda would treat a new drug application nda that relied on a complex black box machine learning model to maintain quality in the manufacturing process interpretable machine learning techniques could help address some of these questions medical devices this year for the first time the fda approved an artificial intelligence device this marks a major milestone for medical devices using proprietary black box algorithms that can diagnose diseases from images the device was approved through the fda s de novo premarket review pathway which provides a review process for novel devices that represent a low to moderate risk the low to moderate risk classification is key to a successful de novo review but the fda has yet to approve a device determined to have a high potential risk to patient outcomes for example a diagnostic algorithm where a false positive could lead to an invasive and risky procedure extra controls would likely be needed on such an algorithm and with the latest model interpretability techniques it may be possible to have those additional checks another possibility for bringing machine learning into medical devices came about in late 2016 when congress passed the 21st century cures act the act excludes what is commonly referred to as clinical decision support cds software from fda purview under certain conditions namely that the healthcare provider using the software can independently review the basis for the software s recommendation in december 2017 the fda published guidance stating that the sources supporting the recommendation or underlying the rationale for the recommendation should be identified and easily accessible to the intended user understandable by the intended user e g data points whose meaning is well understood by the intended user traditional machine learning software would not meet this criterion due to the black box nature of most machine learning models however with recent advances in interpretability it is possible to display explanations for every decision made by a machine learning model potentially enabling a user to verify the soundness of the rationale behind the automated recommendation risk based guidance much attention has been given to hospital readmissions since passage of the affordable care act and the beginning of the hospital readmissions reduction program predictive models developed with machine learning have shown to be successful at predicting avoidable hospital readmissions and some health systems have already adopted machine learning based models successfully at the same time interest into the use of machine learning to develop automated fraud and waste detection on incoming medical claims has been growing amongst government entities and private insurance companies now it should be possible for these models to explain their decisions to practitioners payers and patients allowing users to investigate the actual reasons behind automated medical decision making and determine if an individual decision was reasonable or could be improved toward the application of interpretable machine learning in healthcare since more deliberations about the ethical medical and economic implications of interpretable machine learning in healthcare are certainly necessary an example risk based guidance use case has been provided for the sake of furthering such discussions the example use case should be similar to the methods that organizations are already using for predicting 30 day readmissions but instead of using an older linear modeling approach the example uses a nonlinear white box machine learning approach to achieve about a 1 increase in readmission prediction accuracy explanatory techniques are then used to describe both the internal mechanisms of the model and every prediction the model makes it is left to practitioners and domain experts to determine whether the example techniques truly surpass more established methods by any number of criteria e g ability to handle heterogeneous data accuracy or interpretability the only explicit argument made here is when people s lives are being affected by mathematical models it does seem prudent to investigate and evaluate potentially impactful new modeling and analysis techniques the open source and freely available example use case is available here https github com jphall663 diabetes_use_case blob master binary classification readmit ipynb the authors look forward to continuing this discussion online and at the upcoming xavier healthcare ai summit usage the files in this repository are meant to provide a reproducible example for interpretable machine learning techniques applied to a basic health care use case the jupyter notebook herein will be presented at the xavier ai in healthcare conference the training data for this use case is available here the data set contains demographic and medical information about many patients it is used to create a white box classifier for predicting who will be readmitted to a hospital within 30 days of discharge this notebook attempts to showcase the use of a complex but transparent nonlinear classifier as an alternative to more traditional linear model approaches typically it requires many different methods to properly interpret a nonlinear classifier several different types of interpretation and explanation methods are used here including global and local shapley variable importance partial dependence individual conditional expectation ice surrogate decision trees dockerfile instructions a dockerfile is provided to build a docker container with all necessary packages and dependencies this is the easiest way to use the example notebook if you are on mac os x nix or windows 10 to do so install and start docker the from a terminal run create a directory for the dockerfile mkdir anaconda_py36_h2o_xgboost_graphviz_shap fetch the dockerfile curl https raw githubusercontent com jphall663 diabetes_use_case master anaconda_py36_h2o_xgboost_graphviz_shap dockerfile anaconda_py36_h2o_xgboost_graphviz_shap dockerfile build a docker image from the dockefile docker build no cache anaconda_py36_h2o_xgboost_graphviz_shap display docker image ids you are probably interested in the most recently created image you will need it for the command directly below docker images start the docker image and the jupyter notebook server docker run i t p 8888 8888 image_id bin bash c opt conda bin conda install jupyter y quiet opt conda bin jupyter notebook notebook dir diabetes_use_case ip port 8888 no browser if you need root priviledges to run docker try this command sudo docker run i t p 8888 8888 image_id bin bash c opt conda bin conda install jupyter y quiet opt conda bin jupyter notebook notebook dir diabetes_use_case ip port 8888 no browser allow root then navigate to port 8888 on your machine probably http localhost 8888 manual installation for users with older windows machines or others who can t don t use docker the notebook dependencies can be installed manually anaconda python 5 1 0 from the anaconda archives java the latest stable h2o python package git xgboost with python bindings graphviz install the shap python package anaconda python java git and graphviz must be added to your system path from a terminal clone the repository with examples git clone https github com jphall663 diabetes_use_case git cd diabetes_use_case start the jupyter notebook server jupyter notebook navigate to the port jupyter directs you to on your machine probably http localhost 8888 ,https://github.com/jphall663,JavaScript
"Boston, MA",40,19,100,327, dm2nsc data conversion tool for uploading diabetes m log data to nightscout install python3 requirements with pip install r requirements txt update and rename secret py example to secret py and run getdata py potentially as a cronjob ,https://github.com/jwoglom,Kotlin
"New Delhi, India",98,248,126,212, ml mt webapp this is one of major project of my undergraduate degree program here i have developed a disease predicting web app which using the concept of machine learning makes predictions about various diseases like malaria pneumonia diabetes etc down below are the names of the various model files used cancer model model diabetes model model1 heart model model2 liver model model4 kidney model model3 malaria model model111 h5 pneumonia model my_model h5 kernals used for training deep learning model kernal for malaria model https www kaggle com shobhit18th malaria cell kernal for pneumonia model https www kaggle com shobhit18th keras nn x ray predict pneumonia 86 54 details of various datasets used for model development cancer cancer csv in the repository diabetes diabetes csv in the repository heart heart csv in the repository liver https www kaggle com uciml indian liver patient records kidney https www kaggle com mansoordaku ckdisease malaria https www kaggle com iarunava cell images for detecting malaria pneumonia https www kaggle com paultimothymooney chest xray pneumonia tools used for project development python 3 7 version flask opencv pandas numpy html css for using the project clone the repository and type the following commands in the termial set flask_app app py flask run the whole project is deployed on heroku cloud here is the link where you can access the project live https myml mtapp herokuapp com thank you ,https://github.com/shobhitsrivastava-ds,Python
Nigeria,3,6,8,0, diatension an awareness focused website on diabetes hypertension ,https://github.com/kayAbdulrazaq,JavaScript
Jamshedpur,5,17,48,0, ml_from_scratch diabetes mellitus prediction using machine learning ,https://github.com/AntimKhel,TSQL
"San Jose, CA",6,0,19,6, diabetes prediction data mining project to detect if a person is diabetic using logistic regression in r dataset description in particular all patients here are females at least 21 years old of pima indian heritage number of instances 768 number of attributes 8 plus class attributes number of times pregnant plasma glucose concentration a 2 hours in an oral glucose tolerance test diastolic blood pressure mm hg triceps skin fold thickness mm 2 hour serum insulin mu u ml body mass index weight in kg height in m 2 diabetes pedigree function age years class variable 0 or 1 class distribution class value 1 is interpreted as tested positive for diabetes class value number of instances 0 500 1 268 ,https://github.com/jerisalan,Jupyter Notebook
"Kolkata, West Bengal, India",14,2,2,188, genre to predict if the person is suffering from diabetes or not on the basis of information entered movie genre prediction table of content demo overview installation deployment on heroku demo link overview this is a web app which will predict diabetes installation the code is written in python 3 6 10 if you don t have python installed you can find it here if you are using a lower version of python you can upgrade using the pip package ensuring you have the latest version of pip to install the required packages and libraries run this command in the project directory after cloning the repository pip install r requirements txt deployment on heroku login or signup in order to create virtual app you can either connect your github profile or download ctl to manually deploy this project our next step would be to follow the instruction given on heroku documentation to deploy a web app technologies used ,https://github.com/ANJALIAGARWAL-IT,MIT license
"Irvine, CA",9,18,36,19, diabetes monitoring assist a project in the winter 2019 offering of cs 125 next generation search systems at the university of california irvine about the project our group has developed a mobile application that will help diabetic individuals keep track of the their food intake and exercise the application s goal is to be able to suggest healthy recipes and workout schedules for the individual based on research specifically done for diabetics we have chosen to tackle this problem because diabetes is a huge problem in the united states and a worldwide epidemic statistics has shown that 1 in 11 adults have diabetes that accounts to over 415 million people we hope that with our application can help improve the lives of people living with this condition team member andre ace aquiler jason padilla kunal kathuria wyte krongapiradee attributions estimated calorie needs table from health gov nutritional goals table from health gov glyphs from icons8 food search and nutrition apis powered by nutritionix tutorials on raywenderlich com ,https://github.com/wytesk133,GPL-3.0 license
"Oulu, Finland. ",3,0,0,52, this android application is a wellbeing fitness application developed for people who are diabetic this application allow user to view statistics on his activities to track the physical activities we tried to cover social spectrum by adding friends feature such as if a user is going for exercise or any other activities he can invite his friends the app is developed with basic features and it needs future work dashboard ,https://github.com/MuradAhmad,HTML
"Mumbai, India",4,0,8,131, diabetes prediction this is a project that aims to build a smart versatile app that can predict the probbability of diabetes in a person using basic information this machine learning project involves mainly 8 steps deciding the title collection of data data cleaning exploratory data analysis designing the models hyperparameter tuning deploying the model building a front end application open for the users ,https://github.com/kxerxess,Python
Mumbai,4,5,2,47, pima indian diabetes prediction pima indian diabetes prediction the dataset consists of several medical predictor variables and one target variable outcome predictor variables includes the number of pregnancies the patient has had their bmi insulin level age and so on the main objective is to build a machine learning model to accurately predict whether or not the patients in the dataset have diabetes or not source https www kaggle com uciml pima indians diabetes database ,https://github.com/VishalMalpure,"Updated Feb 5, 2018"
USA,3,0,0,25, nutrition expert system gestational diabetes ,https://github.com/sharminpathan,Jupyter Notebook
The Netherlands,3,0,0,7, welcome to rails rails is a web application framework that includes everything needed to create database backed web applications according to the model view control pattern this pattern splits the view also called the presentation into dumb templates that are primarily responsible for inserting pre built data in between html tags the model contains the smart domain objects such as account product person post that holds all the business logic and knows how to persist themselves to a database the controller handles the incoming requests such as save new account update product show post by manipulating the model and directing data to the view in rails the model is handled by what s called an object relational mapping layer entitled active record this layer allows you to present the data from database rows as objects and embellish these data objects with business logic methods you can read more about active record in files vendor rails activerecord readme html the controller and view are handled by the action pack which handles both layers by its two parts action view and action controller these two layers are bundled in a single package due to their heavy interdependence this is unlike the relationship between the active record and action pack that is much more separate each of these packages can be used independently outside of rails you can read more about action pack in files vendor rails actionpack readme html getting started at the command prompt create a new rails application tt rails new myapp tt where tt myapp tt is the application name change directory to myapp and start the web server tt cd myapp rails server tt run with help for options go to localhost 3000 and you ll see welcome aboard you re riding ruby on rails follow the guidelines to start developing your application you can find the following resources handy the getting started guide guides rubyonrails org getting_started html ruby on rails tutorial book www railstutorial org debugging rails sometimes your application goes wrong fortunately there are a lot of tools that will help you debug it and get it back on the rails first area to check is the application log files have tail f commands running on the server log and development log rails will automatically display debugging and runtime information to these files debugging info will also be shown in the browser on requests from 127 0 0 1 you can also log your own messages directly into the log file from your code using the ruby logger class from inside your controllers example class weblogcontroller actioncontroller base def destroy weblog weblog find params id weblog destroy logger info time now destroyed weblog id weblog id end end the result will be a message in your log file along the lines of mon oct 08 14 22 29 1000 2007 destroyed weblog id 1 more information on how to use the logger is at www ruby doc org core also ruby documentation can be found at www ruby lang org there are several books available online as well programming ruby www ruby doc org docs programmingruby pickaxe learn to program pine fm learntoprogram a beginners guide these two books will bring you up to speed on the ruby language and also on programming in general debugger debugger support is available through the debugger command when you start your mongrel or webrick server with debugger this means that you can break out of execution at any point in the code investigate and change the model and then resume execution you need to install ruby debug to run the server in debugging mode with gems use sudo gem install ruby debug example class weblogcontroller actioncontroller base def index posts post all debugger end end so the controller will accept the action run the first line then present you with a irb prompt in the server window here you can do things like posts inspect post 0x14a6be8 attributes title nil body nil id 1 post 0x14a6620 attributes title rails body only ten id 2 posts first title hello from a debugger hello from a debugger and even better you can examine how your runtime objects actually work f posts first post 0x13630c4 attributes title nil body nil id 1 f display all 152 possibilities y or n finally when you re ready to resume execution you can enter cont console the console is a ruby shell which allows you to interact with your application s domain model here you ll have all parts of the application configured just like it is when the application is running you can inspect domain models change values and save to the database starting the script without arguments will launch it in the development environment to start the console run rails console from the application directory options passing the s sandbox argument will rollback any modifications made to the database passing an environment name as an argument will load the corresponding environment example rails console production to reload your controllers and models after launching the console run reload more information about irb can be found at http www rubycentral org pickaxe irb html dbconsole you can go to the command line of your database directly through rails dbconsole you would be connected to the database with the credentials defined in database yml starting the script without arguments will connect you to the development database passing an argument will connect you to a different database like rails dbconsole production currently works for mysql postgresql and sqlite 3 description of contents the default directory structure of a generated ruby on rails application app assets images javascripts stylesheets controllers helpers mailers models views layouts config environments initializers locales db doc lib tasks log public script test fixtures functional integration performance unit tmp cache pids sessions sockets vendor assets stylesheets plugins app holds all the code that s specific to this particular application app assets contains subdirectories for images stylesheets and javascript files app controllers holds controllers that should be named like weblogs_controller rb for automated url mapping all controllers should descend from applicationcontroller which itself descends from actioncontroller base app models holds models that should be named like post rb models descend from activerecord base by default app views holds the template files for the view that should be named like weblogs index html erb for the weblogscontroller index action all views use eruby syntax by default app views layouts holds the template files for layouts to be used with views this models the common header footer method of wrapping views in your views define a layout using the tt layout default tt and create a file named default html erb inside default html erb call yield to render the view using this layout app helpers holds view helpers that should be named like weblogs_helper rb these are generated for you automatically when using generators for controllers helpers can be used to wrap functionality for your views into methods config configuration files for the rails environment the routing map the database and other dependencies db contains the database schema in schema rb db migrate contains all the sequence of migrations for your schema doc this directory is where your application documentation will be stored when generated using tt rake doc app tt lib application specific libraries basically any kind of custom code that doesn t belong under controllers models or helpers this directory is in the load path public the directory available for the web server also contains the dispatchers and the default html files this should be set as the document_root of your web server script helper scripts for automation and generation test unit and functional tests along with fixtures when using the rails generate command template test files will be generated for you and placed in this directory vendor external libraries that the application depends on also includes the plugins subdirectory if the app has frozen rails those gems also go here under vendor rails this directory is in the load path ,https://github.com/HaKr,Python
"Helsinki, Finland.",1,9,3,2, diabetes prediction application using python this application is made using sklearn machine learning libraries and pyqt5 for its graphical ui support vector machine classifies input data with 80 accuracy pima indians diabetes dataset from the uci archive is used to train the model how to start firstly install all dependencies via the following commands pip3 install r requirements txt now train the application in machine as python3 diabetes py finally run the application python3 gui py now insert all the requires details to see the result built with python 3 7 pyqt5 for the gui author md shariful alam shariful acknowledgments uci archive for providing the datasets ,https://github.com/Shourov1,GPL-3.0 license
bangalore,1,9,3,1, diabetes ,https://github.com/vikassrm,R
"kathmandu,Nepal",0,1,0,3, diabetes prediction diabetes prediction from pima indian diabetes database ,https://github.com/Basantakatuwal,Python
"Seattle, WA",96,7,73,211, example mlflow diabetes project mlflow model using elasticnet sklearn and plots lasso vs elasticnet descent paths usage via python python train_diabetes py alpha l1_ratio execute a mlproject published on github ensure you have installed conda mlflow run https github com dennyglee mlflow diabetes example git p alpha 0 02 p l1_ratio 0 05 remote execution on databricks mlflow run m databricks cluster spec cluster json uri usage notes remote execution on databricks refer to databricks jobs new cluster on how to configure cluster json currently this feature requires a new cluster creation attributions this project uses the sklearn diabetes dataset to predict diabetes progression using elasticnet the predicted progression column is a quantitative measure of disease progression one year after baseline this proeject combines the above with the lasso descent path plot original author alexandre gramfort alexandre gramfort inria fr license bsd 3 clause ,https://github.com/dennyglee,MIT license
"Razole ,East Godavari, Andhra Pradesh",96,7,73,301, diabetes implementation our implementation is mainly divided into five steps exploring the data exploring the data using jupyter notebook and verify we need to data preprocessing or not for this dataset there is no need to data preprocessing before split into train and test data check outcome balanced or in balance whether it is in balanced then we used f1_score split into train and test in this we will use train_test_split which is available in sklearn model selection where we will be dividing the data into train 80 and test splits of 20 benchmark model vs other models we can choose our benchmark model as logisticregression because it is simple and easy to implement we will apply a series of classification algorithms like logistic regression decision trees random forests etc the next step is to find and compare f1_scores of all the models against the benchmark model apply grid search optimization since we can observe that the model with f1_score is random forests with an f1_score of 97 65 we can select random forest for further optimizing it by applying the same algorithm on a different set of parameters to find the one with the best f1_score display results here we will apply many supervised learning algorithms and decide which algorithm is best suited for our dataset we can apply the grid search on some chosen algorithms to decide the best parameters among many finding gridsearchcv optimal f1_score changing parameters to get best optimal f1_score gridsearchcv parameters like n_estimator max_depth etc to get best f1_score for this best classification model using gridsearchcv i faced some more extra time taken to find best f1_score to change parameters to this diabetes machine learning project external libraries used scikit learn 2 numpy 3 matplotlib 4 pandas data 1 diabetes dataset available from kaggle here https www kaggle com johndasilva diabetes 2 also included in directory of repository in original form ,https://github.com/tejaanuchuri,C#
Uppsala,75,13,125,248, open source diabetes an experiment in making my diabetes open source this repo acts as the first step in making my diabetes open source it s very early in it s tracks and the project scope is still being decided in issue 2 background i m a developer designer and tinkerer in my first year of high school i designed a concept for a blood glucose meter that measured your bg contionusley a couple of years later unrelated to my concept that concept existed it s called cgm contionous glucose monitoring after using a cgm i starting playing with the concept of an open platform where this data could be collected visualized and made available to researchers diabetics doctors etc before developing the software i did some research and found the tidepool project which is the exact same thing but further developed that i envisioned hurray this repo acts as a playground for how to make my personal diabetes data more valuable by open sourcing it and making it available for visualization analysis current equipment freestyle libre blood glucose sensor medtronic minimed paradigm 754 insulin pump microsoft band 2 for general telemtry see issue 3 other projects for reference https github com bewest insulaudit the tidepool project fjord fido concept ,https://github.com/abergs,MATLAB
"London, UK",1,6,5,157, diabetes ,https://github.com/ArmanHussainDS,Apache-2.0 license
"Edison, New Jersey",4,5,0,178, diabetesdetection this is an application used to detect whether a user has diabetes given certain parameters and locate the nearest doctor features predicts whether user may have diabetes uses a custom machine learning model which has been trained by using over 10000 data points of users with diabetes and their pre exisitng conditions this machine learning model has been trained to an accuracy of 99 6 on microsoft azure s machine learning service recomends nearest docter using google maps api and better doctors api this application recommends the highest rated doctors within the span of 20 miles of your current locaitonl tech stack app development xamerin c location and maps google maps api diabetic detection ml model azure machine learning service ,https://github.com/jeevanantham2002,"Updated Aug 13, 2019"
